{
  "{\"assumptions\":{},\"sourceRoot\":\"C:\\\\personal\\\\interviews Tranning\\\\AUI_STUFF\\\\test_node\\\\src\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\personal\\\\interviews Tranning\\\\AUI_STUFF\\\\test_node\",\"filename\":\"C:\\\\personal\\\\interviews Tranning\\\\AUI_STUFF\\\\test_node\\\\src\\\\index.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\personal\\\\interviews Tranning\\\\AUI_STUFF\\\\test_node\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.16.0": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "C:\\personal\\interviews Tranning\\AUI_STUFF\\test_node\\src\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\personal\\interviews Tranning\\AUI_STUFF\\test_node",
      "filename": "C:\\personal\\interviews Tranning\\AUI_STUFF\\test_node\\src\\index.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "C:\\personal\\interviews Tranning\\AUI_STUFF\\test_node",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\personal\\interviews Tranning\\AUI_STUFF\\test_node\\src\\index.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "C:\\personal\\interviews Tranning\\AUI_STUFF\\test_node\\src\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\personal\\interviews Tranning\\AUI_STUFF\\test_node\\src\\",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "import app from \"./server\";\nimport { MongoClient } from \"mongodb\";\nimport UsersDAO from \"../src/dao/usersDAO\"; //import UsersDAO from \"./dao/usersDAO\"\n//import CommentsDAO from \"./dao/commentsDAO\"\n\nconst port = process.env.PORT || 8000;\n/**\r\nTicket: Connection Pooling\r\n\r\nPlease change the configuration of the MongoClient object by setting the\r\nmaximum connection pool size to 50 active connections.\r\n*/\n\n/**\r\nTicket: Timeouts\r\n\r\nPlease prevent the program from waiting indefinitely by setting the write\r\nconcern timeout limit to 2500 milliseconds.\r\n*/\n\nMongoClient.connect(process.env.FOOTBALL_DB_URI, // TODO: Connection Pooling\n// Set the poolSize to 50 connections.\n// TODO: Timeouts\n// Set the write timeout limit to 2500 milliseconds.\n{\n  useNewUrlParser: true\n}).catch(err => {\n  console.error(err.stack);\n  process.exit(1);\n}).then(async client => {\n  // await MoviesDAO.injectDB(client)\n  await UsersDAO.injectDB(client); // await CommentsDAO.injectDB(client)\n\n  app.listen(port, () => {\n    console.log(`listening on port ${port}`);\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImFwcCIsIk1vbmdvQ2xpZW50IiwiVXNlcnNEQU8iLCJwb3J0IiwicHJvY2VzcyIsImVudiIsIlBPUlQiLCJjb25uZWN0IiwiRk9PVEJBTExfREJfVVJJIiwidXNlTmV3VXJsUGFyc2VyIiwiY2F0Y2giLCJlcnIiLCJjb25zb2xlIiwiZXJyb3IiLCJzdGFjayIsImV4aXQiLCJ0aGVuIiwiY2xpZW50IiwiaW5qZWN0REIiLCJsaXN0ZW4iLCJsb2ciXSwibWFwcGluZ3MiOiJBQUFBLE9BQU9BLEdBQVAsTUFBZ0IsVUFBaEI7QUFDQSxTQUFTQyxXQUFULFFBQTRCLFNBQTVCO0FBQ0EsT0FBT0MsUUFBUCxNQUFxQixxQkFBckIsQyxDQUNBO0FBQ0E7O0FBRUEsTUFBTUMsSUFBSSxHQUFHQyxPQUFPLENBQUNDLEdBQVIsQ0FBWUMsSUFBWixJQUFvQixJQUFqQztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUFMLFdBQVcsQ0FBQ00sT0FBWixDQUNFSCxPQUFPLENBQUNDLEdBQVIsQ0FBWUcsZUFEZCxFQUVFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBRUMsRUFBQUEsZUFBZSxFQUFFO0FBQW5CLENBTkYsRUFRR0MsS0FSSCxDQVFTQyxHQUFHLElBQUk7QUFDWkMsRUFBQUEsT0FBTyxDQUFDQyxLQUFSLENBQWNGLEdBQUcsQ0FBQ0csS0FBbEI7QUFDQVYsRUFBQUEsT0FBTyxDQUFDVyxJQUFSLENBQWEsQ0FBYjtBQUNELENBWEgsRUFZR0MsSUFaSCxDQVlRLE1BQU1DLE1BQU4sSUFBZ0I7QUFDckI7QUFDQyxRQUFNZixRQUFRLENBQUNnQixRQUFULENBQWtCRCxNQUFsQixDQUFOLENBRm9CLENBR3JCOztBQUNDakIsRUFBQUEsR0FBRyxDQUFDbUIsTUFBSixDQUFXaEIsSUFBWCxFQUFpQixNQUFNO0FBQ3JCUyxJQUFBQSxPQUFPLENBQUNRLEdBQVIsQ0FBYSxxQkFBb0JqQixJQUFLLEVBQXRDO0FBQ0QsR0FGRDtBQUdELENBbkJIIiwic291cmNlUm9vdCI6IkM6XFxwZXJzb25hbFxcaW50ZXJ2aWV3cyBUcmFubmluZ1xcQVVJX1NUVUZGXFx0ZXN0X25vZGVcXHNyY1xcIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGFwcCBmcm9tIFwiLi9zZXJ2ZXJcIlxyXG5pbXBvcnQgeyBNb25nb0NsaWVudCB9IGZyb20gXCJtb25nb2RiXCJcclxuaW1wb3J0IFVzZXJzREFPIGZyb20gXCIuLi9zcmMvZGFvL3VzZXJzREFPXCJcclxuLy9pbXBvcnQgVXNlcnNEQU8gZnJvbSBcIi4vZGFvL3VzZXJzREFPXCJcclxuLy9pbXBvcnQgQ29tbWVudHNEQU8gZnJvbSBcIi4vZGFvL2NvbW1lbnRzREFPXCJcclxuXHJcbmNvbnN0IHBvcnQgPSBwcm9jZXNzLmVudi5QT1JUIHx8IDgwMDBcclxuXHJcbi8qKlxyXG5UaWNrZXQ6IENvbm5lY3Rpb24gUG9vbGluZ1xyXG5cclxuUGxlYXNlIGNoYW5nZSB0aGUgY29uZmlndXJhdGlvbiBvZiB0aGUgTW9uZ29DbGllbnQgb2JqZWN0IGJ5IHNldHRpbmcgdGhlXHJcbm1heGltdW0gY29ubmVjdGlvbiBwb29sIHNpemUgdG8gNTAgYWN0aXZlIGNvbm5lY3Rpb25zLlxyXG4qL1xyXG5cclxuLyoqXHJcblRpY2tldDogVGltZW91dHNcclxuXHJcblBsZWFzZSBwcmV2ZW50IHRoZSBwcm9ncmFtIGZyb20gd2FpdGluZyBpbmRlZmluaXRlbHkgYnkgc2V0dGluZyB0aGUgd3JpdGVcclxuY29uY2VybiB0aW1lb3V0IGxpbWl0IHRvIDI1MDAgbWlsbGlzZWNvbmRzLlxyXG4qL1xyXG5cclxuTW9uZ29DbGllbnQuY29ubmVjdChcclxuICBwcm9jZXNzLmVudi5GT09UQkFMTF9EQl9VUkksXHJcbiAgLy8gVE9ETzogQ29ubmVjdGlvbiBQb29saW5nXHJcbiAgLy8gU2V0IHRoZSBwb29sU2l6ZSB0byA1MCBjb25uZWN0aW9ucy5cclxuICAvLyBUT0RPOiBUaW1lb3V0c1xyXG4gIC8vIFNldCB0aGUgd3JpdGUgdGltZW91dCBsaW1pdCB0byAyNTAwIG1pbGxpc2Vjb25kcy5cclxuICB7IHVzZU5ld1VybFBhcnNlcjogdHJ1ZSB9LFxyXG4pXHJcbiAgLmNhdGNoKGVyciA9PiB7XHJcbiAgICBjb25zb2xlLmVycm9yKGVyci5zdGFjaylcclxuICAgIHByb2Nlc3MuZXhpdCgxKVxyXG4gIH0pXHJcbiAgLnRoZW4oYXN5bmMgY2xpZW50ID0+IHtcclxuICAgLy8gYXdhaXQgTW92aWVzREFPLmluamVjdERCKGNsaWVudClcclxuICAgIGF3YWl0IFVzZXJzREFPLmluamVjdERCKGNsaWVudClcclxuICAgLy8gYXdhaXQgQ29tbWVudHNEQU8uaW5qZWN0REIoY2xpZW50KVxyXG4gICAgYXBwLmxpc3Rlbihwb3J0LCAoKSA9PiB7XHJcbiAgICAgIGNvbnNvbGUubG9nKGBsaXN0ZW5pbmcgb24gcG9ydCAke3BvcnR9YClcclxuICAgIH0pXHJcbiAgfSlcclxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "app",
        "MongoClient",
        "UsersDAO",
        "port",
        "process",
        "env",
        "PORT",
        "connect",
        "MONGO_DB_URI",
        "useNewUrlParser",
        "catch",
        "err",
        "console",
        "error",
        "stack",
        "exit",
        "then",
        "client",
        "injectDB",
        "listen",
        "log"
      ],
      "mappings": "AAAA,OAAOA,GAAP,MAAgB,UAAhB;AACA,SAASC,WAAT,QAA4B,SAA5B;AACA,OAAOC,QAAP,MAAqB,qBAArB,C,CACA;AACA;;AAEA,MAAMC,IAAI,GAAGC,OAAO,CAACC,GAAR,CAAYC,IAAZ,IAAoB,IAAjC;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEAL,WAAW,CAACM,OAAZ,CACEH,OAAO,CAACC,GAAR,CAAYG,eADd,EAEE;AACA;AACA;AACA;AACA;AAAEC,EAAAA,eAAe,EAAE;AAAnB,CANF,EAQGC,KARH,CAQSC,GAAG,IAAI;AACZC,EAAAA,OAAO,CAACC,KAAR,CAAcF,GAAG,CAACG,KAAlB;AACAV,EAAAA,OAAO,CAACW,IAAR,CAAa,CAAb;AACD,CAXH,EAYGC,IAZH,CAYQ,MAAMC,MAAN,IAAgB;AACrB;AACC,QAAMf,QAAQ,CAACgB,QAAT,CAAkBD,MAAlB,CAAN,CAFoB,CAGrB;;AACCjB,EAAAA,GAAG,CAACmB,MAAJ,CAAWhB,IAAX,EAAiB,MAAM;AACrBS,IAAAA,OAAO,CAACQ,GAAR,CAAa,qBAAoBjB,IAAK,EAAtC;AACD,GAFD;AAGD,CAnBH",
      "sourceRoot": "C:\\personal\\interviews Tranning\\AUI_STUFF\\test_node\\src\\",
      "sourcesContent": [
        "import app from \"./server\"\r\nimport { MongoClient } from \"mongodb\"\r\nimport UsersDAO from \"../src/dao/usersDAO\"\r\n//import UsersDAO from \"./dao/usersDAO\"\r\n//import CommentsDAO from \"./dao/commentsDAO\"\r\n\r\nconst port = process.env.PORT || 8000\r\n\r\n/**\r\nTicket: Connection Pooling\r\n\r\nPlease change the configuration of the MongoClient object by setting the\r\nmaximum connection pool size to 50 active connections.\r\n*/\r\n\r\n/**\r\nTicket: Timeouts\r\n\r\nPlease prevent the program from waiting indefinitely by setting the write\r\nconcern timeout limit to 2500 milliseconds.\r\n*/\r\n\r\nMongoClient.connect(\r\n  process.env.MONGO_DB_URI,\r\n  // TODO: Connection Pooling\r\n  // Set the poolSize to 50 connections.\r\n  // TODO: Timeouts\r\n  // Set the write timeout limit to 2500 milliseconds.\r\n  { useNewUrlParser: true },\r\n)\r\n  .catch(err => {\r\n    console.error(err.stack)\r\n    process.exit(1)\r\n  })\r\n  .then(async client => {\r\n   // await MoviesDAO.injectDB(client)\r\n    await UsersDAO.injectDB(client)\r\n   // await CommentsDAO.injectDB(client)\r\n    app.listen(port, () => {\r\n      console.log(`listening on port ${port}`)\r\n    })\r\n  })\r\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1637492697040
  },
  "{\"assumptions\":{},\"sourceRoot\":\"C:\\\\personal\\\\interviews Tranning\\\\AUI_STUFF\\\\test_node\\\\src\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\personal\\\\interviews Tranning\\\\AUI_STUFF\\\\test_node\",\"filename\":\"C:\\\\personal\\\\interviews Tranning\\\\AUI_STUFF\\\\test_node\\\\src\\\\index.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\personal\\\\interviews Tranning\\\\AUI_STUFF\\\\test_node\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-class-static-block\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ClassBody\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.16.0": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "C:\\personal\\interviews Tranning\\AUI_STUFF\\test_node\\src\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\personal\\interviews Tranning\\AUI_STUFF\\test_node",
      "filename": "C:\\personal\\interviews Tranning\\AUI_STUFF\\test_node\\src\\index.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "C:\\personal\\interviews Tranning\\AUI_STUFF\\test_node",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-static-block",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ClassBody": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-private-property-in-object",
          "visitor": {
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\personal\\interviews Tranning\\AUI_STUFF\\test_node\\src\\index.js",
        "plugins": [
          "classStaticBlock",
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\personal\\interviews Tranning\\AUI_STUFF\\test_node\\src\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\personal\\interviews Tranning\\AUI_STUFF\\test_node\\src\\",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _server = _interopRequireDefault(require(\"./server\"));\n\nvar _mongodb = require(\"mongodb\");\n\nvar _usersDAO = _interopRequireDefault(require(\"../src/dao/usersDAO\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n//import UsersDAO from \"./dao/usersDAO\"\n//import CommentsDAO from \"./dao/commentsDAO\"\nvar port = process.env.PORT || 8000;\n/**\r\nTicket: Connection Pooling\r\n\r\nPlease change the configuration of the MongoClient object by setting the\r\nmaximum connection pool size to 50 active connections.\r\n*/\n\n/**\r\nTicket: Timeouts\r\n\r\nPlease prevent the program from waiting indefinitely by setting the write\r\nconcern timeout limit to 2500 milliseconds.\r\n*/\n\n_mongodb.MongoClient.connect(process.env.FOOTBALL_DB_URI, // TODO: Connection Pooling\n// Set the poolSize to 50 connections.\n// TODO: Timeouts\n// Set the write timeout limit to 2500 milliseconds.\n{\n  useNewUrlParser: true\n}).catch(function (err) {\n  console.error(err.stack);\n  process.exit(1);\n}).then( /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(client) {\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _usersDAO.default.injectDB(client);\n\n          case 2:\n            // await CommentsDAO.injectDB(client)\n            _server.default.listen(port, function () {\n              console.log(`listening on port ${port}`);\n            });\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}());\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbInBvcnQiLCJwcm9jZXNzIiwiZW52IiwiUE9SVCIsIk1vbmdvQ2xpZW50IiwiY29ubmVjdCIsIkZPT1RCQUxMX0RCX1VSSSIsInVzZU5ld1VybFBhcnNlciIsImNhdGNoIiwiZXJyIiwiY29uc29sZSIsImVycm9yIiwic3RhY2siLCJleGl0IiwidGhlbiIsImNsaWVudCIsIlVzZXJzREFPIiwiaW5qZWN0REIiLCJhcHAiLCJsaXN0ZW4iLCJsb2ciXSwibWFwcGluZ3MiOiI7O0FBQUE7O0FBQ0E7O0FBQ0E7Ozs7Ozs7O0FBQ0E7QUFDQTtBQUVBLElBQU1BLElBQUksR0FBR0MsT0FBTyxDQUFDQyxHQUFSLENBQVlDLElBQVosSUFBb0IsSUFBakM7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBQyxxQkFBWUMsT0FBWixDQUNFSixPQUFPLENBQUNDLEdBQVIsQ0FBWUksZUFEZCxFQUVFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBRUMsRUFBQUEsZUFBZSxFQUFFO0FBQW5CLENBTkYsRUFRR0MsS0FSSCxDQVFTLFVBQUFDLEdBQUcsRUFBSTtBQUNaQyxFQUFBQSxPQUFPLENBQUNDLEtBQVIsQ0FBY0YsR0FBRyxDQUFDRyxLQUFsQjtBQUNBWCxFQUFBQSxPQUFPLENBQUNZLElBQVIsQ0FBYSxDQUFiO0FBQ0QsQ0FYSCxFQVlHQyxJQVpIO0FBQUEscUVBWVEsaUJBQU1DLE1BQU47QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsbUJBRUVDLGtCQUFTQyxRQUFULENBQWtCRixNQUFsQixDQUZGOztBQUFBO0FBR0w7QUFDQ0csNEJBQUlDLE1BQUosQ0FBV25CLElBQVgsRUFBaUIsWUFBTTtBQUNyQlUsY0FBQUEsT0FBTyxDQUFDVSxHQUFSLENBQWEscUJBQW9CcEIsSUFBSyxFQUF0QztBQUNELGFBRkQ7O0FBSkk7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsR0FaUjs7QUFBQTtBQUFBO0FBQUE7QUFBQSIsInNvdXJjZVJvb3QiOiJDOlxccGVyc29uYWxcXGludGVydmlld3MgVHJhbm5pbmdcXEFVSV9TVFVGRlxcdGVzdF9ub2RlXFxzcmNcXCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBhcHAgZnJvbSBcIi4vc2VydmVyXCJcclxuaW1wb3J0IHsgTW9uZ29DbGllbnQgfSBmcm9tIFwibW9uZ29kYlwiXHJcbmltcG9ydCBVc2Vyc0RBTyBmcm9tIFwiLi4vc3JjL2Rhby91c2Vyc0RBT1wiXHJcbi8vaW1wb3J0IFVzZXJzREFPIGZyb20gXCIuL2Rhby91c2Vyc0RBT1wiXHJcbi8vaW1wb3J0IENvbW1lbnRzREFPIGZyb20gXCIuL2Rhby9jb21tZW50c0RBT1wiXHJcblxyXG5jb25zdCBwb3J0ID0gcHJvY2Vzcy5lbnYuUE9SVCB8fCA4MDAwXHJcblxyXG4vKipcclxuVGlja2V0OiBDb25uZWN0aW9uIFBvb2xpbmdcclxuXHJcblBsZWFzZSBjaGFuZ2UgdGhlIGNvbmZpZ3VyYXRpb24gb2YgdGhlIE1vbmdvQ2xpZW50IG9iamVjdCBieSBzZXR0aW5nIHRoZVxyXG5tYXhpbXVtIGNvbm5lY3Rpb24gcG9vbCBzaXplIHRvIDUwIGFjdGl2ZSBjb25uZWN0aW9ucy5cclxuKi9cclxuXHJcbi8qKlxyXG5UaWNrZXQ6IFRpbWVvdXRzXHJcblxyXG5QbGVhc2UgcHJldmVudCB0aGUgcHJvZ3JhbSBmcm9tIHdhaXRpbmcgaW5kZWZpbml0ZWx5IGJ5IHNldHRpbmcgdGhlIHdyaXRlXHJcbmNvbmNlcm4gdGltZW91dCBsaW1pdCB0byAyNTAwIG1pbGxpc2Vjb25kcy5cclxuKi9cclxuXHJcbk1vbmdvQ2xpZW50LmNvbm5lY3QoXHJcbiAgcHJvY2Vzcy5lbnYuRk9PVEJBTExfREJfVVJJLFxyXG4gIC8vIFRPRE86IENvbm5lY3Rpb24gUG9vbGluZ1xyXG4gIC8vIFNldCB0aGUgcG9vbFNpemUgdG8gNTAgY29ubmVjdGlvbnMuXHJcbiAgLy8gVE9ETzogVGltZW91dHNcclxuICAvLyBTZXQgdGhlIHdyaXRlIHRpbWVvdXQgbGltaXQgdG8gMjUwMCBtaWxsaXNlY29uZHMuXHJcbiAgeyB1c2VOZXdVcmxQYXJzZXI6IHRydWUgfSxcclxuKVxyXG4gIC5jYXRjaChlcnIgPT4ge1xyXG4gICAgY29uc29sZS5lcnJvcihlcnIuc3RhY2spXHJcbiAgICBwcm9jZXNzLmV4aXQoMSlcclxuICB9KVxyXG4gIC50aGVuKGFzeW5jIGNsaWVudCA9PiB7XHJcbiAgIC8vIGF3YWl0IE1vdmllc0RBTy5pbmplY3REQihjbGllbnQpXHJcbiAgICBhd2FpdCBVc2Vyc0RBTy5pbmplY3REQihjbGllbnQpXHJcbiAgIC8vIGF3YWl0IENvbW1lbnRzREFPLmluamVjdERCKGNsaWVudClcclxuICAgIGFwcC5saXN0ZW4ocG9ydCwgKCkgPT4ge1xyXG4gICAgICBjb25zb2xlLmxvZyhgbGlzdGVuaW5nIG9uIHBvcnQgJHtwb3J0fWApXHJcbiAgICB9KVxyXG4gIH0pXHJcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "port",
        "process",
        "env",
        "PORT",
        "MongoClient",
        "connect",
        "FOOTBALL_DB_URI",
        "useNewUrlParser",
        "catch",
        "err",
        "console",
        "error",
        "stack",
        "exit",
        "then",
        "client",
        "UsersDAO",
        "injectDB",
        "app",
        "listen",
        "log"
      ],
      "mappings": ";;AAAA;;AACA;;AACA;;;;;;;;AACA;AACA;AAEA,IAAMA,IAAI,GAAGC,OAAO,CAACC,GAAR,CAAYC,IAAZ,IAAoB,IAAjC;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEAC,qBAAYC,OAAZ,CACEJ,OAAO,CAACC,GAAR,CAAYI,eADd,EAEE;AACA;AACA;AACA;AACA;AAAEC,EAAAA,eAAe,EAAE;AAAnB,CANF,EAQGC,KARH,CAQS,UAAAC,GAAG,EAAI;AACZC,EAAAA,OAAO,CAACC,KAAR,CAAcF,GAAG,CAACG,KAAlB;AACAX,EAAAA,OAAO,CAACY,IAAR,CAAa,CAAb;AACD,CAXH,EAYGC,IAZH;AAAA,qEAYQ,iBAAMC,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEEC,kBAASC,QAAT,CAAkBF,MAAlB,CAFF;;AAAA;AAGL;AACCG,4BAAIC,MAAJ,CAAWnB,IAAX,EAAiB,YAAM;AACrBU,cAAAA,OAAO,CAACU,GAAR,CAAa,qBAAoBpB,IAAK,EAAtC;AACD,aAFD;;AAJI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAZR;;AAAA;AAAA;AAAA;AAAA",
      "sourceRoot": "C:\\personal\\interviews Tranning\\AUI_STUFF\\test_node\\src\\",
      "sourcesContent": [
        "import app from \"./server\"\r\nimport { MongoClient } from \"mongodb\"\r\nimport UsersDAO from \"../src/dao/usersDAO\"\r\n//import UsersDAO from \"./dao/usersDAO\"\r\n//import CommentsDAO from \"./dao/commentsDAO\"\r\n\r\nconst port = process.env.PORT || 8000\r\n\r\n/**\r\nTicket: Connection Pooling\r\n\r\nPlease change the configuration of the MongoClient object by setting the\r\nmaximum connection pool size to 50 active connections.\r\n*/\r\n\r\n/**\r\nTicket: Timeouts\r\n\r\nPlease prevent the program from waiting indefinitely by setting the write\r\nconcern timeout limit to 2500 milliseconds.\r\n*/\r\n\r\nMongoClient.connect(\r\n  process.env.FOOTBALL_DB_URI,\r\n  // TODO: Connection Pooling\r\n  // Set the poolSize to 50 connections.\r\n  // TODO: Timeouts\r\n  // Set the write timeout limit to 2500 milliseconds.\r\n  { useNewUrlParser: true },\r\n)\r\n  .catch(err => {\r\n    console.error(err.stack)\r\n    process.exit(1)\r\n  })\r\n  .then(async client => {\r\n   // await MoviesDAO.injectDB(client)\r\n    await UsersDAO.injectDB(client)\r\n   // await CommentsDAO.injectDB(client)\r\n    app.listen(port, () => {\r\n      console.log(`listening on port ${port}`)\r\n    })\r\n  })\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1637492697040
  },
  "{\"assumptions\":{},\"sourceRoot\":\"C:\\\\personal\\\\interviews Tranning\\\\AUI_STUFF\\\\test_node\\\\src\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\personal\\\\interviews Tranning\\\\AUI_STUFF\\\\test_node\",\"filename\":\"C:\\\\personal\\\\interviews Tranning\\\\AUI_STUFF\\\\test_node\\\\src\\\\server.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\personal\\\\interviews Tranning\\\\AUI_STUFF\\\\test_node\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-class-static-block\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ClassBody\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.16.0": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "C:\\personal\\interviews Tranning\\AUI_STUFF\\test_node\\src\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\personal\\interviews Tranning\\AUI_STUFF\\test_node",
      "filename": "C:\\personal\\interviews Tranning\\AUI_STUFF\\test_node\\src\\server.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "C:\\personal\\interviews Tranning\\AUI_STUFF\\test_node",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-static-block",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ClassBody": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-private-property-in-object",
          "visitor": {
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\personal\\interviews Tranning\\AUI_STUFF\\test_node\\src\\server.js",
        "plugins": [
          "classStaticBlock",
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\personal\\interviews Tranning\\AUI_STUFF\\test_node\\src\\server.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\personal\\interviews Tranning\\AUI_STUFF\\test_node\\src\\",
        "sourceFileName": "server.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _bodyParser = _interopRequireDefault(require(\"body-parser\"));\n\nvar _users = _interopRequireDefault(require(\"./api/users.route\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n//import cors from \"cors\"\n//import morgan from \"morgan\"\nvar app = (0, _express.default)();\napp.use(cors());\nprocess.env.NODE_ENV !== \"prod\" && app.use(morgan(\"dev\"));\napp.use(_bodyParser.default.json());\napp.use(_bodyParser.default.urlencoded({\n  extended: true\n})); // Register api routes\n\napp.use(\"/api/v1/users\", _users.default); //app.use(\"/api/v1/user\", users)\n\napp.use(\"/status\", _express.default.static(\"build\"));\napp.use(\"/\", _express.default.static(\"build\"));\napp.use(\"*\", function (req, res) {\n  return res.status(404).json({\n    error: \"not found\"\n  });\n});\nvar _default = app;\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlcnZlci5qcyJdLCJuYW1lcyI6WyJhcHAiLCJ1c2UiLCJjb3JzIiwicHJvY2VzcyIsImVudiIsIk5PREVfRU5WIiwibW9yZ2FuIiwiYm9keVBhcnNlciIsImpzb24iLCJ1cmxlbmNvZGVkIiwiZXh0ZW5kZWQiLCJ1c2VycyIsImV4cHJlc3MiLCJzdGF0aWMiLCJyZXEiLCJyZXMiLCJzdGF0dXMiLCJlcnJvciJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUNBOztBQUdBOzs7O0FBRkE7QUFDQTtBQUdBLElBQU1BLEdBQUcsR0FBRyx1QkFBWjtBQUVBQSxHQUFHLENBQUNDLEdBQUosQ0FBUUMsSUFBSSxFQUFaO0FBQ0FDLE9BQU8sQ0FBQ0MsR0FBUixDQUFZQyxRQUFaLEtBQXlCLE1BQXpCLElBQW1DTCxHQUFHLENBQUNDLEdBQUosQ0FBUUssTUFBTSxDQUFDLEtBQUQsQ0FBZCxDQUFuQztBQUNBTixHQUFHLENBQUNDLEdBQUosQ0FBUU0sb0JBQVdDLElBQVgsRUFBUjtBQUNBUixHQUFHLENBQUNDLEdBQUosQ0FBUU0sb0JBQVdFLFVBQVgsQ0FBc0I7QUFBRUMsRUFBQUEsUUFBUSxFQUFFO0FBQVosQ0FBdEIsQ0FBUixFLENBRUE7O0FBQ0FWLEdBQUcsQ0FBQ0MsR0FBSixDQUFRLGVBQVIsRUFBeUJVLGNBQXpCLEUsQ0FDQTs7QUFDQVgsR0FBRyxDQUFDQyxHQUFKLENBQVEsU0FBUixFQUFtQlcsaUJBQVFDLE1BQVIsQ0FBZSxPQUFmLENBQW5CO0FBQ0FiLEdBQUcsQ0FBQ0MsR0FBSixDQUFRLEdBQVIsRUFBYVcsaUJBQVFDLE1BQVIsQ0FBZSxPQUFmLENBQWI7QUFDQWIsR0FBRyxDQUFDQyxHQUFKLENBQVEsR0FBUixFQUFhLFVBQUNhLEdBQUQsRUFBTUMsR0FBTjtBQUFBLFNBQWNBLEdBQUcsQ0FBQ0MsTUFBSixDQUFXLEdBQVgsRUFBZ0JSLElBQWhCLENBQXFCO0FBQUVTLElBQUFBLEtBQUssRUFBRTtBQUFULEdBQXJCLENBQWQ7QUFBQSxDQUFiO2VBRWVqQixHIiwic291cmNlUm9vdCI6IkM6XFxwZXJzb25hbFxcaW50ZXJ2aWV3cyBUcmFubmluZ1xcQVVJX1NUVUZGXFx0ZXN0X25vZGVcXHNyY1xcIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGV4cHJlc3MgZnJvbSBcImV4cHJlc3NcIlxyXG5pbXBvcnQgYm9keVBhcnNlciBmcm9tIFwiYm9keS1wYXJzZXJcIlxyXG4vL2ltcG9ydCBjb3JzIGZyb20gXCJjb3JzXCJcclxuLy9pbXBvcnQgbW9yZ2FuIGZyb20gXCJtb3JnYW5cIlxyXG5pbXBvcnQgdXNlcnMgZnJvbSBcIi4vYXBpL3VzZXJzLnJvdXRlXCJcclxuXHJcbmNvbnN0IGFwcCA9IGV4cHJlc3MoKVxyXG5cclxuYXBwLnVzZShjb3JzKCkpXHJcbnByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2RcIiAmJiBhcHAudXNlKG1vcmdhbihcImRldlwiKSlcclxuYXBwLnVzZShib2R5UGFyc2VyLmpzb24oKSlcclxuYXBwLnVzZShib2R5UGFyc2VyLnVybGVuY29kZWQoeyBleHRlbmRlZDogdHJ1ZSB9KSlcclxuXHJcbi8vIFJlZ2lzdGVyIGFwaSByb3V0ZXNcclxuYXBwLnVzZShcIi9hcGkvdjEvdXNlcnNcIiwgdXNlcnMpXHJcbi8vYXBwLnVzZShcIi9hcGkvdjEvdXNlclwiLCB1c2VycylcclxuYXBwLnVzZShcIi9zdGF0dXNcIiwgZXhwcmVzcy5zdGF0aWMoXCJidWlsZFwiKSlcclxuYXBwLnVzZShcIi9cIiwgZXhwcmVzcy5zdGF0aWMoXCJidWlsZFwiKSlcclxuYXBwLnVzZShcIipcIiwgKHJlcSwgcmVzKSA9PiByZXMuc3RhdHVzKDQwNCkuanNvbih7IGVycm9yOiBcIm5vdCBmb3VuZFwiIH0pKVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgYXBwIl19",
    "map": {
      "version": 3,
      "sources": [
        "server.js"
      ],
      "names": [
        "app",
        "use",
        "cors",
        "process",
        "env",
        "NODE_ENV",
        "morgan",
        "bodyParser",
        "json",
        "urlencoded",
        "extended",
        "users",
        "express",
        "static",
        "req",
        "res",
        "status",
        "error"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AAGA;;;;AAFA;AACA;AAGA,IAAMA,GAAG,GAAG,uBAAZ;AAEAA,GAAG,CAACC,GAAJ,CAAQC,IAAI,EAAZ;AACAC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,MAAzB,IAAmCL,GAAG,CAACC,GAAJ,CAAQK,MAAM,CAAC,KAAD,CAAd,CAAnC;AACAN,GAAG,CAACC,GAAJ,CAAQM,oBAAWC,IAAX,EAAR;AACAR,GAAG,CAACC,GAAJ,CAAQM,oBAAWE,UAAX,CAAsB;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAAtB,CAAR,E,CAEA;;AACAV,GAAG,CAACC,GAAJ,CAAQ,eAAR,EAAyBU,cAAzB,E,CACA;;AACAX,GAAG,CAACC,GAAJ,CAAQ,SAAR,EAAmBW,iBAAQC,MAAR,CAAe,OAAf,CAAnB;AACAb,GAAG,CAACC,GAAJ,CAAQ,GAAR,EAAaW,iBAAQC,MAAR,CAAe,OAAf,CAAb;AACAb,GAAG,CAACC,GAAJ,CAAQ,GAAR,EAAa,UAACa,GAAD,EAAMC,GAAN;AAAA,SAAcA,GAAG,CAACC,MAAJ,CAAW,GAAX,EAAgBR,IAAhB,CAAqB;AAAES,IAAAA,KAAK,EAAE;AAAT,GAArB,CAAd;AAAA,CAAb;eAEejB,G",
      "sourceRoot": "C:\\personal\\interviews Tranning\\AUI_STUFF\\test_node\\src\\",
      "sourcesContent": [
        "import express from \"express\"\r\nimport bodyParser from \"body-parser\"\r\n//import cors from \"cors\"\r\n//import morgan from \"morgan\"\r\nimport users from \"./api/users.route\"\r\n\r\nconst app = express()\r\n\r\napp.use(cors())\r\nprocess.env.NODE_ENV !== \"prod\" && app.use(morgan(\"dev\"))\r\napp.use(bodyParser.json())\r\napp.use(bodyParser.urlencoded({ extended: true }))\r\n\r\n// Register api routes\r\napp.use(\"/api/v1/users\", users)\r\n//app.use(\"/api/v1/user\", users)\r\napp.use(\"/status\", express.static(\"build\"))\r\napp.use(\"/\", express.static(\"build\"))\r\napp.use(\"*\", (req, res) => res.status(404).json({ error: \"not found\" }))\r\n\r\nexport default app"
      ]
    },
    "sourceType": "script",
    "mtime": 1637496772840
  },
  "{\"assumptions\":{},\"sourceRoot\":\"C:\\\\personal\\\\interviews Tranning\\\\AUI_STUFF\\\\test_node\\\\src\\\\api\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\personal\\\\interviews Tranning\\\\AUI_STUFF\\\\test_node\",\"filename\":\"C:\\\\personal\\\\interviews Tranning\\\\AUI_STUFF\\\\test_node\\\\src\\\\api\\\\users.route.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\personal\\\\interviews Tranning\\\\AUI_STUFF\\\\test_node\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-class-static-block\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ClassBody\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.16.0": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "C:\\personal\\interviews Tranning\\AUI_STUFF\\test_node\\src\\api\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\personal\\interviews Tranning\\AUI_STUFF\\test_node",
      "filename": "C:\\personal\\interviews Tranning\\AUI_STUFF\\test_node\\src\\api\\users.route.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "C:\\personal\\interviews Tranning\\AUI_STUFF\\test_node",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-static-block",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ClassBody": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-private-property-in-object",
          "visitor": {
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\personal\\interviews Tranning\\AUI_STUFF\\test_node\\src\\api\\users.route.js",
        "plugins": [
          "classStaticBlock",
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\personal\\interviews Tranning\\AUI_STUFF\\test_node\\src\\api\\users.route.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\personal\\interviews Tranning\\AUI_STUFF\\test_node\\src\\api\\",
        "sourceFileName": "users.route.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _express = require(\"express\");\n\nvar _users = _interopRequireDefault(require(\"./users.controller\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar router = new _express.Router(); // associate put, delete, and get(id)\n\nrouter.route(\"/\").get(_users.default.apiGetUsers);\nvar _default = router;\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXJzLnJvdXRlLmpzIl0sIm5hbWVzIjpbInJvdXRlciIsIlJvdXRlciIsInJvdXRlIiwiZ2V0IiwiVXNlcnNDdHJsIiwiYXBpR2V0VXNlcnMiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFDQTs7OztBQUVBLElBQU1BLE1BQU0sR0FBRyxJQUFJQyxlQUFKLEVBQWYsQyxDQUVBOztBQUNBRCxNQUFNLENBQUNFLEtBQVAsQ0FBYSxHQUFiLEVBQWtCQyxHQUFsQixDQUFzQkMsZUFBVUMsV0FBaEM7ZUFFZUwsTSIsInNvdXJjZVJvb3QiOiJDOlxccGVyc29uYWxcXGludGVydmlld3MgVHJhbm5pbmdcXEFVSV9TVFVGRlxcdGVzdF9ub2RlXFxzcmNcXGFwaVxcIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUm91dGVyIH0gZnJvbSBcImV4cHJlc3NcIlxyXG5pbXBvcnQgVXNlcnNDdHJsIGZyb20gXCIuL3VzZXJzLmNvbnRyb2xsZXJcIlxyXG5cclxuY29uc3Qgcm91dGVyID0gbmV3IFJvdXRlcigpXHJcblxyXG4vLyBhc3NvY2lhdGUgcHV0LCBkZWxldGUsIGFuZCBnZXQoaWQpXHJcbnJvdXRlci5yb3V0ZShcIi9cIikuZ2V0KFVzZXJzQ3RybC5hcGlHZXRVc2VycylcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHJvdXRlclxyXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "users.route.js"
      ],
      "names": [
        "router",
        "Router",
        "route",
        "get",
        "UsersCtrl",
        "apiGetUsers"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;;;AAEA,IAAMA,MAAM,GAAG,IAAIC,eAAJ,EAAf,C,CAEA;;AACAD,MAAM,CAACE,KAAP,CAAa,GAAb,EAAkBC,GAAlB,CAAsBC,eAAUC,WAAhC;eAEeL,M",
      "sourceRoot": "C:\\personal\\interviews Tranning\\AUI_STUFF\\test_node\\src\\api\\",
      "sourcesContent": [
        "import { Router } from \"express\"\r\nimport UsersCtrl from \"./users.controller\"\r\n\r\nconst router = new Router()\r\n\r\n// associate put, delete, and get(id)\r\nrouter.route(\"/\").get(UsersCtrl.apiGetUsers)\r\n\r\nexport default router\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1637490247422
  },
  "{\"assumptions\":{},\"sourceRoot\":\"C:\\\\personal\\\\interviews Tranning\\\\AUI_STUFF\\\\test_node\\\\src\\\\api\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\personal\\\\interviews Tranning\\\\AUI_STUFF\\\\test_node\",\"filename\":\"C:\\\\personal\\\\interviews Tranning\\\\AUI_STUFF\\\\test_node\\\\src\\\\api\\\\users.controller.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\personal\\\\interviews Tranning\\\\AUI_STUFF\\\\test_node\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-class-static-block\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ClassBody\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.16.0": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "C:\\personal\\interviews Tranning\\AUI_STUFF\\test_node\\src\\api\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\personal\\interviews Tranning\\AUI_STUFF\\test_node",
      "filename": "C:\\personal\\interviews Tranning\\AUI_STUFF\\test_node\\src\\api\\users.controller.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "C:\\personal\\interviews Tranning\\AUI_STUFF\\test_node",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-static-block",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ClassBody": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-private-property-in-object",
          "visitor": {
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\personal\\interviews Tranning\\AUI_STUFF\\test_node\\src\\api\\users.controller.js",
        "plugins": [
          "classStaticBlock",
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\personal\\interviews Tranning\\AUI_STUFF\\test_node\\src\\api\\users.controller.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\personal\\interviews Tranning\\AUI_STUFF\\test_node\\src\\api\\",
        "sourceFileName": "users.controller.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _usersDAO = _interopRequireDefault(require(\"../dao/usersDAO\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar UsersController = /*#__PURE__*/function () {\n  function UsersController() {\n    _classCallCheck(this, UsersController);\n  }\n\n  _createClass(UsersController, null, [{\n    key: \"apiGetMovies\",\n    value: function () {\n      var _apiGetMovies = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(req, res, next) {\n        var USERS_PER_PAGE, _yield$UsersDAO$getUs, usersList, totalNumUsers, response;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                USERS_PER_PAGE = 10;\n                _context.next = 3;\n                return _usersDAO.default.getUsers();\n\n              case 3:\n                _yield$UsersDAO$getUs = _context.sent;\n                usersList = _yield$UsersDAO$getUs.usersList;\n                totalNumUsers = _yield$UsersDAO$getUs.totalNumUsers;\n                response = {\n                  users: usersList,\n                  page: 0,\n                  filters: {},\n                  entries_per_page: USERS_PER_PAGE,\n                  total_results: totalNumUsers\n                };\n                res.json(response);\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function apiGetMovies(_x, _x2, _x3) {\n        return _apiGetMovies.apply(this, arguments);\n      }\n\n      return apiGetMovies;\n    }()\n  }]);\n\n  return UsersController;\n}();\n\nexports.default = UsersController;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXJzLmNvbnRyb2xsZXIuanMiXSwibmFtZXMiOlsiVXNlcnNDb250cm9sbGVyIiwicmVxIiwicmVzIiwibmV4dCIsIlVTRVJTX1BFUl9QQUdFIiwiVXNlcnNEQU8iLCJnZXRVc2VycyIsInVzZXJzTGlzdCIsInRvdGFsTnVtVXNlcnMiLCJyZXNwb25zZSIsInVzZXJzIiwicGFnZSIsImZpbHRlcnMiLCJlbnRyaWVzX3Blcl9wYWdlIiwidG90YWxfcmVzdWx0cyIsImpzb24iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7Ozs7Ozs7Ozs7Ozs7SUFFcUJBLGU7Ozs7Ozs7O2tGQUNuQixpQkFBMEJDLEdBQTFCLEVBQStCQyxHQUEvQixFQUFvQ0MsSUFBcEM7QUFBQTs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNRQyxnQkFBQUEsY0FEUixHQUN5QixFQUR6QjtBQUFBO0FBQUEsdUJBRTZDQyxrQkFBU0MsUUFBVCxFQUY3Qzs7QUFBQTtBQUFBO0FBRVVDLGdCQUFBQSxTQUZWLHlCQUVVQSxTQUZWO0FBRXFCQyxnQkFBQUEsYUFGckIseUJBRXFCQSxhQUZyQjtBQUdNQyxnQkFBQUEsUUFITixHQUdpQjtBQUNiQyxrQkFBQUEsS0FBSyxFQUFFSCxTQURNO0FBRWJJLGtCQUFBQSxJQUFJLEVBQUUsQ0FGTztBQUdiQyxrQkFBQUEsT0FBTyxFQUFFLEVBSEk7QUFJYkMsa0JBQUFBLGdCQUFnQixFQUFFVCxjQUpMO0FBS2JVLGtCQUFBQSxhQUFhLEVBQUVOO0FBTEYsaUJBSGpCO0FBVUVOLGdCQUFBQSxHQUFHLENBQUNhLElBQUosQ0FBU04sUUFBVDs7QUFWRjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxPIiwic291cmNlUm9vdCI6IkM6XFxwZXJzb25hbFxcaW50ZXJ2aWV3cyBUcmFubmluZ1xcQVVJX1NUVUZGXFx0ZXN0X25vZGVcXHNyY1xcYXBpXFwiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgVXNlcnNEQU8gZnJvbSBcIi4uL2Rhby91c2Vyc0RBT1wiXHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBVc2Vyc0NvbnRyb2xsZXIge1xyXG4gIHN0YXRpYyBhc3luYyBhcGlHZXRNb3ZpZXMocmVxLCByZXMsIG5leHQpIHtcclxuICAgIGNvbnN0IFVTRVJTX1BFUl9QQUdFID0gMTBcclxuICAgIGNvbnN0IHsgdXNlcnNMaXN0LCB0b3RhbE51bVVzZXJzIH0gPSBhd2FpdCBVc2Vyc0RBTy5nZXRVc2VycygpXHJcbiAgICBsZXQgcmVzcG9uc2UgPSB7XHJcbiAgICAgIHVzZXJzOiB1c2Vyc0xpc3QsXHJcbiAgICAgIHBhZ2U6IDAsXHJcbiAgICAgIGZpbHRlcnM6IHt9LFxyXG4gICAgICBlbnRyaWVzX3Blcl9wYWdlOiBVU0VSU19QRVJfUEFHRSxcclxuICAgICAgdG90YWxfcmVzdWx0czogdG90YWxOdW1Vc2VycyxcclxuICAgIH1cclxuICAgIHJlcy5qc29uKHJlc3BvbnNlKVxyXG4gIH1cclxufSJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "users.controller.js"
      ],
      "names": [
        "UsersController",
        "req",
        "res",
        "next",
        "USERS_PER_PAGE",
        "UsersDAO",
        "getUsers",
        "usersList",
        "totalNumUsers",
        "response",
        "users",
        "page",
        "filters",
        "entries_per_page",
        "total_results",
        "json"
      ],
      "mappings": ";;;;;;;AAAA;;;;;;;;;;;;;;IAEqBA,e;;;;;;;;kFACnB,iBAA0BC,GAA1B,EAA+BC,GAA/B,EAAoCC,IAApC;AAAA;;AAAA;AAAA;AAAA;AAAA;AACQC,gBAAAA,cADR,GACyB,EADzB;AAAA;AAAA,uBAE6CC,kBAASC,QAAT,EAF7C;;AAAA;AAAA;AAEUC,gBAAAA,SAFV,yBAEUA,SAFV;AAEqBC,gBAAAA,aAFrB,yBAEqBA,aAFrB;AAGMC,gBAAAA,QAHN,GAGiB;AACbC,kBAAAA,KAAK,EAAEH,SADM;AAEbI,kBAAAA,IAAI,EAAE,CAFO;AAGbC,kBAAAA,OAAO,EAAE,EAHI;AAIbC,kBAAAA,gBAAgB,EAAET,cAJL;AAKbU,kBAAAA,aAAa,EAAEN;AALF,iBAHjB;AAUEN,gBAAAA,GAAG,CAACa,IAAJ,CAASN,QAAT;;AAVF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O",
      "sourceRoot": "C:\\personal\\interviews Tranning\\AUI_STUFF\\test_node\\src\\api\\",
      "sourcesContent": [
        "import UsersDAO from \"../dao/usersDAO\"\r\n\r\nexport default class UsersController {\r\n  static async apiGetMovies(req, res, next) {\r\n    const USERS_PER_PAGE = 10\r\n    const { usersList, totalNumUsers } = await UsersDAO.getUsers()\r\n    let response = {\r\n      users: usersList,\r\n      page: 0,\r\n      filters: {},\r\n      entries_per_page: USERS_PER_PAGE,\r\n      total_results: totalNumUsers,\r\n    }\r\n    res.json(response)\r\n  }\r\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1637496859287
  },
  "{\"assumptions\":{},\"sourceRoot\":\"C:\\\\personal\\\\interviews Tranning\\\\AUI_STUFF\\\\test_node\\\\src\\\\dao\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\personal\\\\interviews Tranning\\\\AUI_STUFF\\\\test_node\",\"filename\":\"C:\\\\personal\\\\interviews Tranning\\\\AUI_STUFF\\\\test_node\\\\src\\\\dao\\\\usersDAO.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\personal\\\\interviews Tranning\\\\AUI_STUFF\\\\test_node\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-class-static-block\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ClassBody\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.16.0": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "C:\\personal\\interviews Tranning\\AUI_STUFF\\test_node\\src\\dao\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\personal\\interviews Tranning\\AUI_STUFF\\test_node",
      "filename": "C:\\personal\\interviews Tranning\\AUI_STUFF\\test_node\\src\\dao\\usersDAO.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "C:\\personal\\interviews Tranning\\AUI_STUFF\\test_node",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-static-block",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ClassBody": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-private-property-in-object",
          "visitor": {
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\personal\\interviews Tranning\\AUI_STUFF\\test_node\\src\\dao\\usersDAO.js",
        "plugins": [
          "classStaticBlock",
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\personal\\interviews Tranning\\AUI_STUFF\\test_node\\src\\dao\\usersDAO.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\personal\\interviews Tranning\\AUI_STUFF\\test_node\\src\\dao\\",
        "sourceFileName": "usersDAO.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _bson = require(\"bson\");\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar users;\nvar DEFAULT_SORT = [[\"tomatoes.viewer.numReviews\", -1]];\n\nvar usersDAO = /*#__PURE__*/function () {\n  function usersDAO() {\n    _classCallCheck(this, usersDAO);\n  }\n\n  _createClass(usersDAO, null, [{\n    key: \"injectDB\",\n    value: function () {\n      var _injectDB = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(conn) {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!users) {\n                  _context.next = 2;\n                  break;\n                }\n\n                return _context.abrupt(\"return\");\n\n              case 2:\n                _context.prev = 2;\n                _context.next = 5;\n                return conn.db(process.env.FOOTBALL_NS).collection(\"users\");\n\n              case 5:\n                users = _context.sent;\n                this.users = users; // this is only for testing\n\n                _context.next = 12;\n                break;\n\n              case 9:\n                _context.prev = 9;\n                _context.t0 = _context[\"catch\"](2);\n                console.error(`Unable to establish a collection handle in usersDAO: ${_context.t0}`);\n\n              case 12:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[2, 9]]);\n      }));\n\n      function injectDB(_x) {\n        return _injectDB.apply(this, arguments);\n      }\n\n      return injectDB;\n    }()\n    /**\r\n     * Finds and returns all users .\r\n     * Returns a list of objects, each object contains a user_id, name and club.\r\n     * @param {Object} filters - The search parameters to use in the query.\r\n     * @param {number} page - The page of users to retrieve.\r\n     * @param {number} usersPerPage - The number of users to display per page.\r\n     * @returns {GetUsersResult} An object with user results and total results\r\n     * that would match this query\r\n     */\n\n  }, {\n    key: \"getUsers\",\n    value: function () {\n      var _getUsers = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n        var _ref,\n            _ref$filters,\n            filters,\n            _ref$page,\n            page,\n            _ref$usersPerPage,\n            usersPerPage,\n            queryParams,\n            _queryParams$query,\n            query,\n            _queryParams$project,\n            project,\n            _queryParams$sort,\n            sort,\n            cursor,\n            displayCursor,\n            usersList,\n            totalNumUsers,\n            _args2 = arguments;\n\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _ref = _args2.length > 0 && _args2[0] !== undefined ? _args2[0] : {}, _ref$filters = _ref.filters, filters = _ref$filters === void 0 ? null : _ref$filters, _ref$page = _ref.page, page = _ref$page === void 0 ? 0 : _ref$page, _ref$usersPerPage = _ref.usersPerPage, usersPerPage = _ref$usersPerPage === void 0 ? 10 : _ref$usersPerPage;\n                queryParams = {};\n\n                if (filters) {\n                  /* if (\"text\" in filters) {\r\n                     queryParams = this.textSearchQuery(filters[\"text\"])\r\n                   } else if (\"cast\" in filters) {\r\n                     queryParams = this.castSearchQuery(filters[\"cast\"])\r\n                   } else if (\"genre\" in filters) {\r\n                     queryParams = this.genreSearchQuery(filters[\"genre\"])\r\n                   }*/\n                }\n\n                _queryParams$query = queryParams.query, query = _queryParams$query === void 0 ? {} : _queryParams$query, _queryParams$project = queryParams.project, project = _queryParams$project === void 0 ? {} : _queryParams$project, _queryParams$sort = queryParams.sort, sort = _queryParams$sort === void 0 ? DEFAULT_SORT : _queryParams$sort;\n                _context2.prev = 4;\n                _context2.next = 7;\n                return users.find(query).project(project).sort(sort);\n\n              case 7:\n                cursor = _context2.sent;\n                _context2.next = 14;\n                break;\n\n              case 10:\n                _context2.prev = 10;\n                _context2.t0 = _context2[\"catch\"](4);\n                console.error(`Unable to issue find command, ${_context2.t0}`);\n                return _context2.abrupt(\"return\", {\n                  usersList: [],\n                  totalNumUsers: 0\n                });\n\n              case 14:\n                /**\r\n                Ticket: Paging\r\n                  Before this method returns back to the API, use the \"usersPerPage\" and\r\n                \"page\" arguments to decide the users to display.\r\n                  Paging can be implemented by using the skip() and limit() cursor methods.\r\n                */\n                // Use the cursor to only return the users that belong on the current page\n                displayCursor = cursor.limit(usersPerPage);\n                _context2.prev = 15;\n                _context2.next = 18;\n                return displayCursor.toArray();\n\n              case 18:\n                usersList = _context2.sent;\n\n                if (!(page === 0)) {\n                  _context2.next = 25;\n                  break;\n                }\n\n                _context2.next = 22;\n                return users.countDocuments(query);\n\n              case 22:\n                _context2.t1 = _context2.sent;\n                _context2.next = 26;\n                break;\n\n              case 25:\n                _context2.t1 = 0;\n\n              case 26:\n                totalNumUsers = _context2.t1;\n                return _context2.abrupt(\"return\", {\n                  usersList,\n                  totalNumUsers\n                });\n\n              case 30:\n                _context2.prev = 30;\n                _context2.t2 = _context2[\"catch\"](15);\n                console.error(`Unable to convert cursor to array or problem counting documents, ${_context2.t2}`);\n                return _context2.abrupt(\"return\", {\n                  usersList: [],\n                  totalNumUsers: 0\n                });\n\n              case 34:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, null, [[4, 10], [15, 30]]);\n      }));\n\n      function getUsers() {\n        return _getUsers.apply(this, arguments);\n      }\n\n      return getUsers;\n    }()\n  }]);\n\n  return usersDAO;\n}();\n/**\r\n * Result set for getMovies method\r\n * @typedef GetUsersResult\r\n * @property {MflixMovies[]} usersList\r\n * @property {number} totalNumUsers\r\n */\n\n\nexports.default = usersDAO;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXJzREFPLmpzIl0sIm5hbWVzIjpbInVzZXJzIiwiREVGQVVMVF9TT1JUIiwidXNlcnNEQU8iLCJjb25uIiwiZGIiLCJwcm9jZXNzIiwiZW52IiwiRk9PVEJBTExfTlMiLCJjb2xsZWN0aW9uIiwiY29uc29sZSIsImVycm9yIiwiZmlsdGVycyIsInBhZ2UiLCJ1c2Vyc1BlclBhZ2UiLCJxdWVyeVBhcmFtcyIsInF1ZXJ5IiwicHJvamVjdCIsInNvcnQiLCJmaW5kIiwiY3Vyc29yIiwidXNlcnNMaXN0IiwidG90YWxOdW1Vc2VycyIsImRpc3BsYXlDdXJzb3IiLCJsaW1pdCIsInRvQXJyYXkiLCJjb3VudERvY3VtZW50cyJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOzs7Ozs7Ozs7Ozs7QUFFQSxJQUFJQSxLQUFKO0FBQ0EsSUFBTUMsWUFBWSxHQUFHLENBQUMsQ0FBQyw0QkFBRCxFQUErQixDQUFDLENBQWhDLENBQUQsQ0FBckI7O0lBRXFCQyxROzs7Ozs7Ozs4RUFDbkIsaUJBQXNCQyxJQUF0QjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEscUJBQ01ILEtBRE47QUFBQTtBQUFBO0FBQUE7O0FBQUE7O0FBQUE7QUFBQTtBQUFBO0FBQUEsdUJBTWtCRyxJQUFJLENBQUNDLEVBQUwsQ0FBUUMsT0FBTyxDQUFDQyxHQUFSLENBQVlDLFdBQXBCLEVBQWlDQyxVQUFqQyxDQUE0QyxPQUE1QyxDQU5sQjs7QUFBQTtBQU1JUixnQkFBQUEsS0FOSjtBQU9JLHFCQUFLQSxLQUFMLEdBQWFBLEtBQWIsQ0FQSixDQU91Qjs7QUFQdkI7QUFBQTs7QUFBQTtBQUFBO0FBQUE7QUFTSVMsZ0JBQUFBLE9BQU8sQ0FBQ0MsS0FBUixDQUNHLHdEQUFELFdBQTBELEVBRDVEOztBQVRKO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLE87Ozs7Ozs7O0FBY0E7QUFDRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7Ozs4RUFDRztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBOztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsa0ZBS0csRUFMSCxzQkFFQ0MsT0FGRCxFQUVDQSxPQUZELDZCQUVXLElBRlgsa0NBR0NDLElBSEQsRUFHQ0EsSUFIRCwwQkFHUSxDQUhSLHVDQUlDQyxZQUpELEVBSUNBLFlBSkQsa0NBSWdCLEVBSmhCO0FBTUtDLGdCQUFBQSxXQU5MLEdBTW1CLEVBTm5COztBQU9DLG9CQUFJSCxPQUFKLEVBQWE7QUFDWjtBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNLOztBQWZGLHFDQWlCeURHLFdBakJ6RCxDQWlCT0MsS0FqQlAsRUFpQk9BLEtBakJQLG1DQWlCZSxFQWpCZiw4Q0FpQnlERCxXQWpCekQsQ0FpQm1CRSxPQWpCbkIsRUFpQm1CQSxPQWpCbkIscUNBaUI2QixFQWpCN0IsNkNBaUJ5REYsV0FqQnpELENBaUJpQ0csSUFqQmpDLEVBaUJpQ0EsSUFqQmpDLGtDQWlCd0NoQixZQWpCeEM7QUFBQTtBQUFBO0FBQUEsdUJBb0JrQkQsS0FBSyxDQUNqQmtCLElBRFksQ0FDUEgsS0FETyxFQUVaQyxPQUZZLENBRUpBLE9BRkksRUFHWkMsSUFIWSxDQUdQQSxJQUhPLENBcEJsQjs7QUFBQTtBQW9CR0UsZ0JBQUFBLE1BcEJIO0FBQUE7QUFBQTs7QUFBQTtBQUFBO0FBQUE7QUF5QkdWLGdCQUFBQSxPQUFPLENBQUNDLEtBQVIsQ0FBZSxpQ0FBRCxZQUFtQyxFQUFqRDtBQXpCSCxrREEwQlU7QUFBRVUsa0JBQUFBLFNBQVMsRUFBRSxFQUFiO0FBQWlCQyxrQkFBQUEsYUFBYSxFQUFFO0FBQWhDLGlCQTFCVjs7QUFBQTtBQTZCQztBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFJSTtBQUNNQyxnQkFBQUEsYUF2Q1AsR0F1Q3VCSCxNQUFNLENBQUNJLEtBQVAsQ0FBYVYsWUFBYixDQXZDdkI7QUFBQTtBQUFBO0FBQUEsdUJBMEMyQlMsYUFBYSxDQUFDRSxPQUFkLEVBMUMzQjs7QUFBQTtBQTBDU0osZ0JBQUFBLFNBMUNUOztBQUFBLHNCQTJDeUJSLElBQUksS0FBSyxDQTNDbEM7QUFBQTtBQUFBO0FBQUE7O0FBQUE7QUFBQSx1QkEyQzRDWixLQUFLLENBQUN5QixjQUFOLENBQXFCVixLQUFyQixDQTNDNUM7O0FBQUE7QUFBQTtBQUFBO0FBQUE7O0FBQUE7QUFBQSwrQkEyQzBFLENBM0MxRTs7QUFBQTtBQTJDU00sZ0JBQUFBLGFBM0NUO0FBQUEsa0RBNkNVO0FBQUVELGtCQUFBQSxTQUFGO0FBQWFDLGtCQUFBQTtBQUFiLGlCQTdDVjs7QUFBQTtBQUFBO0FBQUE7QUErQ0daLGdCQUFBQSxPQUFPLENBQUNDLEtBQVIsQ0FDRyxvRUFBRCxZQUFzRSxFQUR4RTtBQS9DSCxrREFrRFU7QUFBRVUsa0JBQUFBLFNBQVMsRUFBRSxFQUFiO0FBQWlCQyxrQkFBQUEsYUFBYSxFQUFFO0FBQWhDLGlCQWxEVjs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxPOzs7Ozs7Ozs7Ozs7QUF1REg7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IkM6XFxwZXJzb25hbFxcaW50ZXJ2aWV3cyBUcmFubmluZ1xcQVVJX1NUVUZGXFx0ZXN0X25vZGVcXHNyY1xcZGFvXFwiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBPYmplY3RJZCB9IGZyb20gXCJic29uXCJcclxuXHJcbmxldCB1c2Vyc1xyXG5jb25zdCBERUZBVUxUX1NPUlQgPSBbW1widG9tYXRvZXMudmlld2VyLm51bVJldmlld3NcIiwgLTFdXVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgdXNlcnNEQU8ge1xyXG4gIHN0YXRpYyBhc3luYyBpbmplY3REQihjb25uKSB7XHJcbiAgICBpZiAodXNlcnMpIHtcclxuICAgICAgcmV0dXJuXHJcbiAgICB9XHJcbiAgICB0cnkge1xyXG4gICAgIC8vIG1mbGl4ID0gYXdhaXQgY29ubi5kYihwcm9jZXNzLmVudi5NRkxJWF9OUylcclxuICAgICAgdXNlcnMgPSBhd2FpdCBjb25uLmRiKHByb2Nlc3MuZW52LkZPT1RCQUxMX05TKS5jb2xsZWN0aW9uKFwidXNlcnNcIilcclxuICAgICAgdGhpcy51c2VycyA9IHVzZXJzIC8vIHRoaXMgaXMgb25seSBmb3IgdGVzdGluZ1xyXG4gICAgfSBjYXRjaCAoZSkge1xyXG4gICAgICBjb25zb2xlLmVycm9yKFxyXG4gICAgICAgIGBVbmFibGUgdG8gZXN0YWJsaXNoIGEgY29sbGVjdGlvbiBoYW5kbGUgaW4gdXNlcnNEQU86ICR7ZX1gLFxyXG4gICAgICApXHJcbiAgICB9XHJcbiAgfVxyXG4gIC8qKlxyXG4gICAqIEZpbmRzIGFuZCByZXR1cm5zIGFsbCB1c2VycyAuXHJcbiAgICogUmV0dXJucyBhIGxpc3Qgb2Ygb2JqZWN0cywgZWFjaCBvYmplY3QgY29udGFpbnMgYSB1c2VyX2lkLCBuYW1lIGFuZCBjbHViLlxyXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBmaWx0ZXJzIC0gVGhlIHNlYXJjaCBwYXJhbWV0ZXJzIHRvIHVzZSBpbiB0aGUgcXVlcnkuXHJcbiAgICogQHBhcmFtIHtudW1iZXJ9IHBhZ2UgLSBUaGUgcGFnZSBvZiB1c2VycyB0byByZXRyaWV2ZS5cclxuICAgKiBAcGFyYW0ge251bWJlcn0gdXNlcnNQZXJQYWdlIC0gVGhlIG51bWJlciBvZiB1c2VycyB0byBkaXNwbGF5IHBlciBwYWdlLlxyXG4gICAqIEByZXR1cm5zIHtHZXRVc2Vyc1Jlc3VsdH0gQW4gb2JqZWN0IHdpdGggdXNlciByZXN1bHRzIGFuZCB0b3RhbCByZXN1bHRzXHJcbiAgICogdGhhdCB3b3VsZCBtYXRjaCB0aGlzIHF1ZXJ5XHJcbiAgICovXHJcbiAgIHN0YXRpYyBhc3luYyBnZXRVc2Vycyh7XHJcbiAgICAvLyBoZXJlJ3Mgd2hlcmUgdGhlIGRlZmF1bHQgcGFyYW1ldGVycyBhcmUgc2V0IGZvciB0aGUgZ2V0VXNlcnMgbWV0aG9kXHJcbiAgICBmaWx0ZXJzID0gbnVsbCxcclxuICAgIHBhZ2UgPSAwLFxyXG4gICAgdXNlcnNQZXJQYWdlID0gMTAsXHJcbiAgfSA9IHt9KSB7XHJcbiAgICBsZXQgcXVlcnlQYXJhbXMgPSB7fVxyXG4gICAgaWYgKGZpbHRlcnMpIHtcclxuICAgICAvKiBpZiAoXCJ0ZXh0XCIgaW4gZmlsdGVycykge1xyXG4gICAgICAgIHF1ZXJ5UGFyYW1zID0gdGhpcy50ZXh0U2VhcmNoUXVlcnkoZmlsdGVyc1tcInRleHRcIl0pXHJcbiAgICAgIH0gZWxzZSBpZiAoXCJjYXN0XCIgaW4gZmlsdGVycykge1xyXG4gICAgICAgIHF1ZXJ5UGFyYW1zID0gdGhpcy5jYXN0U2VhcmNoUXVlcnkoZmlsdGVyc1tcImNhc3RcIl0pXHJcbiAgICAgIH0gZWxzZSBpZiAoXCJnZW5yZVwiIGluIGZpbHRlcnMpIHtcclxuICAgICAgICBxdWVyeVBhcmFtcyA9IHRoaXMuZ2VucmVTZWFyY2hRdWVyeShmaWx0ZXJzW1wiZ2VucmVcIl0pXHJcbiAgICAgIH0qL1xyXG4gICAgfVxyXG5cclxuICAgIGxldCB7IHF1ZXJ5ID0ge30sIHByb2plY3QgPSB7fSwgc29ydCA9IERFRkFVTFRfU09SVCB9ID0gcXVlcnlQYXJhbXNcclxuICAgIGxldCBjdXJzb3JcclxuICAgIHRyeSB7XHJcbiAgICAgIGN1cnNvciA9IGF3YWl0IHVzZXJzXHJcbiAgICAgICAgLmZpbmQocXVlcnkpXHJcbiAgICAgICAgLnByb2plY3QocHJvamVjdClcclxuICAgICAgICAuc29ydChzb3J0KVxyXG4gICAgfSBjYXRjaCAoZSkge1xyXG4gICAgICBjb25zb2xlLmVycm9yKGBVbmFibGUgdG8gaXNzdWUgZmluZCBjb21tYW5kLCAke2V9YClcclxuICAgICAgcmV0dXJuIHsgdXNlcnNMaXN0OiBbXSwgdG90YWxOdW1Vc2VyczogMCB9XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICBUaWNrZXQ6IFBhZ2luZ1xyXG5cclxuICAgIEJlZm9yZSB0aGlzIG1ldGhvZCByZXR1cm5zIGJhY2sgdG8gdGhlIEFQSSwgdXNlIHRoZSBcInVzZXJzUGVyUGFnZVwiIGFuZFxyXG4gICAgXCJwYWdlXCIgYXJndW1lbnRzIHRvIGRlY2lkZSB0aGUgdXNlcnMgdG8gZGlzcGxheS5cclxuXHJcbiAgICBQYWdpbmcgY2FuIGJlIGltcGxlbWVudGVkIGJ5IHVzaW5nIHRoZSBza2lwKCkgYW5kIGxpbWl0KCkgY3Vyc29yIG1ldGhvZHMuXHJcbiAgICAqL1xyXG5cclxuICAgIC8vIFVzZSB0aGUgY3Vyc29yIHRvIG9ubHkgcmV0dXJuIHRoZSB1c2VycyB0aGF0IGJlbG9uZyBvbiB0aGUgY3VycmVudCBwYWdlXHJcbiAgICBjb25zdCBkaXNwbGF5Q3Vyc29yID0gY3Vyc29yLmxpbWl0KHVzZXJzUGVyUGFnZSlcclxuXHJcbiAgICB0cnkge1xyXG4gICAgICBjb25zdCB1c2Vyc0xpc3QgPSBhd2FpdCBkaXNwbGF5Q3Vyc29yLnRvQXJyYXkoKVxyXG4gICAgICBjb25zdCB0b3RhbE51bVVzZXJzID0gcGFnZSA9PT0gMCA/IGF3YWl0IHVzZXJzLmNvdW50RG9jdW1lbnRzKHF1ZXJ5KSA6IDBcclxuXHJcbiAgICAgIHJldHVybiB7IHVzZXJzTGlzdCwgdG90YWxOdW1Vc2VycyB9XHJcbiAgICB9IGNhdGNoIChlKSB7XHJcbiAgICAgIGNvbnNvbGUuZXJyb3IoXHJcbiAgICAgICAgYFVuYWJsZSB0byBjb252ZXJ0IGN1cnNvciB0byBhcnJheSBvciBwcm9ibGVtIGNvdW50aW5nIGRvY3VtZW50cywgJHtlfWAsXHJcbiAgICAgIClcclxuICAgICAgcmV0dXJuIHsgdXNlcnNMaXN0OiBbXSwgdG90YWxOdW1Vc2VyczogMCB9XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcblxyXG4vKipcclxuICogUmVzdWx0IHNldCBmb3IgZ2V0TW92aWVzIG1ldGhvZFxyXG4gKiBAdHlwZWRlZiBHZXRVc2Vyc1Jlc3VsdFxyXG4gKiBAcHJvcGVydHkge01mbGl4TW92aWVzW119IHVzZXJzTGlzdFxyXG4gKiBAcHJvcGVydHkge251bWJlcn0gdG90YWxOdW1Vc2Vyc1xyXG4gKi8iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "usersDAO.js"
      ],
      "names": [
        "users",
        "DEFAULT_SORT",
        "usersDAO",
        "conn",
        "db",
        "process",
        "env",
        "FOOTBALL_NS",
        "collection",
        "console",
        "error",
        "filters",
        "page",
        "usersPerPage",
        "queryParams",
        "query",
        "project",
        "sort",
        "find",
        "cursor",
        "usersList",
        "totalNumUsers",
        "displayCursor",
        "limit",
        "toArray",
        "countDocuments"
      ],
      "mappings": ";;;;;;;AAAA;;;;;;;;;;;;AAEA,IAAIA,KAAJ;AACA,IAAMC,YAAY,GAAG,CAAC,CAAC,4BAAD,EAA+B,CAAC,CAAhC,CAAD,CAArB;;IAEqBC,Q;;;;;;;;8EACnB,iBAAsBC,IAAtB;AAAA;AAAA;AAAA;AAAA;AAAA,qBACMH,KADN;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA,uBAMkBG,IAAI,CAACC,EAAL,CAAQC,OAAO,CAACC,GAAR,CAAYC,WAApB,EAAiCC,UAAjC,CAA4C,OAA5C,CANlB;;AAAA;AAMIR,gBAAAA,KANJ;AAOI,qBAAKA,KAAL,GAAaA,KAAb,CAPJ,CAOuB;;AAPvB;AAAA;;AAAA;AAAA;AAAA;AASIS,gBAAAA,OAAO,CAACC,KAAR,CACG,wDAAD,WAA0D,EAD5D;;AATJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;AAcA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;8EACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,kFAKG,EALH,sBAECC,OAFD,EAECA,OAFD,6BAEW,IAFX,kCAGCC,IAHD,EAGCA,IAHD,0BAGQ,CAHR,uCAICC,YAJD,EAICA,YAJD,kCAIgB,EAJhB;AAMKC,gBAAAA,WANL,GAMmB,EANnB;;AAOC,oBAAIH,OAAJ,EAAa;AACZ;AACL;AACA;AACA;AACA;AACA;AACA;AACK;;AAfF,qCAiByDG,WAjBzD,CAiBOC,KAjBP,EAiBOA,KAjBP,mCAiBe,EAjBf,8CAiByDD,WAjBzD,CAiBmBE,OAjBnB,EAiBmBA,OAjBnB,qCAiB6B,EAjB7B,6CAiByDF,WAjBzD,CAiBiCG,IAjBjC,EAiBiCA,IAjBjC,kCAiBwChB,YAjBxC;AAAA;AAAA;AAAA,uBAoBkBD,KAAK,CACjBkB,IADY,CACPH,KADO,EAEZC,OAFY,CAEJA,OAFI,EAGZC,IAHY,CAGPA,IAHO,CApBlB;;AAAA;AAoBGE,gBAAAA,MApBH;AAAA;AAAA;;AAAA;AAAA;AAAA;AAyBGV,gBAAAA,OAAO,CAACC,KAAR,CAAe,iCAAD,YAAmC,EAAjD;AAzBH,kDA0BU;AAAEU,kBAAAA,SAAS,EAAE,EAAb;AAAiBC,kBAAAA,aAAa,EAAE;AAAhC,iBA1BV;;AAAA;AA6BC;AACJ;AACA;AACA;AACA;AACA;AAII;AACMC,gBAAAA,aAvCP,GAuCuBH,MAAM,CAACI,KAAP,CAAaV,YAAb,CAvCvB;AAAA;AAAA;AAAA,uBA0C2BS,aAAa,CAACE,OAAd,EA1C3B;;AAAA;AA0CSJ,gBAAAA,SA1CT;;AAAA,sBA2CyBR,IAAI,KAAK,CA3ClC;AAAA;AAAA;AAAA;;AAAA;AAAA,uBA2C4CZ,KAAK,CAACyB,cAAN,CAAqBV,KAArB,CA3C5C;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA,+BA2C0E,CA3C1E;;AAAA;AA2CSM,gBAAAA,aA3CT;AAAA,kDA6CU;AAAED,kBAAAA,SAAF;AAAaC,kBAAAA;AAAb,iBA7CV;;AAAA;AAAA;AAAA;AA+CGZ,gBAAAA,OAAO,CAACC,KAAR,CACG,oEAAD,YAAsE,EADxE;AA/CH,kDAkDU;AAAEU,kBAAAA,SAAS,EAAE,EAAb;AAAiBC,kBAAAA,aAAa,EAAE;AAAhC,iBAlDV;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;;;AAuDH;AACA;AACA;AACA;AACA;AACA",
      "sourceRoot": "C:\\personal\\interviews Tranning\\AUI_STUFF\\test_node\\src\\dao\\",
      "sourcesContent": [
        "import { ObjectId } from \"bson\"\r\n\r\nlet users\r\nconst DEFAULT_SORT = [[\"tomatoes.viewer.numReviews\", -1]]\r\n\r\nexport default class usersDAO {\r\n  static async injectDB(conn) {\r\n    if (users) {\r\n      return\r\n    }\r\n    try {\r\n     // mflix = await conn.db(process.env.MFLIX_NS)\r\n      users = await conn.db(process.env.FOOTBALL_NS).collection(\"users\")\r\n      this.users = users // this is only for testing\r\n    } catch (e) {\r\n      console.error(\r\n        `Unable to establish a collection handle in usersDAO: ${e}`,\r\n      )\r\n    }\r\n  }\r\n  /**\r\n   * Finds and returns all users .\r\n   * Returns a list of objects, each object contains a user_id, name and club.\r\n   * @param {Object} filters - The search parameters to use in the query.\r\n   * @param {number} page - The page of users to retrieve.\r\n   * @param {number} usersPerPage - The number of users to display per page.\r\n   * @returns {GetUsersResult} An object with user results and total results\r\n   * that would match this query\r\n   */\r\n   static async getUsers({\r\n    // here's where the default parameters are set for the getUsers method\r\n    filters = null,\r\n    page = 0,\r\n    usersPerPage = 10,\r\n  } = {}) {\r\n    let queryParams = {}\r\n    if (filters) {\r\n     /* if (\"text\" in filters) {\r\n        queryParams = this.textSearchQuery(filters[\"text\"])\r\n      } else if (\"cast\" in filters) {\r\n        queryParams = this.castSearchQuery(filters[\"cast\"])\r\n      } else if (\"genre\" in filters) {\r\n        queryParams = this.genreSearchQuery(filters[\"genre\"])\r\n      }*/\r\n    }\r\n\r\n    let { query = {}, project = {}, sort = DEFAULT_SORT } = queryParams\r\n    let cursor\r\n    try {\r\n      cursor = await users\r\n        .find(query)\r\n        .project(project)\r\n        .sort(sort)\r\n    } catch (e) {\r\n      console.error(`Unable to issue find command, ${e}`)\r\n      return { usersList: [], totalNumUsers: 0 }\r\n    }\r\n\r\n    /**\r\n    Ticket: Paging\r\n\r\n    Before this method returns back to the API, use the \"usersPerPage\" and\r\n    \"page\" arguments to decide the users to display.\r\n\r\n    Paging can be implemented by using the skip() and limit() cursor methods.\r\n    */\r\n\r\n    // Use the cursor to only return the users that belong on the current page\r\n    const displayCursor = cursor.limit(usersPerPage)\r\n\r\n    try {\r\n      const usersList = await displayCursor.toArray()\r\n      const totalNumUsers = page === 0 ? await users.countDocuments(query) : 0\r\n\r\n      return { usersList, totalNumUsers }\r\n    } catch (e) {\r\n      console.error(\r\n        `Unable to convert cursor to array or problem counting documents, ${e}`,\r\n      )\r\n      return { usersList: [], totalNumUsers: 0 }\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Result set for getMovies method\r\n * @typedef GetUsersResult\r\n * @property {MflixMovies[]} usersList\r\n * @property {number} totalNumUsers\r\n */"
      ]
    },
    "sourceType": "script",
    "mtime": 1637490525664
  },
  "{\"assumptions\":{},\"sourceRoot\":\"C:\\\\personal\\\\interviews Tranning\\\\AUI_STUFF\\\\test_node\\\\src\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\personal\\\\interviews Tranning\\\\AUI_STUFF\\\\test_node\",\"filename\":\"C:\\\\personal\\\\interviews Tranning\\\\AUI_STUFF\\\\test_node\\\\src\\\\index.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\personal\\\\interviews Tranning\\\\AUI_STUFF\\\\test_node\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"MemberExpression\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":{},\"_verified\":{},\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-class-static-block\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ClassBody\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.16.0": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "C:\\personal\\interviews Tranning\\AUI_STUFF\\test_node\\src\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\personal\\interviews Tranning\\AUI_STUFF\\test_node",
      "filename": "C:\\personal\\interviews Tranning\\AUI_STUFF\\test_node\\src\\index.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "C:\\personal\\interviews Tranning\\AUI_STUFF\\test_node",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "MemberExpression": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": {},
            "_verified": {},
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-class-static-block",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ClassBody": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-private-property-in-object",
          "visitor": {
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\personal\\interviews Tranning\\AUI_STUFF\\test_node\\src\\index.js",
        "plugins": [
          "classStaticBlock",
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\personal\\interviews Tranning\\AUI_STUFF\\test_node\\src\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\personal\\interviews Tranning\\AUI_STUFF\\test_node\\src\\",
        "sourceFileName": "index.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _server = _interopRequireDefault(require(\"./server\"));\n\nvar _mongodb = require(\"mongodb\");\n\nvar _usersDAO = _interopRequireDefault(require(\"../src/dao/usersDAO\"));\n\n//import UsersDAO from \"./dao/usersDAO\"\n//import CommentsDAO from \"./dao/commentsDAO\"\nvar port = process.env.PORT || 8000;\nvar host = process.env.HOST;\n/**\r\nTicket: Connection Pooling\r\n\r\nPlease change the configuration of the MongoClient object by setting the\r\nmaximum connection pool size to 50 active connections.\r\n*/\n\n/**\r\nTicket: Timeouts\r\n\r\nPlease prevent the program from waiting indefinitely by setting the write\r\nconcern timeout limit to 2500 milliseconds.\r\n*/\n\n_mongodb.MongoClient.connect(process.env.FOOTBALL_DB_URI, // TODO: Connection Pooling\n// Set the poolSize to 50 connections.\n// TODO: Timeouts\n// Set the write timeout limit to 2500 milliseconds.\n{\n  useNewUrlParser: true\n})[\"catch\"](function (err) {\n  console.error(err.stack);\n  process.exit(1);\n}).then( /*#__PURE__*/function () {\n  var _ref = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee2(client) {\n    return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _usersDAO[\"default\"].injectDB(client);\n\n          case 2:\n            // await CommentsDAO.injectDB(client)\n            _server[\"default\"].listen(port, host, /*#__PURE__*/(0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee() {\n              return _regenerator[\"default\"].wrap(function _callee$(_context) {\n                while (1) {\n                  switch (_context.prev = _context.next) {\n                    case 0:\n                      console.log(\"listening on port \".concat(port));\n\n                    case 1:\n                    case \"end\":\n                      return _context.stop();\n                  }\n                }\n              }, _callee);\n            })));\n\n          case 3:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}());\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbInBvcnQiLCJwcm9jZXNzIiwiZW52IiwiUE9SVCIsImhvc3QiLCJIT1NUIiwiTW9uZ29DbGllbnQiLCJjb25uZWN0IiwiRk9PVEJBTExfREJfVVJJIiwidXNlTmV3VXJsUGFyc2VyIiwiZXJyIiwiY29uc29sZSIsImVycm9yIiwic3RhY2siLCJleGl0IiwidGhlbiIsImNsaWVudCIsIlVzZXJzREFPIiwiaW5qZWN0REIiLCJhcHAiLCJsaXN0ZW4iLCJsb2ciXSwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUE7O0FBQ0E7O0FBQ0E7O0FBQ0E7QUFDQTtBQUVBLElBQU1BLElBQUksR0FBR0MsT0FBTyxDQUFDQyxHQUFSLENBQVlDLElBQVosSUFBb0IsSUFBakM7QUFDQSxJQUFNQyxJQUFJLEdBQUdILE9BQU8sQ0FBQ0MsR0FBUixDQUFZRyxJQUF6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUFDLHFCQUFZQyxPQUFaLENBQ0VOLE9BQU8sQ0FBQ0MsR0FBUixDQUFZTSxlQURkLEVBRUU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFFQyxFQUFBQSxlQUFlLEVBQUU7QUFBbkIsQ0FORixXQVFTLFVBQUFDLEdBQUcsRUFBSTtBQUNaQyxFQUFBQSxPQUFPLENBQUNDLEtBQVIsQ0FBY0YsR0FBRyxDQUFDRyxLQUFsQjtBQUNBWixFQUFBQSxPQUFPLENBQUNhLElBQVIsQ0FBYSxDQUFiO0FBQ0QsQ0FYSCxFQVlHQyxJQVpIO0FBQUEsMkZBWVEsa0JBQU1DLE1BQU47QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsbUJBRUVDLHFCQUFTQyxRQUFULENBQWtCRixNQUFsQixDQUZGOztBQUFBO0FBR0w7QUFDQ0csK0JBQUlDLE1BQUosQ0FBV3BCLElBQVgsRUFBaUJJLElBQWpCLDZGQUF1QjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ3JCTyxzQkFBQUEsT0FBTyxDQUFDVSxHQUFSLDZCQUFpQ3JCLElBQWpDOztBQURxQjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxhQUF2Qjs7QUFKSTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxHQVpSOztBQUFBO0FBQUE7QUFBQTtBQUFBIiwic291cmNlUm9vdCI6IkM6XFxwZXJzb25hbFxcaW50ZXJ2aWV3cyBUcmFubmluZ1xcQVVJX1NUVUZGXFx0ZXN0X25vZGVcXHNyY1xcIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGFwcCBmcm9tIFwiLi9zZXJ2ZXJcIlxyXG5pbXBvcnQgeyBNb25nb0NsaWVudCB9IGZyb20gXCJtb25nb2RiXCJcclxuaW1wb3J0IFVzZXJzREFPIGZyb20gXCIuLi9zcmMvZGFvL3VzZXJzREFPXCJcclxuLy9pbXBvcnQgVXNlcnNEQU8gZnJvbSBcIi4vZGFvL3VzZXJzREFPXCJcclxuLy9pbXBvcnQgQ29tbWVudHNEQU8gZnJvbSBcIi4vZGFvL2NvbW1lbnRzREFPXCJcclxuXHJcbmNvbnN0IHBvcnQgPSBwcm9jZXNzLmVudi5QT1JUIHx8IDgwMDBcclxuY29uc3QgaG9zdCA9IHByb2Nlc3MuZW52LkhPU1RcclxuLyoqXHJcblRpY2tldDogQ29ubmVjdGlvbiBQb29saW5nXHJcblxyXG5QbGVhc2UgY2hhbmdlIHRoZSBjb25maWd1cmF0aW9uIG9mIHRoZSBNb25nb0NsaWVudCBvYmplY3QgYnkgc2V0dGluZyB0aGVcclxubWF4aW11bSBjb25uZWN0aW9uIHBvb2wgc2l6ZSB0byA1MCBhY3RpdmUgY29ubmVjdGlvbnMuXHJcbiovXHJcblxyXG4vKipcclxuVGlja2V0OiBUaW1lb3V0c1xyXG5cclxuUGxlYXNlIHByZXZlbnQgdGhlIHByb2dyYW0gZnJvbSB3YWl0aW5nIGluZGVmaW5pdGVseSBieSBzZXR0aW5nIHRoZSB3cml0ZVxyXG5jb25jZXJuIHRpbWVvdXQgbGltaXQgdG8gMjUwMCBtaWxsaXNlY29uZHMuXHJcbiovXHJcblxyXG5Nb25nb0NsaWVudC5jb25uZWN0KFxyXG4gIHByb2Nlc3MuZW52LkZPT1RCQUxMX0RCX1VSSSxcclxuICAvLyBUT0RPOiBDb25uZWN0aW9uIFBvb2xpbmdcclxuICAvLyBTZXQgdGhlIHBvb2xTaXplIHRvIDUwIGNvbm5lY3Rpb25zLlxyXG4gIC8vIFRPRE86IFRpbWVvdXRzXHJcbiAgLy8gU2V0IHRoZSB3cml0ZSB0aW1lb3V0IGxpbWl0IHRvIDI1MDAgbWlsbGlzZWNvbmRzLlxyXG4gIHsgdXNlTmV3VXJsUGFyc2VyOiB0cnVlIH0sXHJcbilcclxuICAuY2F0Y2goZXJyID0+IHtcclxuICAgIGNvbnNvbGUuZXJyb3IoZXJyLnN0YWNrKVxyXG4gICAgcHJvY2Vzcy5leGl0KDEpXHJcbiAgfSlcclxuICAudGhlbihhc3luYyBjbGllbnQgPT4ge1xyXG4gICAvLyBhd2FpdCBNb3ZpZXNEQU8uaW5qZWN0REIoY2xpZW50KVxyXG4gICAgYXdhaXQgVXNlcnNEQU8uaW5qZWN0REIoY2xpZW50KVxyXG4gICAvLyBhd2FpdCBDb21tZW50c0RBTy5pbmplY3REQihjbGllbnQpXHJcbiAgICBhcHAubGlzdGVuKHBvcnQsIGhvc3QgLGFzeW5jICgpID0+IHtcclxuICAgICAgY29uc29sZS5sb2coYGxpc3RlbmluZyBvbiBwb3J0ICR7cG9ydH1gKVxyXG4gICAgfSlcclxuICB9KVxyXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "port",
        "process",
        "env",
        "PORT",
        "host",
        "HOST",
        "MongoClient",
        "connect",
        "FOOTBALL_DB_URI",
        "useNewUrlParser",
        "err",
        "console",
        "error",
        "stack",
        "exit",
        "then",
        "client",
        "UsersDAO",
        "injectDB",
        "app",
        "listen",
        "log"
      ],
      "mappings": ";;;;;;;;AAAA;;AACA;;AACA;;AACA;AACA;AAEA,IAAMA,IAAI,GAAGC,OAAO,CAACC,GAAR,CAAYC,IAAZ,IAAoB,IAAjC;AACA,IAAMC,IAAI,GAAGH,OAAO,CAACC,GAAR,CAAYG,IAAzB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEAC,qBAAYC,OAAZ,CACEN,OAAO,CAACC,GAAR,CAAYM,eADd,EAEE;AACA;AACA;AACA;AACA;AAAEC,EAAAA,eAAe,EAAE;AAAnB,CANF,WAQS,UAAAC,GAAG,EAAI;AACZC,EAAAA,OAAO,CAACC,KAAR,CAAcF,GAAG,CAACG,KAAlB;AACAZ,EAAAA,OAAO,CAACa,IAAR,CAAa,CAAb;AACD,CAXH,EAYGC,IAZH;AAAA,2FAYQ,kBAAMC,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEEC,qBAASC,QAAT,CAAkBF,MAAlB,CAFF;;AAAA;AAGL;AACCG,+BAAIC,MAAJ,CAAWpB,IAAX,EAAiBI,IAAjB,6FAAuB;AAAA;AAAA;AAAA;AAAA;AACrBO,sBAAAA,OAAO,CAACU,GAAR,6BAAiCrB,IAAjC;;AADqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAvB;;AAJI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAZR;;AAAA;AAAA;AAAA;AAAA",
      "sourceRoot": "C:\\personal\\interviews Tranning\\AUI_STUFF\\test_node\\src\\",
      "sourcesContent": [
        "import app from \"./server\"\r\nimport { MongoClient } from \"mongodb\"\r\nimport UsersDAO from \"../src/dao/usersDAO\"\r\n//import UsersDAO from \"./dao/usersDAO\"\r\n//import CommentsDAO from \"./dao/commentsDAO\"\r\n\r\nconst port = process.env.PORT || 8000\r\nconst host = process.env.HOST\r\n/**\r\nTicket: Connection Pooling\r\n\r\nPlease change the configuration of the MongoClient object by setting the\r\nmaximum connection pool size to 50 active connections.\r\n*/\r\n\r\n/**\r\nTicket: Timeouts\r\n\r\nPlease prevent the program from waiting indefinitely by setting the write\r\nconcern timeout limit to 2500 milliseconds.\r\n*/\r\n\r\nMongoClient.connect(\r\n  process.env.FOOTBALL_DB_URI,\r\n  // TODO: Connection Pooling\r\n  // Set the poolSize to 50 connections.\r\n  // TODO: Timeouts\r\n  // Set the write timeout limit to 2500 milliseconds.\r\n  { useNewUrlParser: true },\r\n)\r\n  .catch(err => {\r\n    console.error(err.stack)\r\n    process.exit(1)\r\n  })\r\n  .then(async client => {\r\n   // await MoviesDAO.injectDB(client)\r\n    await UsersDAO.injectDB(client)\r\n   // await CommentsDAO.injectDB(client)\r\n    app.listen(port, host ,async () => {\r\n      console.log(`listening on port ${port}`)\r\n    })\r\n  })\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1637706459951
  },
  "{\"assumptions\":{},\"sourceRoot\":\"C:\\\\personal\\\\interviews Tranning\\\\AUI_STUFF\\\\test_node\\\\src\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\personal\\\\interviews Tranning\\\\AUI_STUFF\\\\test_node\",\"filename\":\"C:\\\\personal\\\\interviews Tranning\\\\AUI_STUFF\\\\test_node\\\\src\\\\server.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\personal\\\\interviews Tranning\\\\AUI_STUFF\\\\test_node\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"MemberExpression\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":{},\"_verified\":{},\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-class-static-block\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ClassBody\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.16.0": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "C:\\personal\\interviews Tranning\\AUI_STUFF\\test_node\\src\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\personal\\interviews Tranning\\AUI_STUFF\\test_node",
      "filename": "C:\\personal\\interviews Tranning\\AUI_STUFF\\test_node\\src\\server.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "C:\\personal\\interviews Tranning\\AUI_STUFF\\test_node",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "MemberExpression": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": {},
            "_verified": {},
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-class-static-block",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ClassBody": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-private-property-in-object",
          "visitor": {
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\personal\\interviews Tranning\\AUI_STUFF\\test_node\\src\\server.js",
        "plugins": [
          "classStaticBlock",
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\personal\\interviews Tranning\\AUI_STUFF\\test_node\\src\\server.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\personal\\interviews Tranning\\AUI_STUFF\\test_node\\src\\",
        "sourceFileName": "server.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _bodyParser = _interopRequireDefault(require(\"body-parser\"));\n\nvar _users = _interopRequireDefault(require(\"./api/users.route\"));\n\n//import cors from \"cors\"\n//import morgan from \"morgan\"\nvar app = (0, _express[\"default\"])(); //app.use(cors())\n//process.env.NODE_ENV !== \"prod\" && app.use(morgan(\"dev\"))\n\napp.use(_bodyParser[\"default\"].json());\napp.use(_bodyParser[\"default\"].urlencoded({\n  extended: true\n})); // Register api routes\n\napp.use(\"/users\", _users[\"default\"]); //app.use(\"/status\", express.static(\"build\"))\n//app.use(\"/\", express.static(\"build\"))\n\napp.use(\"*\", function (req, res) {\n  return res.status(404).json({\n    error: \"not found\"\n  });\n});\nvar _default = app;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlcnZlci5qcyJdLCJuYW1lcyI6WyJhcHAiLCJ1c2UiLCJib2R5UGFyc2VyIiwianNvbiIsInVybGVuY29kZWQiLCJleHRlbmRlZCIsInVzZXJzIiwicmVxIiwicmVzIiwic3RhdHVzIiwiZXJyb3IiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFBOztBQUNBOztBQUdBOztBQUZBO0FBQ0E7QUFHQSxJQUFNQSxHQUFHLEdBQUcsMEJBQVosQyxDQUVBO0FBQ0E7O0FBQ0FBLEdBQUcsQ0FBQ0MsR0FBSixDQUFRQyx1QkFBV0MsSUFBWCxFQUFSO0FBQ0FILEdBQUcsQ0FBQ0MsR0FBSixDQUFRQyx1QkFBV0UsVUFBWCxDQUFzQjtBQUFFQyxFQUFBQSxRQUFRLEVBQUU7QUFBWixDQUF0QixDQUFSLEUsQ0FFQTs7QUFDQUwsR0FBRyxDQUFDQyxHQUFKLENBQVEsUUFBUixFQUFrQkssaUJBQWxCLEUsQ0FDQTtBQUNBOztBQUNBTixHQUFHLENBQUNDLEdBQUosQ0FBUSxHQUFSLEVBQWEsVUFBQ00sR0FBRCxFQUFNQyxHQUFOO0FBQUEsU0FBY0EsR0FBRyxDQUFDQyxNQUFKLENBQVcsR0FBWCxFQUFnQk4sSUFBaEIsQ0FBcUI7QUFBRU8sSUFBQUEsS0FBSyxFQUFFO0FBQVQsR0FBckIsQ0FBZDtBQUFBLENBQWI7ZUFFZVYsRyIsInNvdXJjZVJvb3QiOiJDOlxccGVyc29uYWxcXGludGVydmlld3MgVHJhbm5pbmdcXEFVSV9TVFVGRlxcdGVzdF9ub2RlXFxzcmNcXCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBleHByZXNzIGZyb20gXCJleHByZXNzXCJcclxuaW1wb3J0IGJvZHlQYXJzZXIgZnJvbSBcImJvZHktcGFyc2VyXCJcclxuLy9pbXBvcnQgY29ycyBmcm9tIFwiY29yc1wiXHJcbi8vaW1wb3J0IG1vcmdhbiBmcm9tIFwibW9yZ2FuXCJcclxuaW1wb3J0IHVzZXJzIGZyb20gXCIuL2FwaS91c2Vycy5yb3V0ZVwiXHJcblxyXG5jb25zdCBhcHAgPSBleHByZXNzKClcclxuXHJcbi8vYXBwLnVzZShjb3JzKCkpXHJcbi8vcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZFwiICYmIGFwcC51c2UobW9yZ2FuKFwiZGV2XCIpKVxyXG5hcHAudXNlKGJvZHlQYXJzZXIuanNvbigpKVxyXG5hcHAudXNlKGJvZHlQYXJzZXIudXJsZW5jb2RlZCh7IGV4dGVuZGVkOiB0cnVlIH0pKVxyXG5cclxuLy8gUmVnaXN0ZXIgYXBpIHJvdXRlc1xyXG5hcHAudXNlKFwiL3VzZXJzXCIsIHVzZXJzKVxyXG4vL2FwcC51c2UoXCIvc3RhdHVzXCIsIGV4cHJlc3Muc3RhdGljKFwiYnVpbGRcIikpXHJcbi8vYXBwLnVzZShcIi9cIiwgZXhwcmVzcy5zdGF0aWMoXCJidWlsZFwiKSlcclxuYXBwLnVzZShcIipcIiwgKHJlcSwgcmVzKSA9PiByZXMuc3RhdHVzKDQwNCkuanNvbih7IGVycm9yOiBcIm5vdCBmb3VuZFwiIH0pKVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgYXBwIl19",
    "map": {
      "version": 3,
      "sources": [
        "server.js"
      ],
      "names": [
        "app",
        "use",
        "bodyParser",
        "json",
        "urlencoded",
        "extended",
        "users",
        "req",
        "res",
        "status",
        "error"
      ],
      "mappings": ";;;;;;;;;AAAA;;AACA;;AAGA;;AAFA;AACA;AAGA,IAAMA,GAAG,GAAG,0BAAZ,C,CAEA;AACA;;AACAA,GAAG,CAACC,GAAJ,CAAQC,uBAAWC,IAAX,EAAR;AACAH,GAAG,CAACC,GAAJ,CAAQC,uBAAWE,UAAX,CAAsB;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAAtB,CAAR,E,CAEA;;AACAL,GAAG,CAACC,GAAJ,CAAQ,QAAR,EAAkBK,iBAAlB,E,CACA;AACA;;AACAN,GAAG,CAACC,GAAJ,CAAQ,GAAR,EAAa,UAACM,GAAD,EAAMC,GAAN;AAAA,SAAcA,GAAG,CAACC,MAAJ,CAAW,GAAX,EAAgBN,IAAhB,CAAqB;AAAEO,IAAAA,KAAK,EAAE;AAAT,GAArB,CAAd;AAAA,CAAb;eAEeV,G",
      "sourceRoot": "C:\\personal\\interviews Tranning\\AUI_STUFF\\test_node\\src\\",
      "sourcesContent": [
        "import express from \"express\"\r\nimport bodyParser from \"body-parser\"\r\n//import cors from \"cors\"\r\n//import morgan from \"morgan\"\r\nimport users from \"./api/users.route\"\r\n\r\nconst app = express()\r\n\r\n//app.use(cors())\r\n//process.env.NODE_ENV !== \"prod\" && app.use(morgan(\"dev\"))\r\napp.use(bodyParser.json())\r\napp.use(bodyParser.urlencoded({ extended: true }))\r\n\r\n// Register api routes\r\napp.use(\"/users\", users)\r\n//app.use(\"/status\", express.static(\"build\"))\r\n//app.use(\"/\", express.static(\"build\"))\r\napp.use(\"*\", (req, res) => res.status(404).json({ error: \"not found\" }))\r\n\r\nexport default app"
      ]
    },
    "sourceType": "script",
    "mtime": 1637706022414
  },
  "{\"assumptions\":{},\"sourceRoot\":\"C:\\\\personal\\\\interviews Tranning\\\\AUI_STUFF\\\\test_node\\\\src\\\\api\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\personal\\\\interviews Tranning\\\\AUI_STUFF\\\\test_node\",\"filename\":\"C:\\\\personal\\\\interviews Tranning\\\\AUI_STUFF\\\\test_node\\\\src\\\\api\\\\users.route.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\personal\\\\interviews Tranning\\\\AUI_STUFF\\\\test_node\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"MemberExpression\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":{},\"_verified\":{},\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-class-static-block\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ClassBody\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.16.0": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "C:\\personal\\interviews Tranning\\AUI_STUFF\\test_node\\src\\api\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\personal\\interviews Tranning\\AUI_STUFF\\test_node",
      "filename": "C:\\personal\\interviews Tranning\\AUI_STUFF\\test_node\\src\\api\\users.route.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "C:\\personal\\interviews Tranning\\AUI_STUFF\\test_node",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "MemberExpression": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": {},
            "_verified": {},
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-class-static-block",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ClassBody": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-private-property-in-object",
          "visitor": {
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\personal\\interviews Tranning\\AUI_STUFF\\test_node\\src\\api\\users.route.js",
        "plugins": [
          "classStaticBlock",
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\personal\\interviews Tranning\\AUI_STUFF\\test_node\\src\\api\\users.route.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\personal\\interviews Tranning\\AUI_STUFF\\test_node\\src\\api\\",
        "sourceFileName": "users.route.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _express = require(\"express\");\n\nvar _users = _interopRequireDefault(require(\".\\\\users.controller\"));\n\nvar router = new _express.Router(); // associate put, delete, and get(id)\n\nrouter.route('/').get(_users[\"default\"].apiGetUsers);\nrouter.route('/user_id').get(_users[\"default\"].apiGetUsersById); //router.route('/users_ids').get(UsersCtrl.apiGetUsersByIds)\n\nrouter.route('/users_ids').get(_users[\"default\"].apiGetNestedDocsByID);\nvar _default = router;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXJzLnJvdXRlLmpzIl0sIm5hbWVzIjpbInJvdXRlciIsIlJvdXRlciIsInJvdXRlIiwiZ2V0IiwiVXNlcnNDdHJsIiwiYXBpR2V0VXNlcnMiLCJhcGlHZXRVc2Vyc0J5SWQiLCJhcGlHZXROZXN0ZWREb2NzQnlJRCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUE7O0FBQ0E7O0FBRUEsSUFBTUEsTUFBTSxHQUFHLElBQUlDLGVBQUosRUFBZixDLENBRUE7O0FBQ0FELE1BQU0sQ0FBQ0UsS0FBUCxDQUFhLEdBQWIsRUFBa0JDLEdBQWxCLENBQXNCQyxrQkFBVUMsV0FBaEM7QUFDQUwsTUFBTSxDQUFDRSxLQUFQLENBQWEsVUFBYixFQUF5QkMsR0FBekIsQ0FBNkJDLGtCQUFVRSxlQUF2QyxFLENBQ0E7O0FBQ0FOLE1BQU0sQ0FBQ0UsS0FBUCxDQUFhLFlBQWIsRUFBMkJDLEdBQTNCLENBQStCQyxrQkFBVUcsb0JBQXpDO2VBRWVQLE0iLCJzb3VyY2VSb290IjoiQzpcXHBlcnNvbmFsXFxpbnRlcnZpZXdzIFRyYW5uaW5nXFxBVUlfU1RVRkZcXHRlc3Rfbm9kZVxcc3JjXFxhcGlcXCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFJvdXRlciB9IGZyb20gXCJleHByZXNzXCJcclxuaW1wb3J0IFVzZXJzQ3RybCBmcm9tIFwiLlxcXFx1c2Vycy5jb250cm9sbGVyXCJcclxuXHJcbmNvbnN0IHJvdXRlciA9IG5ldyBSb3V0ZXIoKVxyXG5cclxuLy8gYXNzb2NpYXRlIHB1dCwgZGVsZXRlLCBhbmQgZ2V0KGlkKVxyXG5yb3V0ZXIucm91dGUoJy8nKS5nZXQoVXNlcnNDdHJsLmFwaUdldFVzZXJzKVxyXG5yb3V0ZXIucm91dGUoJy91c2VyX2lkJykuZ2V0KFVzZXJzQ3RybC5hcGlHZXRVc2Vyc0J5SWQpXHJcbi8vcm91dGVyLnJvdXRlKCcvdXNlcnNfaWRzJykuZ2V0KFVzZXJzQ3RybC5hcGlHZXRVc2Vyc0J5SWRzKVxyXG5yb3V0ZXIucm91dGUoJy91c2Vyc19pZHMnKS5nZXQoVXNlcnNDdHJsLmFwaUdldE5lc3RlZERvY3NCeUlEKVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgcm91dGVyXHJcblxyXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "users.route.js"
      ],
      "names": [
        "router",
        "Router",
        "route",
        "get",
        "UsersCtrl",
        "apiGetUsers",
        "apiGetUsersById",
        "apiGetNestedDocsByID"
      ],
      "mappings": ";;;;;;;;;AAAA;;AACA;;AAEA,IAAMA,MAAM,GAAG,IAAIC,eAAJ,EAAf,C,CAEA;;AACAD,MAAM,CAACE,KAAP,CAAa,GAAb,EAAkBC,GAAlB,CAAsBC,kBAAUC,WAAhC;AACAL,MAAM,CAACE,KAAP,CAAa,UAAb,EAAyBC,GAAzB,CAA6BC,kBAAUE,eAAvC,E,CACA;;AACAN,MAAM,CAACE,KAAP,CAAa,YAAb,EAA2BC,GAA3B,CAA+BC,kBAAUG,oBAAzC;eAEeP,M",
      "sourceRoot": "C:\\personal\\interviews Tranning\\AUI_STUFF\\test_node\\src\\api\\",
      "sourcesContent": [
        "import { Router } from \"express\"\r\nimport UsersCtrl from \".\\\\users.controller\"\r\n\r\nconst router = new Router()\r\n\r\n// associate put, delete, and get(id)\r\nrouter.route('/').get(UsersCtrl.apiGetUsers)\r\nrouter.route('/user_id').get(UsersCtrl.apiGetUsersById)\r\n//router.route('/users_ids').get(UsersCtrl.apiGetUsersByIds)\r\nrouter.route('/users_ids').get(UsersCtrl.apiGetNestedDocsByID)\r\n\r\nexport default router\r\n\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1637704369792
  },
  "{\"assumptions\":{},\"sourceRoot\":\"C:\\\\personal\\\\interviews Tranning\\\\AUI_STUFF\\\\test_node\\\\src\\\\api\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\personal\\\\interviews Tranning\\\\AUI_STUFF\\\\test_node\",\"filename\":\"C:\\\\personal\\\\interviews Tranning\\\\AUI_STUFF\\\\test_node\\\\src\\\\api\\\\users.controller.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\personal\\\\interviews Tranning\\\\AUI_STUFF\\\\test_node\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"MemberExpression\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":{},\"_verified\":{},\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-class-static-block\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ClassBody\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.16.0": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "C:\\personal\\interviews Tranning\\AUI_STUFF\\test_node\\src\\api\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\personal\\interviews Tranning\\AUI_STUFF\\test_node",
      "filename": "C:\\personal\\interviews Tranning\\AUI_STUFF\\test_node\\src\\api\\users.controller.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "C:\\personal\\interviews Tranning\\AUI_STUFF\\test_node",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "MemberExpression": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": {},
            "_verified": {},
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-class-static-block",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ClassBody": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-private-property-in-object",
          "visitor": {
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\personal\\interviews Tranning\\AUI_STUFF\\test_node\\src\\api\\users.controller.js",
        "plugins": [
          "classStaticBlock",
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\personal\\interviews Tranning\\AUI_STUFF\\test_node\\src\\api\\users.controller.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\personal\\interviews Tranning\\AUI_STUFF\\test_node\\src\\api\\",
        "sourceFileName": "users.controller.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _usersDAO = _interopRequireDefault(require(\"../dao/usersDAO\"));\n\nvar UsersController = /*#__PURE__*/function () {\n  function UsersController() {\n    (0, _classCallCheck2[\"default\"])(this, UsersController);\n  }\n\n  (0, _createClass2[\"default\"])(UsersController, null, [{\n    key: \"apiGetUsers\",\n    value: function () {\n      var _apiGetUsers = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee(req, res, next) {\n        var USERS_PER_PAGE, _yield$UsersDAO$getUs, usersList, totalNumUsers, response;\n\n        return _regenerator[\"default\"].wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                USERS_PER_PAGE = 10;\n                _context.next = 3;\n                return _usersDAO[\"default\"].getUsers();\n\n              case 3:\n                _yield$UsersDAO$getUs = _context.sent;\n                usersList = _yield$UsersDAO$getUs.usersList;\n                totalNumUsers = _yield$UsersDAO$getUs.totalNumUsers;\n                response = {\n                  users: usersList,\n                  page: 0,\n                  filters: {},\n                  entries_per_page: USERS_PER_PAGE,\n                  total_results: totalNumUsers\n                };\n                res.json(response);\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function apiGetUsers(_x, _x2, _x3) {\n        return _apiGetUsers.apply(this, arguments);\n      }\n\n      return apiGetUsers;\n    }()\n  }, {\n    key: \"apiGetUsersByIds\",\n    value: function () {\n      var _apiGetUsersByIds = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee2(req, res, next) {\n        var ids, idsList, usersList, response;\n        return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                ids = req.query.ids == \"\" ? \"\" : req.body.user_ids;\n                idsList = Array.isArray(ids) ? ids : Array(ids);\n                _context2.next = 4;\n                return _usersDAO[\"default\"].getUsersByIds(idsList);\n\n              case 4:\n                usersList = _context2.sent;\n                response = {\n                  titles: usersList\n                };\n                res.json(response);\n\n              case 7:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function apiGetUsersByIds(_x4, _x5, _x6) {\n        return _apiGetUsersByIds.apply(this, arguments);\n      }\n\n      return apiGetUsersByIds;\n    }()\n  }, {\n    key: \"apiGetUsersById\",\n    value: function () {\n      var _apiGetUsersById = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee3(req, res, next) {\n        var id, user, updated_type;\n        return _regenerator[\"default\"].wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.prev = 0;\n                id = req.body.user_id || {};\n                _context3.next = 4;\n                return _usersDAO[\"default\"].getUserByID(id);\n\n              case 4:\n                user = _context3.sent;\n\n                if (user) {\n                  _context3.next = 8;\n                  break;\n                }\n\n                res.status(404).json({\n                  error: \"Not found\"\n                });\n                return _context3.abrupt(\"return\");\n\n              case 8:\n                updated_type = user.lastupdated instanceof Date ? \"Date\" : \"other\";\n                res.json({\n                  user: user,\n                  updated_type: updated_type\n                });\n                _context3.next = 16;\n                break;\n\n              case 12:\n                _context3.prev = 12;\n                _context3.t0 = _context3[\"catch\"](0);\n                console.log(\"api, \".concat(_context3.t0));\n                res.status(500).json({\n                  error: _context3.t0\n                });\n\n              case 16:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, null, [[0, 12]]);\n      }));\n\n      function apiGetUsersById(_x7, _x8, _x9) {\n        return _apiGetUsersById.apply(this, arguments);\n      }\n\n      return apiGetUsersById;\n    }()\n  }, {\n    key: \"apiGetNestedDocsByID\",\n    value: function () {\n      var _apiGetNestedDocsByID = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee4(req, res, next) {\n        var ids, idsList, usersList, response;\n        return _regenerator[\"default\"].wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.prev = 0;\n                ids = req.query.ids == \"\" ? \"\" : req.body.user_ids;\n                idsList = Array.isArray(ids) ? ids : Array(ids);\n                _context4.next = 5;\n                return _usersDAO[\"default\"].getNestedDocsByID(idsList);\n\n              case 5:\n                usersList = _context4.sent;\n                //console.log(usersList)\n                response = usersList;\n                res.json(response);\n                _context4.next = 14;\n                break;\n\n              case 10:\n                _context4.prev = 10;\n                _context4.t0 = _context4[\"catch\"](0);\n                console.log(\"api, \".concat(_context4.t0));\n                res.status(500).json({\n                  error: _context4.t0\n                });\n\n              case 14:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, null, [[0, 10]]);\n      }));\n\n      function apiGetNestedDocsByID(_x10, _x11, _x12) {\n        return _apiGetNestedDocsByID.apply(this, arguments);\n      }\n\n      return apiGetNestedDocsByID;\n    }()\n  }]);\n  return UsersController;\n}();\n\nexports[\"default\"] = UsersController;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXJzLmNvbnRyb2xsZXIuanMiXSwibmFtZXMiOlsiVXNlcnNDb250cm9sbGVyIiwicmVxIiwicmVzIiwibmV4dCIsIlVTRVJTX1BFUl9QQUdFIiwiVXNlcnNEQU8iLCJnZXRVc2VycyIsInVzZXJzTGlzdCIsInRvdGFsTnVtVXNlcnMiLCJyZXNwb25zZSIsInVzZXJzIiwicGFnZSIsImZpbHRlcnMiLCJlbnRyaWVzX3Blcl9wYWdlIiwidG90YWxfcmVzdWx0cyIsImpzb24iLCJpZHMiLCJxdWVyeSIsImJvZHkiLCJ1c2VyX2lkcyIsImlkc0xpc3QiLCJBcnJheSIsImlzQXJyYXkiLCJnZXRVc2Vyc0J5SWRzIiwidGl0bGVzIiwiaWQiLCJ1c2VyX2lkIiwiZ2V0VXNlckJ5SUQiLCJ1c2VyIiwic3RhdHVzIiwiZXJyb3IiLCJ1cGRhdGVkX3R5cGUiLCJsYXN0dXBkYXRlZCIsIkRhdGUiLCJjb25zb2xlIiwibG9nIiwiZ2V0TmVzdGVkRG9jc0J5SUQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7O0lBRXFCQSxlOzs7Ozs7Ozt1R0FDbkIsaUJBQXlCQyxHQUF6QixFQUE4QkMsR0FBOUIsRUFBbUNDLElBQW5DO0FBQUE7O0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDUUMsZ0JBQUFBLGNBRFIsR0FDeUIsRUFEekI7QUFBQTtBQUFBLHVCQUU2Q0MscUJBQVNDLFFBQVQsRUFGN0M7O0FBQUE7QUFBQTtBQUVVQyxnQkFBQUEsU0FGVix5QkFFVUEsU0FGVjtBQUVxQkMsZ0JBQUFBLGFBRnJCLHlCQUVxQkEsYUFGckI7QUFHTUMsZ0JBQUFBLFFBSE4sR0FHaUI7QUFDYkMsa0JBQUFBLEtBQUssRUFBRUgsU0FETTtBQUViSSxrQkFBQUEsSUFBSSxFQUFFLENBRk87QUFHYkMsa0JBQUFBLE9BQU8sRUFBRSxFQUhJO0FBSWJDLGtCQUFBQSxnQkFBZ0IsRUFBRVQsY0FKTDtBQUtiVSxrQkFBQUEsYUFBYSxFQUFFTjtBQUxGLGlCQUhqQjtBQVVFTixnQkFBQUEsR0FBRyxDQUFDYSxJQUFKLENBQVNOLFFBQVQ7O0FBVkY7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsTzs7Ozs7Ozs7Ozs7NEdBYUEsa0JBQThCUixHQUE5QixFQUFtQ0MsR0FBbkMsRUFBd0NDLElBQXhDO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNNYSxnQkFBQUEsR0FETixHQUNZZixHQUFHLENBQUNnQixLQUFKLENBQVVELEdBQVYsSUFBaUIsRUFBakIsR0FBc0IsRUFBdEIsR0FBMkJmLEdBQUcsQ0FBQ2lCLElBQUosQ0FBU0MsUUFEaEQ7QUFFTUMsZ0JBQUFBLE9BRk4sR0FFZ0JDLEtBQUssQ0FBQ0MsT0FBTixDQUFjTixHQUFkLElBQXFCQSxHQUFyQixHQUEyQkssS0FBSyxDQUFDTCxHQUFELENBRmhEO0FBQUE7QUFBQSx1QkFHd0JYLHFCQUFTa0IsYUFBVCxDQUF1QkgsT0FBdkIsQ0FIeEI7O0FBQUE7QUFHTWIsZ0JBQUFBLFNBSE47QUFJTUUsZ0JBQUFBLFFBSk4sR0FJaUI7QUFDYmUsa0JBQUFBLE1BQU0sRUFBRWpCO0FBREssaUJBSmpCO0FBT0VMLGdCQUFBQSxHQUFHLENBQUNhLElBQUosQ0FBU04sUUFBVDs7QUFQRjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxPOzs7Ozs7Ozs7OzsyR0FVQSxrQkFBNkJSLEdBQTdCLEVBQWtDQyxHQUFsQyxFQUF1Q0MsSUFBdkM7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFFUXNCLGdCQUFBQSxFQUZSLEdBRWF4QixHQUFHLENBQUNpQixJQUFKLENBQVNRLE9BQVQsSUFBb0IsRUFGakM7QUFBQTtBQUFBLHVCQUdxQnJCLHFCQUFTc0IsV0FBVCxDQUFxQkYsRUFBckIsQ0FIckI7O0FBQUE7QUFHUUcsZ0JBQUFBLElBSFI7O0FBQUEsb0JBSVNBLElBSlQ7QUFBQTtBQUFBO0FBQUE7O0FBS00xQixnQkFBQUEsR0FBRyxDQUFDMkIsTUFBSixDQUFXLEdBQVgsRUFBZ0JkLElBQWhCLENBQXFCO0FBQUVlLGtCQUFBQSxLQUFLLEVBQUU7QUFBVCxpQkFBckI7QUFMTjs7QUFBQTtBQVFRQyxnQkFBQUEsWUFSUixHQVF1QkgsSUFBSSxDQUFDSSxXQUFMLFlBQTRCQyxJQUE1QixHQUFtQyxNQUFuQyxHQUE0QyxPQVJuRTtBQVNJL0IsZ0JBQUFBLEdBQUcsQ0FBQ2EsSUFBSixDQUFTO0FBQUVhLGtCQUFBQSxJQUFJLEVBQUpBLElBQUY7QUFBUUcsa0JBQUFBLFlBQVksRUFBWkE7QUFBUixpQkFBVDtBQVRKO0FBQUE7O0FBQUE7QUFBQTtBQUFBO0FBV0lHLGdCQUFBQSxPQUFPLENBQUNDLEdBQVI7QUFDQWpDLGdCQUFBQSxHQUFHLENBQUMyQixNQUFKLENBQVcsR0FBWCxFQUFnQmQsSUFBaEIsQ0FBcUI7QUFBRWUsa0JBQUFBLEtBQUs7QUFBUCxpQkFBckI7O0FBWko7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsTzs7Ozs7Ozs7Ozs7Z0hBZ0JBLGtCQUFrQzdCLEdBQWxDLEVBQXVDQyxHQUF2QyxFQUE0Q0MsSUFBNUM7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFFUWEsZ0JBQUFBLEdBRlIsR0FFY2YsR0FBRyxDQUFDZ0IsS0FBSixDQUFVRCxHQUFWLElBQWlCLEVBQWpCLEdBQXNCLEVBQXRCLEdBQTJCZixHQUFHLENBQUNpQixJQUFKLENBQVNDLFFBRmxEO0FBR1FDLGdCQUFBQSxPQUhSLEdBR2tCQyxLQUFLLENBQUNDLE9BQU4sQ0FBY04sR0FBZCxJQUFxQkEsR0FBckIsR0FBMkJLLEtBQUssQ0FBQ0wsR0FBRCxDQUhsRDtBQUFBO0FBQUEsdUJBSTBCWCxxQkFBUytCLGlCQUFULENBQTJCaEIsT0FBM0IsQ0FKMUI7O0FBQUE7QUFJUWIsZ0JBQUFBLFNBSlI7QUFLSTtBQUNJRSxnQkFBQUEsUUFOUixHQU1tQkYsU0FObkI7QUFRRUwsZ0JBQUFBLEdBQUcsQ0FBQ2EsSUFBSixDQUFTTixRQUFUO0FBUkY7QUFBQTs7QUFBQTtBQUFBO0FBQUE7QUFVSXlCLGdCQUFBQSxPQUFPLENBQUNDLEdBQVI7QUFDQWpDLGdCQUFBQSxHQUFHLENBQUMyQixNQUFKLENBQVcsR0FBWCxFQUFnQmQsSUFBaEIsQ0FBcUI7QUFBRWUsa0JBQUFBLEtBQUs7QUFBUCxpQkFBckI7O0FBWEo7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsTyIsInNvdXJjZVJvb3QiOiJDOlxccGVyc29uYWxcXGludGVydmlld3MgVHJhbm5pbmdcXEFVSV9TVFVGRlxcdGVzdF9ub2RlXFxzcmNcXGFwaVxcIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFVzZXJzREFPIGZyb20gXCIuLi9kYW8vdXNlcnNEQU9cIlxyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgVXNlcnNDb250cm9sbGVyIHtcclxuICBzdGF0aWMgYXN5bmMgYXBpR2V0VXNlcnMocmVxLCByZXMsIG5leHQpIHtcclxuICAgIGNvbnN0IFVTRVJTX1BFUl9QQUdFID0gMTBcclxuICAgIGNvbnN0IHsgdXNlcnNMaXN0LCB0b3RhbE51bVVzZXJzIH0gPSBhd2FpdCBVc2Vyc0RBTy5nZXRVc2VycygpXHJcbiAgICBsZXQgcmVzcG9uc2UgPSB7XHJcbiAgICAgIHVzZXJzOiB1c2Vyc0xpc3QsXHJcbiAgICAgIHBhZ2U6IDAsXHJcbiAgICAgIGZpbHRlcnM6IHt9LFxyXG4gICAgICBlbnRyaWVzX3Blcl9wYWdlOiBVU0VSU19QRVJfUEFHRSxcclxuICAgICAgdG90YWxfcmVzdWx0czogdG90YWxOdW1Vc2VycyxcclxuICAgIH1cclxuICAgIHJlcy5qc29uKHJlc3BvbnNlKVxyXG4gIH1cclxuXHJcbiAgc3RhdGljIGFzeW5jIGFwaUdldFVzZXJzQnlJZHMocmVxLCByZXMsIG5leHQpIHtcclxuICAgIGxldCBpZHMgPSByZXEucXVlcnkuaWRzID09IFwiXCIgPyBcIlwiIDogcmVxLmJvZHkudXNlcl9pZHNcclxuICAgIGxldCBpZHNMaXN0ID0gQXJyYXkuaXNBcnJheShpZHMpID8gaWRzIDogQXJyYXkoaWRzKVxyXG4gICAgbGV0IHVzZXJzTGlzdCA9IGF3YWl0IFVzZXJzREFPLmdldFVzZXJzQnlJZHMoaWRzTGlzdClcclxuICAgIGxldCByZXNwb25zZSA9IHtcclxuICAgICAgdGl0bGVzOiB1c2Vyc0xpc3QsXHJcbiAgICB9XHJcbiAgICByZXMuanNvbihyZXNwb25zZSlcclxuICB9XHJcblxyXG4gIHN0YXRpYyBhc3luYyBhcGlHZXRVc2Vyc0J5SWQocmVxLCByZXMsIG5leHQpIHtcclxuICAgIHRyeSB7XHJcbiAgICAgIGxldCBpZCA9IHJlcS5ib2R5LnVzZXJfaWQgfHwge31cclxuICAgICAgbGV0IHVzZXIgPSBhd2FpdCBVc2Vyc0RBTy5nZXRVc2VyQnlJRChpZClcclxuICAgICAgaWYgKCF1c2VyKSB7XHJcbiAgICAgICAgcmVzLnN0YXR1cyg0MDQpLmpzb24oeyBlcnJvcjogXCJOb3QgZm91bmRcIiB9KVxyXG4gICAgICAgIHJldHVyblxyXG4gICAgICB9XHJcbiAgICAgIGxldCB1cGRhdGVkX3R5cGUgPSB1c2VyLmxhc3R1cGRhdGVkIGluc3RhbmNlb2YgRGF0ZSA/IFwiRGF0ZVwiIDogXCJvdGhlclwiXHJcbiAgICAgIHJlcy5qc29uKHsgdXNlciwgdXBkYXRlZF90eXBlIH0pXHJcbiAgICB9IGNhdGNoIChlKSB7XHJcbiAgICAgIGNvbnNvbGUubG9nKGBhcGksICR7ZX1gKVxyXG4gICAgICByZXMuc3RhdHVzKDUwMCkuanNvbih7IGVycm9yOiBlIH0pXHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBzdGF0aWMgYXN5bmMgYXBpR2V0TmVzdGVkRG9jc0J5SUQocmVxLCByZXMsIG5leHQpIHtcclxuICAgIHRyeSB7XHJcbiAgICAgIGxldCBpZHMgPSByZXEucXVlcnkuaWRzID09IFwiXCIgPyBcIlwiIDogcmVxLmJvZHkudXNlcl9pZHNcclxuICAgICAgbGV0IGlkc0xpc3QgPSBBcnJheS5pc0FycmF5KGlkcykgPyBpZHMgOiBBcnJheShpZHMpXHJcbiAgICAgIGxldCB1c2Vyc0xpc3QgPSBhd2FpdCBVc2Vyc0RBTy5nZXROZXN0ZWREb2NzQnlJRChpZHNMaXN0KVxyXG4gICAgICAvL2NvbnNvbGUubG9nKHVzZXJzTGlzdClcclxuICAgICAgbGV0IHJlc3BvbnNlID0gdXNlcnNMaXN0XHJcbiAgICAgXHJcbiAgICByZXMuanNvbihyZXNwb25zZSlcclxuICAgIH0gY2F0Y2ggKGUpIHtcclxuICAgICAgY29uc29sZS5sb2coYGFwaSwgJHtlfWApXHJcbiAgICAgIHJlcy5zdGF0dXMoNTAwKS5qc29uKHsgZXJyb3I6IGUgfSlcclxuICAgIH1cclxuICB9XHJcbn0iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "users.controller.js"
      ],
      "names": [
        "UsersController",
        "req",
        "res",
        "next",
        "USERS_PER_PAGE",
        "UsersDAO",
        "getUsers",
        "usersList",
        "totalNumUsers",
        "response",
        "users",
        "page",
        "filters",
        "entries_per_page",
        "total_results",
        "json",
        "ids",
        "query",
        "body",
        "user_ids",
        "idsList",
        "Array",
        "isArray",
        "getUsersByIds",
        "titles",
        "id",
        "user_id",
        "getUserByID",
        "user",
        "status",
        "error",
        "updated_type",
        "lastupdated",
        "Date",
        "console",
        "log",
        "getNestedDocsByID"
      ],
      "mappings": ";;;;;;;;;;;;;;;;;AAAA;;IAEqBA,e;;;;;;;;uGACnB,iBAAyBC,GAAzB,EAA8BC,GAA9B,EAAmCC,IAAnC;AAAA;;AAAA;AAAA;AAAA;AAAA;AACQC,gBAAAA,cADR,GACyB,EADzB;AAAA;AAAA,uBAE6CC,qBAASC,QAAT,EAF7C;;AAAA;AAAA;AAEUC,gBAAAA,SAFV,yBAEUA,SAFV;AAEqBC,gBAAAA,aAFrB,yBAEqBA,aAFrB;AAGMC,gBAAAA,QAHN,GAGiB;AACbC,kBAAAA,KAAK,EAAEH,SADM;AAEbI,kBAAAA,IAAI,EAAE,CAFO;AAGbC,kBAAAA,OAAO,EAAE,EAHI;AAIbC,kBAAAA,gBAAgB,EAAET,cAJL;AAKbU,kBAAAA,aAAa,EAAEN;AALF,iBAHjB;AAUEN,gBAAAA,GAAG,CAACa,IAAJ,CAASN,QAAT;;AAVF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;;4GAaA,kBAA8BR,GAA9B,EAAmCC,GAAnC,EAAwCC,IAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AACMa,gBAAAA,GADN,GACYf,GAAG,CAACgB,KAAJ,CAAUD,GAAV,IAAiB,EAAjB,GAAsB,EAAtB,GAA2Bf,GAAG,CAACiB,IAAJ,CAASC,QADhD;AAEMC,gBAAAA,OAFN,GAEgBC,KAAK,CAACC,OAAN,CAAcN,GAAd,IAAqBA,GAArB,GAA2BK,KAAK,CAACL,GAAD,CAFhD;AAAA;AAAA,uBAGwBX,qBAASkB,aAAT,CAAuBH,OAAvB,CAHxB;;AAAA;AAGMb,gBAAAA,SAHN;AAIME,gBAAAA,QAJN,GAIiB;AACbe,kBAAAA,MAAM,EAAEjB;AADK,iBAJjB;AAOEL,gBAAAA,GAAG,CAACa,IAAJ,CAASN,QAAT;;AAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;;2GAUA,kBAA6BR,GAA7B,EAAkCC,GAAlC,EAAuCC,IAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEQsB,gBAAAA,EAFR,GAEaxB,GAAG,CAACiB,IAAJ,CAASQ,OAAT,IAAoB,EAFjC;AAAA;AAAA,uBAGqBrB,qBAASsB,WAAT,CAAqBF,EAArB,CAHrB;;AAAA;AAGQG,gBAAAA,IAHR;;AAAA,oBAISA,IAJT;AAAA;AAAA;AAAA;;AAKM1B,gBAAAA,GAAG,CAAC2B,MAAJ,CAAW,GAAX,EAAgBd,IAAhB,CAAqB;AAAEe,kBAAAA,KAAK,EAAE;AAAT,iBAArB;AALN;;AAAA;AAQQC,gBAAAA,YARR,GAQuBH,IAAI,CAACI,WAAL,YAA4BC,IAA5B,GAAmC,MAAnC,GAA4C,OARnE;AASI/B,gBAAAA,GAAG,CAACa,IAAJ,CAAS;AAAEa,kBAAAA,IAAI,EAAJA,IAAF;AAAQG,kBAAAA,YAAY,EAAZA;AAAR,iBAAT;AATJ;AAAA;;AAAA;AAAA;AAAA;AAWIG,gBAAAA,OAAO,CAACC,GAAR;AACAjC,gBAAAA,GAAG,CAAC2B,MAAJ,CAAW,GAAX,EAAgBd,IAAhB,CAAqB;AAAEe,kBAAAA,KAAK;AAAP,iBAArB;;AAZJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;;gHAgBA,kBAAkC7B,GAAlC,EAAuCC,GAAvC,EAA4CC,IAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEQa,gBAAAA,GAFR,GAEcf,GAAG,CAACgB,KAAJ,CAAUD,GAAV,IAAiB,EAAjB,GAAsB,EAAtB,GAA2Bf,GAAG,CAACiB,IAAJ,CAASC,QAFlD;AAGQC,gBAAAA,OAHR,GAGkBC,KAAK,CAACC,OAAN,CAAcN,GAAd,IAAqBA,GAArB,GAA2BK,KAAK,CAACL,GAAD,CAHlD;AAAA;AAAA,uBAI0BX,qBAAS+B,iBAAT,CAA2BhB,OAA3B,CAJ1B;;AAAA;AAIQb,gBAAAA,SAJR;AAKI;AACIE,gBAAAA,QANR,GAMmBF,SANnB;AAQEL,gBAAAA,GAAG,CAACa,IAAJ,CAASN,QAAT;AARF;AAAA;;AAAA;AAAA;AAAA;AAUIyB,gBAAAA,OAAO,CAACC,GAAR;AACAjC,gBAAAA,GAAG,CAAC2B,MAAJ,CAAW,GAAX,EAAgBd,IAAhB,CAAqB;AAAEe,kBAAAA,KAAK;AAAP,iBAArB;;AAXJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O",
      "sourceRoot": "C:\\personal\\interviews Tranning\\AUI_STUFF\\test_node\\src\\api\\",
      "sourcesContent": [
        "import UsersDAO from \"../dao/usersDAO\"\r\n\r\nexport default class UsersController {\r\n  static async apiGetUsers(req, res, next) {\r\n    const USERS_PER_PAGE = 10\r\n    const { usersList, totalNumUsers } = await UsersDAO.getUsers()\r\n    let response = {\r\n      users: usersList,\r\n      page: 0,\r\n      filters: {},\r\n      entries_per_page: USERS_PER_PAGE,\r\n      total_results: totalNumUsers,\r\n    }\r\n    res.json(response)\r\n  }\r\n\r\n  static async apiGetUsersByIds(req, res, next) {\r\n    let ids = req.query.ids == \"\" ? \"\" : req.body.user_ids\r\n    let idsList = Array.isArray(ids) ? ids : Array(ids)\r\n    let usersList = await UsersDAO.getUsersByIds(idsList)\r\n    let response = {\r\n      titles: usersList,\r\n    }\r\n    res.json(response)\r\n  }\r\n\r\n  static async apiGetUsersById(req, res, next) {\r\n    try {\r\n      let id = req.body.user_id || {}\r\n      let user = await UsersDAO.getUserByID(id)\r\n      if (!user) {\r\n        res.status(404).json({ error: \"Not found\" })\r\n        return\r\n      }\r\n      let updated_type = user.lastupdated instanceof Date ? \"Date\" : \"other\"\r\n      res.json({ user, updated_type })\r\n    } catch (e) {\r\n      console.log(`api, ${e}`)\r\n      res.status(500).json({ error: e })\r\n    }\r\n  }\r\n\r\n  static async apiGetNestedDocsByID(req, res, next) {\r\n    try {\r\n      let ids = req.query.ids == \"\" ? \"\" : req.body.user_ids\r\n      let idsList = Array.isArray(ids) ? ids : Array(ids)\r\n      let usersList = await UsersDAO.getNestedDocsByID(idsList)\r\n      //console.log(usersList)\r\n      let response = usersList\r\n     \r\n    res.json(response)\r\n    } catch (e) {\r\n      console.log(`api, ${e}`)\r\n      res.status(500).json({ error: e })\r\n    }\r\n  }\r\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1637650558461
  },
  "{\"assumptions\":{},\"sourceRoot\":\"C:\\\\personal\\\\interviews Tranning\\\\AUI_STUFF\\\\test_node\\\\src\\\\dao\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\personal\\\\interviews Tranning\\\\AUI_STUFF\\\\test_node\",\"filename\":\"C:\\\\personal\\\\interviews Tranning\\\\AUI_STUFF\\\\test_node\\\\src\\\\dao\\\\usersDAO.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\personal\\\\interviews Tranning\\\\AUI_STUFF\\\\test_node\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"MemberExpression\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":{},\"_verified\":{},\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-class-static-block\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ClassBody\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.16.0": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "C:\\personal\\interviews Tranning\\AUI_STUFF\\test_node\\src\\dao\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\personal\\interviews Tranning\\AUI_STUFF\\test_node",
      "filename": "C:\\personal\\interviews Tranning\\AUI_STUFF\\test_node\\src\\dao\\usersDAO.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "C:\\personal\\interviews Tranning\\AUI_STUFF\\test_node",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "MemberExpression": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": {},
            "_verified": {},
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-class-static-block",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ClassBody": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-private-property-in-object",
          "visitor": {
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\personal\\interviews Tranning\\AUI_STUFF\\test_node\\src\\dao\\usersDAO.js",
        "plugins": [
          "classStaticBlock",
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\personal\\interviews Tranning\\AUI_STUFF\\test_node\\src\\dao\\usersDAO.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\personal\\interviews Tranning\\AUI_STUFF\\test_node\\src\\dao\\",
        "sourceFileName": "usersDAO.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _bson = require(\"bson\");\n\nvar users;\nvar clubs;\nvar DEFAULT_SORT = [[\"tomatoes.viewer.numReviews\", -1]];\n\nvar usersDAO = /*#__PURE__*/function () {\n  function usersDAO() {\n    (0, _classCallCheck2[\"default\"])(this, usersDAO);\n  }\n\n  (0, _createClass2[\"default\"])(usersDAO, null, [{\n    key: \"injectDB\",\n    value: function () {\n      var _injectDB = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee(conn) {\n        return _regenerator[\"default\"].wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!users) {\n                  _context.next = 2;\n                  break;\n                }\n\n                return _context.abrupt(\"return\");\n\n              case 2:\n                _context.prev = 2;\n                _context.next = 5;\n                return conn.db(process.env.FOOTBALL_NS).collection(\"users\");\n\n              case 5:\n                users = _context.sent;\n                this.users = users; // this is only for testing\n\n                _context.next = 12;\n                break;\n\n              case 9:\n                _context.prev = 9;\n                _context.t0 = _context[\"catch\"](2);\n                console.error(\"Unable to establish a collection handle in usersDAO: \".concat(_context.t0));\n\n              case 12:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[2, 9]]);\n      }));\n\n      function injectDB(_x) {\n        return _injectDB.apply(this, arguments);\n      }\n\n      return injectDB;\n    }()\n    /**\r\n     * Finds and returns all users .\r\n     * Returns a list of objects, each object contains a user_id, name and club.\r\n     * @param {Object} filters - The search parameters to use in the query.\r\n     * @param {number} page - The page of users to retrieve.\r\n     * @param {number} usersPerPage - The number of users to display per page.\r\n     * @returns {GetUsersResult} An object with user results and total results\r\n     * that would match this query\r\n     */\n\n  }, {\n    key: \"getUsers\",\n    value: function () {\n      var _getUsers = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee2() {\n        var _ref,\n            _ref$filters,\n            filters,\n            _ref$page,\n            page,\n            _ref$usersPerPage,\n            usersPerPage,\n            queryParams,\n            _queryParams,\n            _queryParams$query,\n            query,\n            _queryParams$project,\n            project,\n            _queryParams$sort,\n            sort,\n            cursor,\n            displayCursor,\n            usersList,\n            totalNumUsers,\n            _args2 = arguments;\n\n        return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _ref = _args2.length > 0 && _args2[0] !== undefined ? _args2[0] : {}, _ref$filters = _ref.filters, filters = _ref$filters === void 0 ? null : _ref$filters, _ref$page = _ref.page, page = _ref$page === void 0 ? 0 : _ref$page, _ref$usersPerPage = _ref.usersPerPage, usersPerPage = _ref$usersPerPage === void 0 ? 10 : _ref$usersPerPage;\n                queryParams = {};\n\n                if (filters) {\n                  if (\"text\" in filters) {\n                    queryParams = this.textSearchQuery(filters[\"text\"]);\n                  } else if (\"cast\" in filters) {\n                    queryParams = this.castSearchQuery(filters[\"cast\"]);\n                  } else if (\"genre\" in filters) {\n                    queryParams = this.genreSearchQuery(filters[\"genre\"]);\n                  }\n                }\n\n                _queryParams = queryParams, _queryParams$query = _queryParams.query, query = _queryParams$query === void 0 ? {} : _queryParams$query, _queryParams$project = _queryParams.project, project = _queryParams$project === void 0 ? {} : _queryParams$project, _queryParams$sort = _queryParams.sort, sort = _queryParams$sort === void 0 ? DEFAULT_SORT : _queryParams$sort;\n                _context2.prev = 4;\n                _context2.next = 7;\n                return users.find(query).project(project).sort(sort);\n\n              case 7:\n                cursor = _context2.sent;\n                _context2.next = 14;\n                break;\n\n              case 10:\n                _context2.prev = 10;\n                _context2.t0 = _context2[\"catch\"](4);\n                console.error(\"Unable to issue find command, \".concat(_context2.t0));\n                return _context2.abrupt(\"return\", {\n                  usersList: [],\n                  totalNumUsers: 0\n                });\n\n              case 14:\n                /**\r\n                Ticket: Paging\r\n                  Before this method returns back to the API, use the \"usersPerPage\" and\r\n                \"page\" arguments to decide the users to display.\r\n                  Paging can be implemented by using the skip() and limit() cursor methods.\r\n                */\n                // Use the cursor to only return the users that belong on the current page\n                displayCursor = cursor.limit(usersPerPage);\n                _context2.prev = 15;\n                _context2.next = 18;\n                return displayCursor.toArray();\n\n              case 18:\n                usersList = _context2.sent;\n\n                if (!(page === 0)) {\n                  _context2.next = 25;\n                  break;\n                }\n\n                _context2.next = 22;\n                return users.countDocuments(query);\n\n              case 22:\n                _context2.t1 = _context2.sent;\n                _context2.next = 26;\n                break;\n\n              case 25:\n                _context2.t1 = 0;\n\n              case 26:\n                totalNumUsers = _context2.t1;\n                return _context2.abrupt(\"return\", {\n                  usersList: usersList,\n                  totalNumUsers: totalNumUsers\n                });\n\n              case 30:\n                _context2.prev = 30;\n                _context2.t2 = _context2[\"catch\"](15);\n                console.error(\"Unable to convert cursor to array or problem counting documents, \".concat(_context2.t2));\n                return _context2.abrupt(\"return\", {\n                  usersList: [],\n                  totalNumUsers: 0\n                });\n\n              case 34:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[4, 10], [15, 30]]);\n      }));\n\n      function getUsers() {\n        return _getUsers.apply(this, arguments);\n      }\n\n      return getUsers;\n    }()\n  }, {\n    key: \"getNestedDocsByID\",\n    value: function () {\n      var _getNestedDocsByID = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee3(ids) {\n        var cursor, pipeline_;\n        return _regenerator[\"default\"].wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.prev = 0;\n                pipeline_ = [{\n                  \"$match\": {\n                    'external_id_str': {\n                      $in: ids\n                    }\n                  }\n                }, {\n                  $lookup: {\n                    from: \"clubs\",\n                    \"let\": {\n                      clubName: \"$club\"\n                    },\n                    pipeline: [{\n                      $match: {\n                        $expr: {\n                          $and: [{\n                            $eq: [\"$Club\", \"$$clubName\"]\n                          }]\n                        }\n                      }\n                    }],\n                    as: \"club_country\"\n                  }\n                }, {\n                  $unwind: \"$club_country\"\n                }, {\n                  $project: {\n                    _id: 0,\n                    external_id_str: 1,\n                    name: 1,\n                    club: 1,\n                    country: \"$club_country.Country\",\n                    total: \"$club_country.Total\"\n                  }\n                }];\n                _context3.next = 4;\n                return users.aggregate(pipeline_);\n\n              case 4:\n                cursor = _context3.sent;\n                return _context3.abrupt(\"return\", cursor.toArray());\n\n              case 8:\n                _context3.prev = 8;\n                _context3.t0 = _context3[\"catch\"](0);\n\n                /**\r\n                Ticket: Error Handling\r\n                  Handle the error that occurs when an invalid ID is passed to this method.\r\n                When this specific error is thrown, the method should return `null`.\r\n                */\n                // TODO Ticket: Error Handling\n                // Catch the InvalidId error by string matching, and then handle it.\n                console.error(\"Something went wrong in getUserByID: \".concat(_context3.t0));\n                throw _context3.t0;\n\n              case 12:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, null, [[0, 8]]);\n      }));\n\n      function getNestedDocsByID(_x2) {\n        return _getNestedDocsByID.apply(this, arguments);\n      }\n\n      return getNestedDocsByID;\n    }()\n  }, {\n    key: \"getUsersByIds\",\n    value: function () {\n      var _getUsersByIds = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee4(ids) {\n        var cursor;\n        return _regenerator[\"default\"].wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.prev = 0;\n                _context4.next = 3;\n                return users.find({\n                  'external_id_str': {\n                    $in: ids\n                  }\n                }, {\n                  projection: {\n                    _id: 0,\n                    external_id_str: 1,\n                    name: 1,\n                    club: 1\n                  }\n                });\n\n              case 3:\n                cursor = _context4.sent;\n                _context4.next = 10;\n                break;\n\n              case 6:\n                _context4.prev = 6;\n                _context4.t0 = _context4[\"catch\"](0);\n                console.error(\"Unable to issue find command, \".concat(_context4.t0));\n                return _context4.abrupt(\"return\", []);\n\n              case 10:\n                return _context4.abrupt(\"return\", cursor.toArray());\n\n              case 11:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, null, [[0, 6]]);\n      }));\n\n      function getUsersByIds(_x3) {\n        return _getUsersByIds.apply(this, arguments);\n      }\n\n      return getUsersByIds;\n    }()\n  }, {\n    key: \"getUserByID\",\n    value: function () {\n      var _getUserByID = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee5(id) {\n        var pipeline;\n        return _regenerator[\"default\"].wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.prev = 0;\n\n                /**\r\n                Ticket: Get Comments\r\n                  Given a user ID, build an Aggregation Pipeline to retrieve the comments\r\n                matching that user's ID.\r\n                  The $match stage is already completed. You will need to add a $lookup\r\n                stage that searches the `comments` collection for the correct comments.\r\n                */\n                // TODO Ticket: Get Comments\n                // Implement the required pipeline.\n                pipeline = [{\n                  $match: {\n                    _id: (0, _bson.ObjectId)(id)\n                  }\n                }];\n                _context5.next = 4;\n                return users.aggregate(pipeline).next();\n\n              case 4:\n                return _context5.abrupt(\"return\", _context5.sent);\n\n              case 7:\n                _context5.prev = 7;\n                _context5.t0 = _context5[\"catch\"](0);\n\n                /**\r\n                Ticket: Error Handling\r\n                  Handle the error that occurs when an invalid ID is passed to this method.\r\n                When this specific error is thrown, the method should return `null`.\r\n                */\n                // TODO Ticket: Error Handling\n                // Catch the InvalidId error by string matching, and then handle it.\n                console.error(\"Something went wrong in getUserByID: \".concat(_context5.t0));\n                throw _context5.t0;\n\n              case 11:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, null, [[0, 7]]);\n      }));\n\n      function getUserByID(_x4) {\n        return _getUserByID.apply(this, arguments);\n      }\n\n      return getUserByID;\n    }()\n  }]);\n  return usersDAO;\n}();\n/**\r\n * Result set for getMovies method\r\n * @typedef GetUsersResult\r\n * @property {MflixMovies[]} usersList\r\n * @property {number} totalNumUsers\r\n */\n\n\nexports[\"default\"] = usersDAO;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXJzREFPLmpzIl0sIm5hbWVzIjpbInVzZXJzIiwiY2x1YnMiLCJERUZBVUxUX1NPUlQiLCJ1c2Vyc0RBTyIsImNvbm4iLCJkYiIsInByb2Nlc3MiLCJlbnYiLCJGT09UQkFMTF9OUyIsImNvbGxlY3Rpb24iLCJjb25zb2xlIiwiZXJyb3IiLCJmaWx0ZXJzIiwicGFnZSIsInVzZXJzUGVyUGFnZSIsInF1ZXJ5UGFyYW1zIiwidGV4dFNlYXJjaFF1ZXJ5IiwiY2FzdFNlYXJjaFF1ZXJ5IiwiZ2VucmVTZWFyY2hRdWVyeSIsInF1ZXJ5IiwicHJvamVjdCIsInNvcnQiLCJmaW5kIiwiY3Vyc29yIiwidXNlcnNMaXN0IiwidG90YWxOdW1Vc2VycyIsImRpc3BsYXlDdXJzb3IiLCJsaW1pdCIsInRvQXJyYXkiLCJjb3VudERvY3VtZW50cyIsImlkcyIsInBpcGVsaW5lXyIsIiRpbiIsIiRsb29rdXAiLCJmcm9tIiwiY2x1Yk5hbWUiLCJwaXBlbGluZSIsIiRtYXRjaCIsIiRleHByIiwiJGFuZCIsIiRlcSIsImFzIiwiJHVud2luZCIsIiRwcm9qZWN0IiwiX2lkIiwiZXh0ZXJuYWxfaWRfc3RyIiwibmFtZSIsImNsdWIiLCJjb3VudHJ5IiwidG90YWwiLCJhZ2dyZWdhdGUiLCJwcm9qZWN0aW9uIiwiaWQiLCJuZXh0Il0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7OztBQUFBOztBQUVBLElBQUlBLEtBQUo7QUFDQSxJQUFJQyxLQUFKO0FBQ0EsSUFBTUMsWUFBWSxHQUFHLENBQUMsQ0FBQyw0QkFBRCxFQUErQixDQUFDLENBQWhDLENBQUQsQ0FBckI7O0lBRXFCQyxROzs7Ozs7OztvR0FDbkIsaUJBQXNCQyxJQUF0QjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEscUJBQ01KLEtBRE47QUFBQTtBQUFBO0FBQUE7O0FBQUE7O0FBQUE7QUFBQTtBQUFBO0FBQUEsdUJBS2tCSSxJQUFJLENBQUNDLEVBQUwsQ0FBUUMsT0FBTyxDQUFDQyxHQUFSLENBQVlDLFdBQXBCLEVBQWlDQyxVQUFqQyxDQUE0QyxPQUE1QyxDQUxsQjs7QUFBQTtBQUtJVCxnQkFBQUEsS0FMSjtBQU1JLHFCQUFLQSxLQUFMLEdBQWFBLEtBQWIsQ0FOSixDQU11Qjs7QUFOdkI7QUFBQTs7QUFBQTtBQUFBO0FBQUE7QUFRSVUsZ0JBQUFBLE9BQU8sQ0FBQ0MsS0FBUjs7QUFSSjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxPOzs7Ozs7OztBQWFBO0FBQ0Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7b0dBQ0c7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBOztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsa0ZBS0csRUFMSCxzQkFFQ0MsT0FGRCxFQUVDQSxPQUZELDZCQUVXLElBRlgsa0NBR0NDLElBSEQsRUFHQ0EsSUFIRCwwQkFHUSxDQUhSLHVDQUlDQyxZQUpELEVBSUNBLFlBSkQsa0NBSWdCLEVBSmhCO0FBTUtDLGdCQUFBQSxXQU5MLEdBTW1CLEVBTm5COztBQU9DLG9CQUFJSCxPQUFKLEVBQWE7QUFDWCxzQkFBSSxVQUFVQSxPQUFkLEVBQXVCO0FBQ3JCRyxvQkFBQUEsV0FBVyxHQUFHLEtBQUtDLGVBQUwsQ0FBcUJKLE9BQU8sQ0FBQyxNQUFELENBQTVCLENBQWQ7QUFDRCxtQkFGRCxNQUVPLElBQUksVUFBVUEsT0FBZCxFQUF1QjtBQUM1Qkcsb0JBQUFBLFdBQVcsR0FBRyxLQUFLRSxlQUFMLENBQXFCTCxPQUFPLENBQUMsTUFBRCxDQUE1QixDQUFkO0FBQ0QsbUJBRk0sTUFFQSxJQUFJLFdBQVdBLE9BQWYsRUFBd0I7QUFDN0JHLG9CQUFBQSxXQUFXLEdBQUcsS0FBS0csZ0JBQUwsQ0FBc0JOLE9BQU8sQ0FBQyxPQUFELENBQTdCLENBQWQ7QUFDRDtBQUNGOztBQWZGLCtCQWlCeURHLFdBakJ6RCxvQ0FpQk9JLEtBakJQLEVBaUJPQSxLQWpCUCxtQ0FpQmUsRUFqQmYsMkRBaUJtQkMsT0FqQm5CLEVBaUJtQkEsT0FqQm5CLHFDQWlCNkIsRUFqQjdCLDBEQWlCaUNDLElBakJqQyxFQWlCaUNBLElBakJqQyxrQ0FpQndDbkIsWUFqQnhDO0FBQUE7QUFBQTtBQUFBLHVCQW9Ca0JGLEtBQUssQ0FDakJzQixJQURZLENBQ1BILEtBRE8sRUFFWkMsT0FGWSxDQUVKQSxPQUZJLEVBR1pDLElBSFksQ0FHUEEsSUFITyxDQXBCbEI7O0FBQUE7QUFvQkdFLGdCQUFBQSxNQXBCSDtBQUFBO0FBQUE7O0FBQUE7QUFBQTtBQUFBO0FBeUJHYixnQkFBQUEsT0FBTyxDQUFDQyxLQUFSO0FBekJILGtEQTBCVTtBQUFFYSxrQkFBQUEsU0FBUyxFQUFFLEVBQWI7QUFBaUJDLGtCQUFBQSxhQUFhLEVBQUU7QUFBaEMsaUJBMUJWOztBQUFBO0FBNkJDO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUlJO0FBQ01DLGdCQUFBQSxhQXZDUCxHQXVDdUJILE1BQU0sQ0FBQ0ksS0FBUCxDQUFhYixZQUFiLENBdkN2QjtBQUFBO0FBQUE7QUFBQSx1QkEwQzJCWSxhQUFhLENBQUNFLE9BQWQsRUExQzNCOztBQUFBO0FBMENTSixnQkFBQUEsU0ExQ1Q7O0FBQUEsc0JBMkN5QlgsSUFBSSxLQUFLLENBM0NsQztBQUFBO0FBQUE7QUFBQTs7QUFBQTtBQUFBLHVCQTJDNENiLEtBQUssQ0FBQzZCLGNBQU4sQ0FBcUJWLEtBQXJCLENBM0M1Qzs7QUFBQTtBQUFBO0FBQUE7QUFBQTs7QUFBQTtBQUFBLCtCQTJDMEUsQ0EzQzFFOztBQUFBO0FBMkNTTSxnQkFBQUEsYUEzQ1Q7QUFBQSxrREE2Q1U7QUFBRUQsa0JBQUFBLFNBQVMsRUFBVEEsU0FBRjtBQUFhQyxrQkFBQUEsYUFBYSxFQUFiQTtBQUFiLGlCQTdDVjs7QUFBQTtBQUFBO0FBQUE7QUErQ0dmLGdCQUFBQSxPQUFPLENBQUNDLEtBQVI7QUEvQ0gsa0RBa0RVO0FBQUVhLGtCQUFBQSxTQUFTLEVBQUUsRUFBYjtBQUFpQkMsa0JBQUFBLGFBQWEsRUFBRTtBQUFoQyxpQkFsRFY7O0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsTzs7Ozs7Ozs7Ozs7NkdBc0RELGtCQUErQkssR0FBL0I7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFHVUMsZ0JBQUFBLFNBSFYsR0FHc0IsQ0FDaEI7QUFBRSw0QkFBVTtBQUFFLHVDQUFtQjtBQUFDQyxzQkFBQUEsR0FBRyxFQUFFRjtBQUFOO0FBQXJCO0FBQVosaUJBRGdCLEVBRWhCO0FBQ0VHLGtCQUFBQSxPQUFPLEVBQUU7QUFDUEMsb0JBQUFBLElBQUksRUFBRSxPQURDO0FBRVAsMkJBQUs7QUFBRUMsc0JBQUFBLFFBQVEsRUFBRTtBQUFaLHFCQUZFO0FBR1BDLG9CQUFBQSxRQUFRLEVBQUUsQ0FDUjtBQUNFQyxzQkFBQUEsTUFBTSxFQUFFO0FBQ05DLHdCQUFBQSxLQUFLLEVBQUU7QUFDTEMsMEJBQUFBLElBQUksRUFBRSxDQUNKO0FBQUVDLDRCQUFBQSxHQUFHLEVBQUUsQ0FBQyxPQUFELEVBQVUsWUFBVjtBQUFQLDJCQURJO0FBREQ7QUFERDtBQURWLHFCQURRLENBSEg7QUFjUEMsb0JBQUFBLEVBQUUsRUFBRTtBQWRHO0FBRFgsaUJBRmdCLEVBb0JoQjtBQUNFQyxrQkFBQUEsT0FBTyxFQUFFO0FBRFgsaUJBcEJnQixFQXVCaEI7QUFBQ0Msa0JBQUFBLFFBQVEsRUFBRztBQUFFQyxvQkFBQUEsR0FBRyxFQUFHLENBQVI7QUFBV0Msb0JBQUFBLGVBQWUsRUFBRyxDQUE3QjtBQUFnQ0Msb0JBQUFBLElBQUksRUFBRyxDQUF2QztBQUEwQ0Msb0JBQUFBLElBQUksRUFBRyxDQUFqRDtBQUNWQyxvQkFBQUEsT0FBTyxFQUFHLHVCQURBO0FBRVZDLG9CQUFBQSxLQUFLLEVBQUc7QUFGRTtBQUFaLGlCQXZCZ0IsQ0FIdEI7QUFBQTtBQUFBLHVCQThCbUJqRCxLQUFLLENBQUNrRCxTQUFOLENBQWdCbkIsU0FBaEIsQ0E5Qm5COztBQUFBO0FBOEJJUixnQkFBQUEsTUE5Qko7QUFBQSxrREErQldBLE1BQU0sQ0FBQ0ssT0FBUCxFQS9CWDs7QUFBQTtBQUFBO0FBQUE7O0FBaUNJO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFHTTtBQUNBO0FBQ0FsQixnQkFBQUEsT0FBTyxDQUFDQyxLQUFSO0FBMUNKOztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLE87Ozs7Ozs7Ozs7O3lHQStDQSxrQkFBMkJtQixHQUEzQjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsdUJBaUJtQjlCLEtBQUssQ0FBQ3NCLElBQU4sQ0FBVztBQUFDLHFDQUFtQjtBQUFDVSxvQkFBQUEsR0FBRyxFQUFFRjtBQUFOO0FBQXBCLGlCQUFYLEVBQ2Y7QUFBQ3FCLGtCQUFBQSxVQUFVLEVBQUU7QUFBRVAsb0JBQUFBLEdBQUcsRUFBRSxDQUFQO0FBQVNDLG9CQUFBQSxlQUFlLEVBQUUsQ0FBMUI7QUFBNkJDLG9CQUFBQSxJQUFJLEVBQUUsQ0FBbkM7QUFBc0NDLG9CQUFBQSxJQUFJLEVBQUU7QUFBNUM7QUFBYixpQkFEZSxDQWpCbkI7O0FBQUE7QUFpQkl4QixnQkFBQUEsTUFqQko7QUFBQTtBQUFBOztBQUFBO0FBQUE7QUFBQTtBQXFCSWIsZ0JBQUFBLE9BQU8sQ0FBQ0MsS0FBUjtBQXJCSixrREFzQlcsRUF0Qlg7O0FBQUE7QUFBQSxrREF5QlNZLE1BQU0sQ0FBQ0ssT0FBUCxFQXpCVDs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxPOzs7Ozs7Ozs7Ozt1R0E0QkYsa0JBQXlCd0IsRUFBekI7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7O0FBRU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFJTTtBQUNBO0FBQ01oQixnQkFBQUEsUUFkWixHQWN1QixDQUNmO0FBQ0VDLGtCQUFBQSxNQUFNLEVBQUU7QUFDTk8sb0JBQUFBLEdBQUcsRUFBRSxvQkFBU1EsRUFBVDtBQURDO0FBRFYsaUJBRGUsQ0FkdkI7QUFBQTtBQUFBLHVCQXFCbUJwRCxLQUFLLENBQUNrRCxTQUFOLENBQWdCZCxRQUFoQixFQUEwQmlCLElBQTFCLEVBckJuQjs7QUFBQTtBQUFBOztBQUFBO0FBQUE7QUFBQTs7QUF1Qk07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUdNO0FBQ0E7QUFDQTNDLGdCQUFBQSxPQUFPLENBQUNDLEtBQVI7QUFoQ047O0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsTzs7Ozs7Ozs7Ozs7QUFzQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IkM6XFxwZXJzb25hbFxcaW50ZXJ2aWV3cyBUcmFubmluZ1xcQVVJX1NUVUZGXFx0ZXN0X25vZGVcXHNyY1xcZGFvXFwiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBPYmplY3RJZCB9IGZyb20gXCJic29uXCJcclxuXHJcbmxldCB1c2Vyc1xyXG5sZXQgY2x1YnNcclxuY29uc3QgREVGQVVMVF9TT1JUID0gW1tcInRvbWF0b2VzLnZpZXdlci5udW1SZXZpZXdzXCIsIC0xXV1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIHVzZXJzREFPIHtcclxuICBzdGF0aWMgYXN5bmMgaW5qZWN0REIoY29ubikge1xyXG4gICAgaWYgKHVzZXJzKSB7XHJcbiAgICAgIHJldHVyblxyXG4gICAgfVxyXG4gICAgdHJ5IHtcclxuICAgICAgdXNlcnMgPSBhd2FpdCBjb25uLmRiKHByb2Nlc3MuZW52LkZPT1RCQUxMX05TKS5jb2xsZWN0aW9uKFwidXNlcnNcIilcclxuICAgICAgdGhpcy51c2VycyA9IHVzZXJzIC8vIHRoaXMgaXMgb25seSBmb3IgdGVzdGluZ1xyXG4gICAgfSBjYXRjaCAoZSkge1xyXG4gICAgICBjb25zb2xlLmVycm9yKFxyXG4gICAgICAgIGBVbmFibGUgdG8gZXN0YWJsaXNoIGEgY29sbGVjdGlvbiBoYW5kbGUgaW4gdXNlcnNEQU86ICR7ZX1gLFxyXG4gICAgICApXHJcbiAgICB9XHJcbiAgfVxyXG4gIC8qKlxyXG4gICAqIEZpbmRzIGFuZCByZXR1cm5zIGFsbCB1c2VycyAuXHJcbiAgICogUmV0dXJucyBhIGxpc3Qgb2Ygb2JqZWN0cywgZWFjaCBvYmplY3QgY29udGFpbnMgYSB1c2VyX2lkLCBuYW1lIGFuZCBjbHViLlxyXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBmaWx0ZXJzIC0gVGhlIHNlYXJjaCBwYXJhbWV0ZXJzIHRvIHVzZSBpbiB0aGUgcXVlcnkuXHJcbiAgICogQHBhcmFtIHtudW1iZXJ9IHBhZ2UgLSBUaGUgcGFnZSBvZiB1c2VycyB0byByZXRyaWV2ZS5cclxuICAgKiBAcGFyYW0ge251bWJlcn0gdXNlcnNQZXJQYWdlIC0gVGhlIG51bWJlciBvZiB1c2VycyB0byBkaXNwbGF5IHBlciBwYWdlLlxyXG4gICAqIEByZXR1cm5zIHtHZXRVc2Vyc1Jlc3VsdH0gQW4gb2JqZWN0IHdpdGggdXNlciByZXN1bHRzIGFuZCB0b3RhbCByZXN1bHRzXHJcbiAgICogdGhhdCB3b3VsZCBtYXRjaCB0aGlzIHF1ZXJ5XHJcbiAgICovXHJcbiAgIHN0YXRpYyBhc3luYyBnZXRVc2Vycyh7XHJcbiAgICAvLyBoZXJlJ3Mgd2hlcmUgdGhlIGRlZmF1bHQgcGFyYW1ldGVycyBhcmUgc2V0IGZvciB0aGUgZ2V0VXNlcnMgbWV0aG9kXHJcbiAgICBmaWx0ZXJzID0gbnVsbCxcclxuICAgIHBhZ2UgPSAwLFxyXG4gICAgdXNlcnNQZXJQYWdlID0gMTAsXHJcbiAgfSA9IHt9KSB7XHJcbiAgICBsZXQgcXVlcnlQYXJhbXMgPSB7fVxyXG4gICAgaWYgKGZpbHRlcnMpIHtcclxuICAgICAgaWYgKFwidGV4dFwiIGluIGZpbHRlcnMpIHtcclxuICAgICAgICBxdWVyeVBhcmFtcyA9IHRoaXMudGV4dFNlYXJjaFF1ZXJ5KGZpbHRlcnNbXCJ0ZXh0XCJdKVxyXG4gICAgICB9IGVsc2UgaWYgKFwiY2FzdFwiIGluIGZpbHRlcnMpIHtcclxuICAgICAgICBxdWVyeVBhcmFtcyA9IHRoaXMuY2FzdFNlYXJjaFF1ZXJ5KGZpbHRlcnNbXCJjYXN0XCJdKVxyXG4gICAgICB9IGVsc2UgaWYgKFwiZ2VucmVcIiBpbiBmaWx0ZXJzKSB7XHJcbiAgICAgICAgcXVlcnlQYXJhbXMgPSB0aGlzLmdlbnJlU2VhcmNoUXVlcnkoZmlsdGVyc1tcImdlbnJlXCJdKVxyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgbGV0IHsgcXVlcnkgPSB7fSwgcHJvamVjdCA9IHt9LCBzb3J0ID0gREVGQVVMVF9TT1JUIH0gPSBxdWVyeVBhcmFtc1xyXG4gICAgbGV0IGN1cnNvclxyXG4gICAgdHJ5IHtcclxuICAgICAgY3Vyc29yID0gYXdhaXQgdXNlcnNcclxuICAgICAgICAuZmluZChxdWVyeSlcclxuICAgICAgICAucHJvamVjdChwcm9qZWN0KVxyXG4gICAgICAgIC5zb3J0KHNvcnQpXHJcbiAgICB9IGNhdGNoIChlKSB7XHJcbiAgICAgIGNvbnNvbGUuZXJyb3IoYFVuYWJsZSB0byBpc3N1ZSBmaW5kIGNvbW1hbmQsICR7ZX1gKVxyXG4gICAgICByZXR1cm4geyB1c2Vyc0xpc3Q6IFtdLCB0b3RhbE51bVVzZXJzOiAwIH1cclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgIFRpY2tldDogUGFnaW5nXHJcblxyXG4gICAgQmVmb3JlIHRoaXMgbWV0aG9kIHJldHVybnMgYmFjayB0byB0aGUgQVBJLCB1c2UgdGhlIFwidXNlcnNQZXJQYWdlXCIgYW5kXHJcbiAgICBcInBhZ2VcIiBhcmd1bWVudHMgdG8gZGVjaWRlIHRoZSB1c2VycyB0byBkaXNwbGF5LlxyXG5cclxuICAgIFBhZ2luZyBjYW4gYmUgaW1wbGVtZW50ZWQgYnkgdXNpbmcgdGhlIHNraXAoKSBhbmQgbGltaXQoKSBjdXJzb3IgbWV0aG9kcy5cclxuICAgICovXHJcblxyXG4gICAgLy8gVXNlIHRoZSBjdXJzb3IgdG8gb25seSByZXR1cm4gdGhlIHVzZXJzIHRoYXQgYmVsb25nIG9uIHRoZSBjdXJyZW50IHBhZ2VcclxuICAgIGNvbnN0IGRpc3BsYXlDdXJzb3IgPSBjdXJzb3IubGltaXQodXNlcnNQZXJQYWdlKVxyXG5cclxuICAgIHRyeSB7XHJcbiAgICAgIGNvbnN0IHVzZXJzTGlzdCA9IGF3YWl0IGRpc3BsYXlDdXJzb3IudG9BcnJheSgpXHJcbiAgICAgIGNvbnN0IHRvdGFsTnVtVXNlcnMgPSBwYWdlID09PSAwID8gYXdhaXQgdXNlcnMuY291bnREb2N1bWVudHMocXVlcnkpIDogMFxyXG5cclxuICAgICAgcmV0dXJuIHsgdXNlcnNMaXN0LCB0b3RhbE51bVVzZXJzIH1cclxuICAgIH0gY2F0Y2ggKGUpIHtcclxuICAgICAgY29uc29sZS5lcnJvcihcclxuICAgICAgICBgVW5hYmxlIHRvIGNvbnZlcnQgY3Vyc29yIHRvIGFycmF5IG9yIHByb2JsZW0gY291bnRpbmcgZG9jdW1lbnRzLCAke2V9YCxcclxuICAgICAgKVxyXG4gICAgICByZXR1cm4geyB1c2Vyc0xpc3Q6IFtdLCB0b3RhbE51bVVzZXJzOiAwIH1cclxuICAgIH1cclxuICB9XHJcblxyXG4gIHN0YXRpYyBhc3luYyBnZXROZXN0ZWREb2NzQnlJRChpZHMpIHtcclxuICAgIGxldCBjdXJzb3JcclxuICAgIHRyeSB7XHJcbiAgICAgIGNvbnN0IHBpcGVsaW5lXyA9IFtcclxuICAgICAgICB7IFwiJG1hdGNoXCI6IHsgJ2V4dGVybmFsX2lkX3N0cic6IHskaW46IGlkc319fSxcclxuICAgICAgICB7XHJcbiAgICAgICAgICAkbG9va3VwOiB7XHJcbiAgICAgICAgICAgIGZyb206IFwiY2x1YnNcIixcclxuICAgICAgICAgICAgbGV0OiB7IGNsdWJOYW1lOiBcIiRjbHViXCIgfSxcclxuICAgICAgICAgICAgcGlwZWxpbmU6IFtcclxuICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAkbWF0Y2g6IHtcclxuICAgICAgICAgICAgICAgICAgJGV4cHI6IHsgXHJcbiAgICAgICAgICAgICAgICAgICAgJGFuZDogW1xyXG4gICAgICAgICAgICAgICAgICAgICAgeyAkZXE6IFtcIiRDbHViXCIsIFwiJCRjbHViTmFtZVwiXSB9LFxyXG4gICAgICAgICAgICAgICAgICAgICBdLFxyXG4gICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBdLFxyXG4gICAgICAgICAgICBhczogXCJjbHViX2NvdW50cnlcIixcclxuICAgICAgICAgIH0sXHJcbiAgICAgICAgfSxcclxuICAgICAgICB7XHJcbiAgICAgICAgICAkdW53aW5kOiBcIiRjbHViX2NvdW50cnlcIixcclxuICAgICAgICB9LFxyXG4gICAgICAgIHskcHJvamVjdCA6IHsgX2lkIDogMCwgZXh0ZXJuYWxfaWRfc3RyIDogMSwgbmFtZSA6IDEsIGNsdWIgOiAxLCBcclxuICAgICAgICAgIGNvdW50cnkgOiBcIiRjbHViX2NvdW50cnkuQ291bnRyeVwiLFxyXG4gICAgICAgICAgdG90YWwgOiBcIiRjbHViX2NvdW50cnkuVG90YWxcIn19XHJcbiAgICAgIF1cclxuICAgICAgY3Vyc29yID0gYXdhaXQgdXNlcnMuYWdncmVnYXRlKHBpcGVsaW5lXylcclxuICAgICAgcmV0dXJuIGN1cnNvci50b0FycmF5KClcclxuICAgIH0gY2F0Y2ggKGUpIHtcclxuICAgICAgLyoqXHJcbiAgICAgIFRpY2tldDogRXJyb3IgSGFuZGxpbmdcclxuXHJcbiAgICAgIEhhbmRsZSB0aGUgZXJyb3IgdGhhdCBvY2N1cnMgd2hlbiBhbiBpbnZhbGlkIElEIGlzIHBhc3NlZCB0byB0aGlzIG1ldGhvZC5cclxuICAgICAgV2hlbiB0aGlzIHNwZWNpZmljIGVycm9yIGlzIHRocm93biwgdGhlIG1ldGhvZCBzaG91bGQgcmV0dXJuIGBudWxsYC5cclxuICAgICAgKi9cclxuXHJcbiAgICAgIC8vIFRPRE8gVGlja2V0OiBFcnJvciBIYW5kbGluZ1xyXG4gICAgICAvLyBDYXRjaCB0aGUgSW52YWxpZElkIGVycm9yIGJ5IHN0cmluZyBtYXRjaGluZywgYW5kIHRoZW4gaGFuZGxlIGl0LlxyXG4gICAgICBjb25zb2xlLmVycm9yKGBTb21ldGhpbmcgd2VudCB3cm9uZyBpbiBnZXRVc2VyQnlJRDogJHtlfWApXHJcbiAgICAgIHRocm93IGVcclxuICAgIH1cclxuICB9XHJcblxyXG4gIHN0YXRpYyBhc3luYyBnZXRVc2Vyc0J5SWRzKGlkcykge1xyXG4gICAgLyoqXHJcbiAgICBUaWNrZXQ6IFByb2plY3Rpb25cclxuXHJcbiAgICBXcml0ZSBhIHF1ZXJ5IHRoYXQgbWF0Y2hlcyB1c2VycyB3aXRoIHRoZSBpZHMgaW4gdGhlIFwiaWRzXCJcclxuICAgIGxpc3QsIGJ1dCBvbmx5IHJldHVybnMgdXNlcl9pZCwgbmFtZSwgY2x1YiBvZiBlYWNoIHVzZXIuXHJcblxyXG4gICAgUmVtZW1iZXIgdGhhdCBpbiBNb25nb0RCLCB0aGUgJGluIG9wZXJhdG9yIGNhbiBiZSB1c2VkIHdpdGggYSBsaXN0IHRvXHJcbiAgICBtYXRjaCBvbmUgb3IgbW9yZSB2YWx1ZXMgb2YgYSBzcGVjaWZpYyBmaWVsZC5cclxuICAgICovXHJcbiAgICBsZXQgY3Vyc29yXHJcbiAgICB0cnkge1xyXG4gICAgICAvLyBUT0RPIFRpY2tldDogUHJvamVjdGlvblxyXG4gICAgICAvLyBGaW5kIHVzZXJzIG1hdGNoaW5nIHRoZSBcImlkc1wiIGxpc3RcclxuICAgICAgLy8gRG8gbm90IHB1dCBhIGxpbWl0IGluIHlvdXIgb3duIGltcGxlbWVudGF0aW9uLCB0aGUgbGltaXRcclxuICAgICAgLy8gaGVyZSBpcyBvbmx5IGluY2x1ZGVkIHRvIGF2b2lkIHNlbmRpbmcgNDYwMDAgZG9jdW1lbnRzIGRvd24gdGhlXHJcbiAgICAgIC8vIHdpcmUuXHJcbiAgICAgIGN1cnNvciA9IGF3YWl0IHVzZXJzLmZpbmQoeydleHRlcm5hbF9pZF9zdHInOiB7JGluOiBpZHN9fSxcclxuICAgICAge3Byb2plY3Rpb246IHsgX2lkOiAwLGV4dGVybmFsX2lkX3N0cjogMSwgbmFtZTogMSwgY2x1YjogMSB9fSlcclxuXHJcbiAgICB9IGNhdGNoIChlKSB7XHJcbiAgICAgIGNvbnNvbGUuZXJyb3IoYFVuYWJsZSB0byBpc3N1ZSBmaW5kIGNvbW1hbmQsICR7ZX1gKVxyXG4gICAgICByZXR1cm4gW11cclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4gY3Vyc29yLnRvQXJyYXkoKVxyXG4gIH1cclxuXHJcbnN0YXRpYyBhc3luYyBnZXRVc2VyQnlJRChpZCkge1xyXG4gICAgdHJ5IHtcclxuICAgICAgLyoqXHJcbiAgICAgIFRpY2tldDogR2V0IENvbW1lbnRzXHJcblxyXG4gICAgICBHaXZlbiBhIHVzZXIgSUQsIGJ1aWxkIGFuIEFnZ3JlZ2F0aW9uIFBpcGVsaW5lIHRvIHJldHJpZXZlIHRoZSBjb21tZW50c1xyXG4gICAgICBtYXRjaGluZyB0aGF0IHVzZXIncyBJRC5cclxuXHJcbiAgICAgIFRoZSAkbWF0Y2ggc3RhZ2UgaXMgYWxyZWFkeSBjb21wbGV0ZWQuIFlvdSB3aWxsIG5lZWQgdG8gYWRkIGEgJGxvb2t1cFxyXG4gICAgICBzdGFnZSB0aGF0IHNlYXJjaGVzIHRoZSBgY29tbWVudHNgIGNvbGxlY3Rpb24gZm9yIHRoZSBjb3JyZWN0IGNvbW1lbnRzLlxyXG4gICAgICAqL1xyXG5cclxuICAgICAgLy8gVE9ETyBUaWNrZXQ6IEdldCBDb21tZW50c1xyXG4gICAgICAvLyBJbXBsZW1lbnQgdGhlIHJlcXVpcmVkIHBpcGVsaW5lLlxyXG4gICAgICBjb25zdCBwaXBlbGluZSA9IFtcclxuICAgICAgICB7XHJcbiAgICAgICAgICAkbWF0Y2g6IHtcclxuICAgICAgICAgICAgX2lkOiBPYmplY3RJZChpZClcclxuICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgIF1cclxuICAgICAgcmV0dXJuIGF3YWl0IHVzZXJzLmFnZ3JlZ2F0ZShwaXBlbGluZSkubmV4dCgpXHJcbiAgICB9IGNhdGNoIChlKSB7XHJcbiAgICAgIC8qKlxyXG4gICAgICBUaWNrZXQ6IEVycm9yIEhhbmRsaW5nXHJcblxyXG4gICAgICBIYW5kbGUgdGhlIGVycm9yIHRoYXQgb2NjdXJzIHdoZW4gYW4gaW52YWxpZCBJRCBpcyBwYXNzZWQgdG8gdGhpcyBtZXRob2QuXHJcbiAgICAgIFdoZW4gdGhpcyBzcGVjaWZpYyBlcnJvciBpcyB0aHJvd24sIHRoZSBtZXRob2Qgc2hvdWxkIHJldHVybiBgbnVsbGAuXHJcbiAgICAgICovXHJcblxyXG4gICAgICAvLyBUT0RPIFRpY2tldDogRXJyb3IgSGFuZGxpbmdcclxuICAgICAgLy8gQ2F0Y2ggdGhlIEludmFsaWRJZCBlcnJvciBieSBzdHJpbmcgbWF0Y2hpbmcsIGFuZCB0aGVuIGhhbmRsZSBpdC5cclxuICAgICAgY29uc29sZS5lcnJvcihgU29tZXRoaW5nIHdlbnQgd3JvbmcgaW4gZ2V0VXNlckJ5SUQ6ICR7ZX1gKVxyXG4gICAgICB0aHJvdyBlXHJcbiAgICB9XHJcbiAgfVxyXG59XHJcblxyXG4vKipcclxuICogUmVzdWx0IHNldCBmb3IgZ2V0TW92aWVzIG1ldGhvZFxyXG4gKiBAdHlwZWRlZiBHZXRVc2Vyc1Jlc3VsdFxyXG4gKiBAcHJvcGVydHkge01mbGl4TW92aWVzW119IHVzZXJzTGlzdFxyXG4gKiBAcHJvcGVydHkge251bWJlcn0gdG90YWxOdW1Vc2Vyc1xyXG4gKi8iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "usersDAO.js"
      ],
      "names": [
        "users",
        "clubs",
        "DEFAULT_SORT",
        "usersDAO",
        "conn",
        "db",
        "process",
        "env",
        "FOOTBALL_NS",
        "collection",
        "console",
        "error",
        "filters",
        "page",
        "usersPerPage",
        "queryParams",
        "textSearchQuery",
        "castSearchQuery",
        "genreSearchQuery",
        "query",
        "project",
        "sort",
        "find",
        "cursor",
        "usersList",
        "totalNumUsers",
        "displayCursor",
        "limit",
        "toArray",
        "countDocuments",
        "ids",
        "pipeline_",
        "$in",
        "$lookup",
        "from",
        "clubName",
        "pipeline",
        "$match",
        "$expr",
        "$and",
        "$eq",
        "as",
        "$unwind",
        "$project",
        "_id",
        "external_id_str",
        "name",
        "club",
        "country",
        "total",
        "aggregate",
        "projection",
        "id",
        "next"
      ],
      "mappings": ";;;;;;;;;;;;;;;;;AAAA;;AAEA,IAAIA,KAAJ;AACA,IAAIC,KAAJ;AACA,IAAMC,YAAY,GAAG,CAAC,CAAC,4BAAD,EAA+B,CAAC,CAAhC,CAAD,CAArB;;IAEqBC,Q;;;;;;;;oGACnB,iBAAsBC,IAAtB;AAAA;AAAA;AAAA;AAAA;AAAA,qBACMJ,KADN;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA,uBAKkBI,IAAI,CAACC,EAAL,CAAQC,OAAO,CAACC,GAAR,CAAYC,WAApB,EAAiCC,UAAjC,CAA4C,OAA5C,CALlB;;AAAA;AAKIT,gBAAAA,KALJ;AAMI,qBAAKA,KAAL,GAAaA,KAAb,CANJ,CAMuB;;AANvB;AAAA;;AAAA;AAAA;AAAA;AAQIU,gBAAAA,OAAO,CAACC,KAAR;;AARJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;AAaA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;oGACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,kFAKG,EALH,sBAECC,OAFD,EAECA,OAFD,6BAEW,IAFX,kCAGCC,IAHD,EAGCA,IAHD,0BAGQ,CAHR,uCAICC,YAJD,EAICA,YAJD,kCAIgB,EAJhB;AAMKC,gBAAAA,WANL,GAMmB,EANnB;;AAOC,oBAAIH,OAAJ,EAAa;AACX,sBAAI,UAAUA,OAAd,EAAuB;AACrBG,oBAAAA,WAAW,GAAG,KAAKC,eAAL,CAAqBJ,OAAO,CAAC,MAAD,CAA5B,CAAd;AACD,mBAFD,MAEO,IAAI,UAAUA,OAAd,EAAuB;AAC5BG,oBAAAA,WAAW,GAAG,KAAKE,eAAL,CAAqBL,OAAO,CAAC,MAAD,CAA5B,CAAd;AACD,mBAFM,MAEA,IAAI,WAAWA,OAAf,EAAwB;AAC7BG,oBAAAA,WAAW,GAAG,KAAKG,gBAAL,CAAsBN,OAAO,CAAC,OAAD,CAA7B,CAAd;AACD;AACF;;AAfF,+BAiByDG,WAjBzD,oCAiBOI,KAjBP,EAiBOA,KAjBP,mCAiBe,EAjBf,2DAiBmBC,OAjBnB,EAiBmBA,OAjBnB,qCAiB6B,EAjB7B,0DAiBiCC,IAjBjC,EAiBiCA,IAjBjC,kCAiBwCnB,YAjBxC;AAAA;AAAA;AAAA,uBAoBkBF,KAAK,CACjBsB,IADY,CACPH,KADO,EAEZC,OAFY,CAEJA,OAFI,EAGZC,IAHY,CAGPA,IAHO,CApBlB;;AAAA;AAoBGE,gBAAAA,MApBH;AAAA;AAAA;;AAAA;AAAA;AAAA;AAyBGb,gBAAAA,OAAO,CAACC,KAAR;AAzBH,kDA0BU;AAAEa,kBAAAA,SAAS,EAAE,EAAb;AAAiBC,kBAAAA,aAAa,EAAE;AAAhC,iBA1BV;;AAAA;AA6BC;AACJ;AACA;AACA;AACA;AACA;AAII;AACMC,gBAAAA,aAvCP,GAuCuBH,MAAM,CAACI,KAAP,CAAab,YAAb,CAvCvB;AAAA;AAAA;AAAA,uBA0C2BY,aAAa,CAACE,OAAd,EA1C3B;;AAAA;AA0CSJ,gBAAAA,SA1CT;;AAAA,sBA2CyBX,IAAI,KAAK,CA3ClC;AAAA;AAAA;AAAA;;AAAA;AAAA,uBA2C4Cb,KAAK,CAAC6B,cAAN,CAAqBV,KAArB,CA3C5C;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA,+BA2C0E,CA3C1E;;AAAA;AA2CSM,gBAAAA,aA3CT;AAAA,kDA6CU;AAAED,kBAAAA,SAAS,EAATA,SAAF;AAAaC,kBAAAA,aAAa,EAAbA;AAAb,iBA7CV;;AAAA;AAAA;AAAA;AA+CGf,gBAAAA,OAAO,CAACC,KAAR;AA/CH,kDAkDU;AAAEa,kBAAAA,SAAS,EAAE,EAAb;AAAiBC,kBAAAA,aAAa,EAAE;AAAhC,iBAlDV;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;;6GAsDD,kBAA+BK,GAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGUC,gBAAAA,SAHV,GAGsB,CAChB;AAAE,4BAAU;AAAE,uCAAmB;AAACC,sBAAAA,GAAG,EAAEF;AAAN;AAArB;AAAZ,iBADgB,EAEhB;AACEG,kBAAAA,OAAO,EAAE;AACPC,oBAAAA,IAAI,EAAE,OADC;AAEP,2BAAK;AAAEC,sBAAAA,QAAQ,EAAE;AAAZ,qBAFE;AAGPC,oBAAAA,QAAQ,EAAE,CACR;AACEC,sBAAAA,MAAM,EAAE;AACNC,wBAAAA,KAAK,EAAE;AACLC,0BAAAA,IAAI,EAAE,CACJ;AAAEC,4BAAAA,GAAG,EAAE,CAAC,OAAD,EAAU,YAAV;AAAP,2BADI;AADD;AADD;AADV,qBADQ,CAHH;AAcPC,oBAAAA,EAAE,EAAE;AAdG;AADX,iBAFgB,EAoBhB;AACEC,kBAAAA,OAAO,EAAE;AADX,iBApBgB,EAuBhB;AAACC,kBAAAA,QAAQ,EAAG;AAAEC,oBAAAA,GAAG,EAAG,CAAR;AAAWC,oBAAAA,eAAe,EAAG,CAA7B;AAAgCC,oBAAAA,IAAI,EAAG,CAAvC;AAA0CC,oBAAAA,IAAI,EAAG,CAAjD;AACVC,oBAAAA,OAAO,EAAG,uBADA;AAEVC,oBAAAA,KAAK,EAAG;AAFE;AAAZ,iBAvBgB,CAHtB;AAAA;AAAA,uBA8BmBjD,KAAK,CAACkD,SAAN,CAAgBnB,SAAhB,CA9BnB;;AAAA;AA8BIR,gBAAAA,MA9BJ;AAAA,kDA+BWA,MAAM,CAACK,OAAP,EA/BX;;AAAA;AAAA;AAAA;;AAiCI;AACN;AACA;AACA;AACA;AAGM;AACA;AACAlB,gBAAAA,OAAO,CAACC,KAAR;AA1CJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;;yGA+CA,kBAA2BmB,GAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAiBmB9B,KAAK,CAACsB,IAAN,CAAW;AAAC,qCAAmB;AAACU,oBAAAA,GAAG,EAAEF;AAAN;AAApB,iBAAX,EACf;AAACqB,kBAAAA,UAAU,EAAE;AAAEP,oBAAAA,GAAG,EAAE,CAAP;AAASC,oBAAAA,eAAe,EAAE,CAA1B;AAA6BC,oBAAAA,IAAI,EAAE,CAAnC;AAAsCC,oBAAAA,IAAI,EAAE;AAA5C;AAAb,iBADe,CAjBnB;;AAAA;AAiBIxB,gBAAAA,MAjBJ;AAAA;AAAA;;AAAA;AAAA;AAAA;AAqBIb,gBAAAA,OAAO,CAACC,KAAR;AArBJ,kDAsBW,EAtBX;;AAAA;AAAA,kDAyBSY,MAAM,CAACK,OAAP,EAzBT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;;uGA4BF,kBAAyBwB,EAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAEM;AACN;AACA;AACA;AACA;AACA;AACA;AAIM;AACA;AACMhB,gBAAAA,QAdZ,GAcuB,CACf;AACEC,kBAAAA,MAAM,EAAE;AACNO,oBAAAA,GAAG,EAAE,oBAASQ,EAAT;AADC;AADV,iBADe,CAdvB;AAAA;AAAA,uBAqBmBpD,KAAK,CAACkD,SAAN,CAAgBd,QAAhB,EAA0BiB,IAA1B,EArBnB;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAuBM;AACN;AACA;AACA;AACA;AAGM;AACA;AACA3C,gBAAAA,OAAO,CAACC,KAAR;AAhCN;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;;AAsCA;AACA;AACA;AACA;AACA;AACA",
      "sourceRoot": "C:\\personal\\interviews Tranning\\AUI_STUFF\\test_node\\src\\dao\\",
      "sourcesContent": [
        "import { ObjectId } from \"bson\"\r\n\r\nlet users\r\nlet clubs\r\nconst DEFAULT_SORT = [[\"tomatoes.viewer.numReviews\", -1]]\r\n\r\nexport default class usersDAO {\r\n  static async injectDB(conn) {\r\n    if (users) {\r\n      return\r\n    }\r\n    try {\r\n      users = await conn.db(process.env.FOOTBALL_NS).collection(\"users\")\r\n      this.users = users // this is only for testing\r\n    } catch (e) {\r\n      console.error(\r\n        `Unable to establish a collection handle in usersDAO: ${e}`,\r\n      )\r\n    }\r\n  }\r\n  /**\r\n   * Finds and returns all users .\r\n   * Returns a list of objects, each object contains a user_id, name and club.\r\n   * @param {Object} filters - The search parameters to use in the query.\r\n   * @param {number} page - The page of users to retrieve.\r\n   * @param {number} usersPerPage - The number of users to display per page.\r\n   * @returns {GetUsersResult} An object with user results and total results\r\n   * that would match this query\r\n   */\r\n   static async getUsers({\r\n    // here's where the default parameters are set for the getUsers method\r\n    filters = null,\r\n    page = 0,\r\n    usersPerPage = 10,\r\n  } = {}) {\r\n    let queryParams = {}\r\n    if (filters) {\r\n      if (\"text\" in filters) {\r\n        queryParams = this.textSearchQuery(filters[\"text\"])\r\n      } else if (\"cast\" in filters) {\r\n        queryParams = this.castSearchQuery(filters[\"cast\"])\r\n      } else if (\"genre\" in filters) {\r\n        queryParams = this.genreSearchQuery(filters[\"genre\"])\r\n      }\r\n    }\r\n\r\n    let { query = {}, project = {}, sort = DEFAULT_SORT } = queryParams\r\n    let cursor\r\n    try {\r\n      cursor = await users\r\n        .find(query)\r\n        .project(project)\r\n        .sort(sort)\r\n    } catch (e) {\r\n      console.error(`Unable to issue find command, ${e}`)\r\n      return { usersList: [], totalNumUsers: 0 }\r\n    }\r\n\r\n    /**\r\n    Ticket: Paging\r\n\r\n    Before this method returns back to the API, use the \"usersPerPage\" and\r\n    \"page\" arguments to decide the users to display.\r\n\r\n    Paging can be implemented by using the skip() and limit() cursor methods.\r\n    */\r\n\r\n    // Use the cursor to only return the users that belong on the current page\r\n    const displayCursor = cursor.limit(usersPerPage)\r\n\r\n    try {\r\n      const usersList = await displayCursor.toArray()\r\n      const totalNumUsers = page === 0 ? await users.countDocuments(query) : 0\r\n\r\n      return { usersList, totalNumUsers }\r\n    } catch (e) {\r\n      console.error(\r\n        `Unable to convert cursor to array or problem counting documents, ${e}`,\r\n      )\r\n      return { usersList: [], totalNumUsers: 0 }\r\n    }\r\n  }\r\n\r\n  static async getNestedDocsByID(ids) {\r\n    let cursor\r\n    try {\r\n      const pipeline_ = [\r\n        { \"$match\": { 'external_id_str': {$in: ids}}},\r\n        {\r\n          $lookup: {\r\n            from: \"clubs\",\r\n            let: { clubName: \"$club\" },\r\n            pipeline: [\r\n              {\r\n                $match: {\r\n                  $expr: { \r\n                    $and: [\r\n                      { $eq: [\"$Club\", \"$$clubName\"] },\r\n                     ],\r\n                  },\r\n                },\r\n              },\r\n            ],\r\n            as: \"club_country\",\r\n          },\r\n        },\r\n        {\r\n          $unwind: \"$club_country\",\r\n        },\r\n        {$project : { _id : 0, external_id_str : 1, name : 1, club : 1, \r\n          country : \"$club_country.Country\",\r\n          total : \"$club_country.Total\"}}\r\n      ]\r\n      cursor = await users.aggregate(pipeline_)\r\n      return cursor.toArray()\r\n    } catch (e) {\r\n      /**\r\n      Ticket: Error Handling\r\n\r\n      Handle the error that occurs when an invalid ID is passed to this method.\r\n      When this specific error is thrown, the method should return `null`.\r\n      */\r\n\r\n      // TODO Ticket: Error Handling\r\n      // Catch the InvalidId error by string matching, and then handle it.\r\n      console.error(`Something went wrong in getUserByID: ${e}`)\r\n      throw e\r\n    }\r\n  }\r\n\r\n  static async getUsersByIds(ids) {\r\n    /**\r\n    Ticket: Projection\r\n\r\n    Write a query that matches users with the ids in the \"ids\"\r\n    list, but only returns user_id, name, club of each user.\r\n\r\n    Remember that in MongoDB, the $in operator can be used with a list to\r\n    match one or more values of a specific field.\r\n    */\r\n    let cursor\r\n    try {\r\n      // TODO Ticket: Projection\r\n      // Find users matching the \"ids\" list\r\n      // Do not put a limit in your own implementation, the limit\r\n      // here is only included to avoid sending 46000 documents down the\r\n      // wire.\r\n      cursor = await users.find({'external_id_str': {$in: ids}},\r\n      {projection: { _id: 0,external_id_str: 1, name: 1, club: 1 }})\r\n\r\n    } catch (e) {\r\n      console.error(`Unable to issue find command, ${e}`)\r\n      return []\r\n    }\r\n\r\n    return cursor.toArray()\r\n  }\r\n\r\nstatic async getUserByID(id) {\r\n    try {\r\n      /**\r\n      Ticket: Get Comments\r\n\r\n      Given a user ID, build an Aggregation Pipeline to retrieve the comments\r\n      matching that user's ID.\r\n\r\n      The $match stage is already completed. You will need to add a $lookup\r\n      stage that searches the `comments` collection for the correct comments.\r\n      */\r\n\r\n      // TODO Ticket: Get Comments\r\n      // Implement the required pipeline.\r\n      const pipeline = [\r\n        {\r\n          $match: {\r\n            _id: ObjectId(id)\r\n          }\r\n        }\r\n      ]\r\n      return await users.aggregate(pipeline).next()\r\n    } catch (e) {\r\n      /**\r\n      Ticket: Error Handling\r\n\r\n      Handle the error that occurs when an invalid ID is passed to this method.\r\n      When this specific error is thrown, the method should return `null`.\r\n      */\r\n\r\n      // TODO Ticket: Error Handling\r\n      // Catch the InvalidId error by string matching, and then handle it.\r\n      console.error(`Something went wrong in getUserByID: ${e}`)\r\n      throw e\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Result set for getMovies method\r\n * @typedef GetUsersResult\r\n * @property {MflixMovies[]} usersList\r\n * @property {number} totalNumUsers\r\n */"
      ]
    },
    "sourceType": "script",
    "mtime": 1637523659902
  },
  "{\"assumptions\":{},\"sourceRoot\":\"C:\\\\personal\\\\interviews Tranning\\\\AUI_STUFF\\\\test_node\\\\src\\\\api\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\personal\\\\interviews Tranning\\\\AUI_STUFF\\\\test_node\",\"filename\":\"C:\\\\personal\\\\interviews Tranning\\\\AUI_STUFF\\\\test_node\\\\src\\\\api\\\\comments.controller.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\personal\\\\interviews Tranning\\\\AUI_STUFF\\\\test_node\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"MemberExpression\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":{},\"_verified\":{},\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-class-static-block\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ClassBody\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.16.0": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "C:\\personal\\interviews Tranning\\AUI_STUFF\\test_node\\src\\api\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\personal\\interviews Tranning\\AUI_STUFF\\test_node",
      "filename": "C:\\personal\\interviews Tranning\\AUI_STUFF\\test_node\\src\\api\\comments.controller.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "C:\\personal\\interviews Tranning\\AUI_STUFF\\test_node",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "MemberExpression": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": {},
            "_verified": {},
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-class-static-block",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ClassBody": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-private-property-in-object",
          "visitor": {
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\personal\\interviews Tranning\\AUI_STUFF\\test_node\\src\\api\\comments.controller.js",
        "plugins": [
          "classStaticBlock",
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\personal\\interviews Tranning\\AUI_STUFF\\test_node\\src\\api\\comments.controller.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\personal\\interviews Tranning\\AUI_STUFF\\test_node\\src\\api\\",
        "sourceFileName": "comments.controller.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _usersDAO = _interopRequireDefault(require(\"../dao/usersDAO\"));\n\nvar _commentsDAO = _interopRequireDefault(require(\"../dao/commentsDAO\"));\n\nvar _users = require(\"./users.controller\");\n\nvar _bson = require(\"bson\");\n\nvar CommentsController = /*#__PURE__*/function () {\n  function CommentsController() {\n    (0, _classCallCheck2[\"default\"])(this, CommentsController);\n  }\n\n  (0, _createClass2[\"default\"])(CommentsController, null, [{\n    key: \"apiPostComment\",\n    value: function () {\n      var _apiPostComment = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee(req, res, next) {\n        var userJwt, user, error, movieId, comment, date, commentResponse, updatedComments;\n        return _regenerator[\"default\"].wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                userJwt = req.get(\"Authorization\").slice(\"Bearer \".length);\n                _context.next = 4;\n                return _users.User.decoded(userJwt);\n\n              case 4:\n                user = _context.sent;\n                error = user.error;\n\n                if (!error) {\n                  _context.next = 9;\n                  break;\n                }\n\n                res.status(401).json({\n                  error: error\n                });\n                return _context.abrupt(\"return\");\n\n              case 9:\n                movieId = req.body.user_id;\n                comment = req.body.comment;\n                date = new Date();\n                _context.next = 14;\n                return _commentsDAO[\"default\"].addComment((0, _bson.ObjectId)(userId), user, comment, date);\n\n              case 14:\n                commentResponse = _context.sent;\n                _context.next = 17;\n                return _usersDAO[\"default\"].getUserByID(movieId);\n\n              case 17:\n                updatedComments = _context.sent;\n                res.json({\n                  status: \"success\",\n                  comments: updatedComments.comments\n                });\n                _context.next = 24;\n                break;\n\n              case 21:\n                _context.prev = 21;\n                _context.t0 = _context[\"catch\"](0);\n                res.status(500).json({\n                  e: _context.t0\n                });\n\n              case 24:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[0, 21]]);\n      }));\n\n      function apiPostComment(_x, _x2, _x3) {\n        return _apiPostComment.apply(this, arguments);\n      }\n\n      return apiPostComment;\n    }()\n  }, {\n    key: \"apiUpdateComment\",\n    value: function () {\n      var _apiUpdateComment = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee2(req, res, next) {\n        var userJwt, user, error, commentId, text, date, commentResponse, _userId, updatedComments;\n\n        return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                userJwt = req.get(\"Authorization\").slice(\"Bearer \".length);\n                _context2.next = 4;\n                return _users.User.decoded(userJwt);\n\n              case 4:\n                user = _context2.sent;\n                error = user.error;\n\n                if (!error) {\n                  _context2.next = 9;\n                  break;\n                }\n\n                res.status(401).json({\n                  error: error\n                });\n                return _context2.abrupt(\"return\");\n\n              case 9:\n                commentId = req.body.comment_id;\n                text = req.body.updated_comment;\n                date = new Date();\n                _context2.next = 14;\n                return _commentsDAO[\"default\"].updateComment((0, _bson.ObjectId)(commentId), user.email, text, date);\n\n              case 14:\n                commentResponse = _context2.sent;\n                error = commentResponse.error;\n\n                if (error) {\n                  res.status(400).json({\n                    error: error\n                  });\n                }\n\n                if (!(commentResponse.modifiedCount === 0)) {\n                  _context2.next = 19;\n                  break;\n                }\n\n                throw new Error(\"unable to update comment - user may not be original poster\");\n\n              case 19:\n                _userId = req.body.user_id;\n                _context2.next = 22;\n                return _usersDAO[\"default\"].getUserByID(_userId);\n\n              case 22:\n                updatedComments = _context2.sent;\n                res.json({\n                  comments: updatedComments.comments\n                });\n                _context2.next = 29;\n                break;\n\n              case 26:\n                _context2.prev = 26;\n                _context2.t0 = _context2[\"catch\"](0);\n                res.status(500).json({\n                  e: _context2.t0\n                });\n\n              case 29:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, null, [[0, 26]]);\n      }));\n\n      function apiUpdateComment(_x4, _x5, _x6) {\n        return _apiUpdateComment.apply(this, arguments);\n      }\n\n      return apiUpdateComment;\n    }()\n  }, {\n    key: \"apiDeleteComment\",\n    value: function () {\n      var _apiDeleteComment = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee3(req, res, next) {\n        var userJwt, user, error, commentId, userEmail, commentResponse, movieId, _yield$MoviesDAO$getM, comments;\n\n        return _regenerator[\"default\"].wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.prev = 0;\n                userJwt = req.get(\"Authorization\").slice(\"Bearer \".length);\n                _context3.next = 4;\n                return _users.User.decoded(userJwt);\n\n              case 4:\n                user = _context3.sent;\n                error = user.error;\n\n                if (!error) {\n                  _context3.next = 9;\n                  break;\n                }\n\n                res.status(401).json({\n                  error: error\n                });\n                return _context3.abrupt(\"return\");\n\n              case 9:\n                commentId = req.body.comment_id;\n                userEmail = user.email;\n                _context3.next = 13;\n                return _commentsDAO[\"default\"].deleteComment((0, _bson.ObjectId)(commentId), userEmail);\n\n              case 13:\n                commentResponse = _context3.sent;\n                movieId = req.body.movie_id;\n                _context3.next = 17;\n                return MoviesDAO.getMovieByID(movieId);\n\n              case 17:\n                _yield$MoviesDAO$getM = _context3.sent;\n                comments = _yield$MoviesDAO$getM.comments;\n                res.json({\n                  comments: comments\n                });\n                _context3.next = 25;\n                break;\n\n              case 22:\n                _context3.prev = 22;\n                _context3.t0 = _context3[\"catch\"](0);\n                res.status(500).json({\n                  e: _context3.t0\n                });\n\n              case 25:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, null, [[0, 22]]);\n      }));\n\n      function apiDeleteComment(_x7, _x8, _x9) {\n        return _apiDeleteComment.apply(this, arguments);\n      }\n\n      return apiDeleteComment;\n    }()\n  }, {\n    key: \"apiCommentReport\",\n    value: function () {\n      var _apiCommentReport = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee4(req, res, next) {\n        var userJwt, user, error, report;\n        return _regenerator[\"default\"].wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.prev = 0;\n                userJwt = req.get(\"Authorization\").slice(\"Bearer \".length);\n                _context4.next = 4;\n                return _users.User.decoded(userJwt);\n\n              case 4:\n                user = _context4.sent;\n                error = user.error;\n\n                if (!error) {\n                  _context4.next = 9;\n                  break;\n                }\n\n                res.status(401).json({\n                  error: error\n                });\n                return _context4.abrupt(\"return\");\n\n              case 9:\n                if (!_usersDAO[\"default\"].checkAdmin(user.email)) {\n                  _context4.next = 15;\n                  break;\n                }\n\n                _context4.next = 12;\n                return _commentsDAO[\"default\"].mostActiveCommenters();\n\n              case 12:\n                report = _context4.sent;\n                res.json({\n                  report: report\n                });\n                return _context4.abrupt(\"return\");\n\n              case 15:\n                res.status(401).json({\n                  status: \"fail\"\n                });\n                _context4.next = 21;\n                break;\n\n              case 18:\n                _context4.prev = 18;\n                _context4.t0 = _context4[\"catch\"](0);\n                res.status(500).json({\n                  e: _context4.t0\n                });\n\n              case 21:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, null, [[0, 18]]);\n      }));\n\n      function apiCommentReport(_x10, _x11, _x12) {\n        return _apiCommentReport.apply(this, arguments);\n      }\n\n      return apiCommentReport;\n    }()\n  }]);\n  return CommentsController;\n}();\n\nexports[\"default\"] = CommentsController;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "comments.controller.js"
      ],
      "names": [
        "CommentsController",
        "req",
        "res",
        "next",
        "userJwt",
        "get",
        "slice",
        "length",
        "User",
        "decoded",
        "user",
        "error",
        "status",
        "json",
        "movieId",
        "body",
        "user_id",
        "comment",
        "date",
        "Date",
        "CommentsDAO",
        "addComment",
        "userId",
        "commentResponse",
        "UsersDAO",
        "getUserByID",
        "updatedComments",
        "comments",
        "e",
        "commentId",
        "comment_id",
        "text",
        "updated_comment",
        "updateComment",
        "email",
        "modifiedCount",
        "Error",
        "userEmail",
        "deleteComment",
        "movie_id",
        "MoviesDAO",
        "getMovieByID",
        "checkAdmin",
        "mostActiveCommenters",
        "report"
      ],
      "mappings": ";;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;IAEqBA,kB;;;;;;;;0GACnB,iBAA4BC,GAA5B,EAAiCC,GAAjC,EAAsCC,IAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEUC,gBAAAA,OAFV,GAEoBH,GAAG,CAACI,GAAJ,CAAQ,eAAR,EAAyBC,KAAzB,CAA+B,UAAUC,MAAzC,CAFpB;AAAA;AAAA,uBAGuBC,YAAKC,OAAL,CAAaL,OAAb,CAHvB;;AAAA;AAGUM,gBAAAA,IAHV;AAIUC,gBAAAA,KAJV,GAIoBD,IAJpB,CAIUC,KAJV;;AAAA,qBAKQA,KALR;AAAA;AAAA;AAAA;;AAMMT,gBAAAA,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEF,kBAAAA,KAAK,EAALA;AAAF,iBAArB;AANN;;AAAA;AAUUG,gBAAAA,OAVV,GAUoBb,GAAG,CAACc,IAAJ,CAASC,OAV7B;AAWUC,gBAAAA,OAXV,GAWoBhB,GAAG,CAACc,IAAJ,CAASE,OAX7B;AAYUC,gBAAAA,IAZV,GAYiB,IAAIC,IAAJ,EAZjB;AAAA;AAAA,uBAckCC,wBAAYC,UAAZ,CAC5B,oBAASC,MAAT,CAD4B,EAE5BZ,IAF4B,EAG5BO,OAH4B,EAI5BC,IAJ4B,CAdlC;;AAAA;AAcUK,gBAAAA,eAdV;AAAA;AAAA,uBAqBkCC,qBAASC,WAAT,CAAqBX,OAArB,CArBlC;;AAAA;AAqBUY,gBAAAA,eArBV;AAuBIxB,gBAAAA,GAAG,CAACW,IAAJ,CAAS;AAAED,kBAAAA,MAAM,EAAE,SAAV;AAAqBe,kBAAAA,QAAQ,EAAED,eAAe,CAACC;AAA/C,iBAAT;AAvBJ;AAAA;;AAAA;AAAA;AAAA;AAyBIzB,gBAAAA,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEe,kBAAAA,CAAC;AAAH,iBAArB;;AAzBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;;4GA6BA,kBAA8B3B,GAA9B,EAAmCC,GAAnC,EAAwCC,IAAxC;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAEUC,gBAAAA,OAFV,GAEoBH,GAAG,CAACI,GAAJ,CAAQ,eAAR,EAAyBC,KAAzB,CAA+B,UAAUC,MAAzC,CAFpB;AAAA;AAAA,uBAGuBC,YAAKC,OAAL,CAAaL,OAAb,CAHvB;;AAAA;AAGUM,gBAAAA,IAHV;AAIUC,gBAAAA,KAJV,GAIoBD,IAJpB,CAIUC,KAJV;;AAAA,qBAKQA,KALR;AAAA;AAAA;AAAA;;AAMMT,gBAAAA,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEF,kBAAAA,KAAK,EAALA;AAAF,iBAArB;AANN;;AAAA;AAUUkB,gBAAAA,SAVV,GAUsB5B,GAAG,CAACc,IAAJ,CAASe,UAV/B;AAWUC,gBAAAA,IAXV,GAWiB9B,GAAG,CAACc,IAAJ,CAASiB,eAX1B;AAYUd,gBAAAA,IAZV,GAYiB,IAAIC,IAAJ,EAZjB;AAAA;AAAA,uBAckCC,wBAAYa,aAAZ,CAC5B,oBAASJ,SAAT,CAD4B,EAE5BnB,IAAI,CAACwB,KAFuB,EAG5BH,IAH4B,EAI5Bb,IAJ4B,CAdlC;;AAAA;AAcUK,gBAAAA,eAdV;AAqBUZ,gBAAAA,KArBV,GAqBoBY,eArBpB,CAqBUZ,KArBV;;AAsBI,oBAAIA,KAAJ,EAAW;AACTT,kBAAAA,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEF,oBAAAA,KAAK,EAALA;AAAF,mBAArB;AACD;;AAxBL,sBA0BQY,eAAe,CAACY,aAAhB,KAAkC,CA1B1C;AAAA;AAAA;AAAA;;AAAA,sBA2BY,IAAIC,KAAJ,CACJ,4DADI,CA3BZ;;AAAA;AAgCUd,gBAAAA,OAhCV,GAgCmBrB,GAAG,CAACc,IAAJ,CAASC,OAhC5B;AAAA;AAAA,uBAiCkCQ,qBAASC,WAAT,CAAqBH,OAArB,CAjClC;;AAAA;AAiCUI,gBAAAA,eAjCV;AAmCIxB,gBAAAA,GAAG,CAACW,IAAJ,CAAS;AAAEc,kBAAAA,QAAQ,EAAED,eAAe,CAACC;AAA5B,iBAAT;AAnCJ;AAAA;;AAAA;AAAA;AAAA;AAqCIzB,gBAAAA,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEe,kBAAAA,CAAC;AAAH,iBAArB;;AArCJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;;4GAyCA,kBAA8B3B,GAA9B,EAAmCC,GAAnC,EAAwCC,IAAxC;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAEUC,gBAAAA,OAFV,GAEoBH,GAAG,CAACI,GAAJ,CAAQ,eAAR,EAAyBC,KAAzB,CAA+B,UAAUC,MAAzC,CAFpB;AAAA;AAAA,uBAGuBC,YAAKC,OAAL,CAAaL,OAAb,CAHvB;;AAAA;AAGUM,gBAAAA,IAHV;AAIUC,gBAAAA,KAJV,GAIoBD,IAJpB,CAIUC,KAJV;;AAAA,qBAKQA,KALR;AAAA;AAAA;AAAA;;AAMMT,gBAAAA,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEF,kBAAAA,KAAK,EAALA;AAAF,iBAArB;AANN;;AAAA;AAUUkB,gBAAAA,SAVV,GAUsB5B,GAAG,CAACc,IAAJ,CAASe,UAV/B;AAWUO,gBAAAA,SAXV,GAWsB3B,IAAI,CAACwB,KAX3B;AAAA;AAAA,uBAYkCd,wBAAYkB,aAAZ,CAC5B,oBAAST,SAAT,CAD4B,EAE5BQ,SAF4B,CAZlC;;AAAA;AAYUd,gBAAAA,eAZV;AAiBUT,gBAAAA,OAjBV,GAiBoBb,GAAG,CAACc,IAAJ,CAASwB,QAjB7B;AAAA;AAAA,uBAmB+BC,SAAS,CAACC,YAAV,CAAuB3B,OAAvB,CAnB/B;;AAAA;AAAA;AAmBYa,gBAAAA,QAnBZ,yBAmBYA,QAnBZ;AAoBIzB,gBAAAA,GAAG,CAACW,IAAJ,CAAS;AAAEc,kBAAAA,QAAQ,EAARA;AAAF,iBAAT;AApBJ;AAAA;;AAAA;AAAA;AAAA;AAsBIzB,gBAAAA,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEe,kBAAAA,CAAC;AAAH,iBAArB;;AAtBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;;4GA0BA,kBAA8B3B,GAA9B,EAAmCC,GAAnC,EAAwCC,IAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEUC,gBAAAA,OAFV,GAEoBH,GAAG,CAACI,GAAJ,CAAQ,eAAR,EAAyBC,KAAzB,CAA+B,UAAUC,MAAzC,CAFpB;AAAA;AAAA,uBAGuBC,YAAKC,OAAL,CAAaL,OAAb,CAHvB;;AAAA;AAGUM,gBAAAA,IAHV;AAIUC,gBAAAA,KAJV,GAIoBD,IAJpB,CAIUC,KAJV;;AAAA,qBAKQA,KALR;AAAA;AAAA;AAAA;;AAMMT,gBAAAA,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEF,kBAAAA,KAAK,EAALA;AAAF,iBAArB;AANN;;AAAA;AAAA,qBAUQa,qBAASkB,UAAT,CAAoBhC,IAAI,CAACwB,KAAzB,CAVR;AAAA;AAAA;AAAA;;AAAA;AAAA,uBAW2Bd,wBAAYuB,oBAAZ,EAX3B;;AAAA;AAWYC,gBAAAA,MAXZ;AAYM1C,gBAAAA,GAAG,CAACW,IAAJ,CAAS;AAAE+B,kBAAAA,MAAM,EAANA;AAAF,iBAAT;AAZN;;AAAA;AAgBI1C,gBAAAA,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAED,kBAAAA,MAAM,EAAE;AAAV,iBAArB;AAhBJ;AAAA;;AAAA;AAAA;AAAA;AAkBIV,gBAAAA,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEe,kBAAAA,CAAC;AAAH,iBAArB;;AAlBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O",
      "sourceRoot": "C:\\personal\\interviews Tranning\\AUI_STUFF\\test_node\\src\\api\\",
      "sourcesContent": [
        "import UsersDAO from \"../dao/usersDAO\"\nimport CommentsDAO from \"../dao/commentsDAO\"\nimport { User } from \"./users.controller\"\nimport { ObjectId } from \"bson\"\n\nexport default class CommentsController {\n  static async apiPostComment(req, res, next) {\n    try {\n      const userJwt = req.get(\"Authorization\").slice(\"Bearer \".length)\n      const user = await User.decoded(userJwt)\n      var { error } = user\n      if (error) {\n        res.status(401).json({ error })\n        return\n      }\n\n      const movieId = req.body.user_id\n      const comment = req.body.comment\n      const date = new Date()\n\n      const commentResponse = await CommentsDAO.addComment(\n        ObjectId(userId),\n        user,\n        comment,\n        date,\n      )\n\n      const updatedComments = await UsersDAO.getUserByID(movieId)\n\n      res.json({ status: \"success\", comments: updatedComments.comments })\n    } catch (e) {\n      res.status(500).json({ e })\n    }\n  }\n\n  static async apiUpdateComment(req, res, next) {\n    try {\n      const userJwt = req.get(\"Authorization\").slice(\"Bearer \".length)\n      const user = await User.decoded(userJwt)\n      var { error } = user\n      if (error) {\n        res.status(401).json({ error })\n        return\n      }\n\n      const commentId = req.body.comment_id\n      const text = req.body.updated_comment\n      const date = new Date()\n\n      const commentResponse = await CommentsDAO.updateComment(\n        ObjectId(commentId),\n        user.email,\n        text,\n        date,\n      )\n\n      var { error } = commentResponse\n      if (error) {\n        res.status(400).json({ error })\n      }\n\n      if (commentResponse.modifiedCount === 0) {\n        throw new Error(\n          \"unable to update comment - user may not be original poster\",\n        )\n      }\n\n      const userId = req.body.user_id\n      const updatedComments = await UsersDAO.getUserByID(userId)\n\n      res.json({ comments: updatedComments.comments })\n    } catch (e) {\n      res.status(500).json({ e })\n    }\n  }\n\n  static async apiDeleteComment(req, res, next) {\n    try {\n      const userJwt = req.get(\"Authorization\").slice(\"Bearer \".length)\n      const user = await User.decoded(userJwt)\n      var { error } = user\n      if (error) {\n        res.status(401).json({ error })\n        return\n      }\n\n      const commentId = req.body.comment_id\n      const userEmail = user.email\n      const commentResponse = await CommentsDAO.deleteComment(\n        ObjectId(commentId),\n        userEmail,\n      )\n\n      const movieId = req.body.movie_id\n\n      const { comments } = await MoviesDAO.getMovieByID(movieId)\n      res.json({ comments })\n    } catch (e) {\n      res.status(500).json({ e })\n    }\n  }\n\n  static async apiCommentReport(req, res, next) {\n    try {\n      const userJwt = req.get(\"Authorization\").slice(\"Bearer \".length)\n      const user = await User.decoded(userJwt)\n      var { error } = user\n      if (error) {\n        res.status(401).json({ error })\n        return\n      }\n\n      if (UsersDAO.checkAdmin(user.email)) {\n        const report = await CommentsDAO.mostActiveCommenters()\n        res.json({ report })\n        return\n      }\n\n      res.status(401).json({ status: \"fail\" })\n    } catch (e) {\n      res.status(500).json({ e })\n    }\n  }\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1637500085575
  },
  "{\"assumptions\":{},\"sourceRoot\":\"C:\\\\personal\\\\interviews Tranning\\\\AUI_STUFF\\\\test_node\\\\src\\\\dao\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\personal\\\\interviews Tranning\\\\AUI_STUFF\\\\test_node\",\"filename\":\"C:\\\\personal\\\\interviews Tranning\\\\AUI_STUFF\\\\test_node\\\\src\\\\dao\\\\commentsDAO.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\personal\\\\interviews Tranning\\\\AUI_STUFF\\\\test_node\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-runtime\",\"visitor\":{\"MemberExpression\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":{},\"_verified\":{},\"Identifier\":{\"enter\":[null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"proposal-class-static-block\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ClassBody\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.16.0": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "C:\\personal\\interviews Tranning\\AUI_STUFF\\test_node\\src\\dao\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\personal\\interviews Tranning\\AUI_STUFF\\test_node",
      "filename": "C:\\personal\\interviews Tranning\\AUI_STUFF\\test_node\\src\\dao\\commentsDAO.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "C:\\personal\\interviews Tranning\\AUI_STUFF\\test_node",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-runtime",
          "visitor": {
            "MemberExpression": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": {},
            "_verified": {},
            "Identifier": {
              "enter": [
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "proposal-class-static-block",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ClassBody": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-private-property-in-object",
          "visitor": {
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\personal\\interviews Tranning\\AUI_STUFF\\test_node\\src\\dao\\commentsDAO.js",
        "plugins": [
          "classStaticBlock",
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\personal\\interviews Tranning\\AUI_STUFF\\test_node\\src\\dao\\commentsDAO.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\personal\\interviews Tranning\\AUI_STUFF\\test_node\\src\\dao\\",
        "sourceFileName": "commentsDAO.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _bson = require(\"bson\");\n\nvar comments;\n\nvar CommentsDAO = /*#__PURE__*/function () {\n  function CommentsDAO() {\n    (0, _classCallCheck2[\"default\"])(this, CommentsDAO);\n  }\n\n  (0, _createClass2[\"default\"])(CommentsDAO, null, [{\n    key: \"injectDB\",\n    value: function () {\n      var _injectDB = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee(conn) {\n        return _regenerator[\"default\"].wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!comments) {\n                  _context.next = 2;\n                  break;\n                }\n\n                return _context.abrupt(\"return\");\n\n              case 2:\n                _context.prev = 2;\n                _context.next = 5;\n                return conn.db(process.env.FOOTBALL_NS).collection(\"comments\");\n\n              case 5:\n                comments = _context.sent;\n                _context.next = 11;\n                break;\n\n              case 8:\n                _context.prev = 8;\n                _context.t0 = _context[\"catch\"](2);\n                console.error(\"Unable to establish collection handles in userDAO: \".concat(_context.t0));\n\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[2, 8]]);\n      }));\n\n      function injectDB(_x) {\n        return _injectDB.apply(this, arguments);\n      }\n\n      return injectDB;\n    }()\n    /**\n    Ticket: Create/Update Comments\n     For this ticket, you will need to implement the following two methods:\n     - addComment\n    - updateComment\n     You can find these methods below this docstring. Make sure to read the comments\n    to better understand the task.\n    */\n\n    /**\n     * Inserts a comment into the `comments` collection, with the following fields:\n        - \"name\", the name of the user posting the comment\n       - \"email\", the email of the user posting the comment\n       - \"movie_id\", the _id of the movie pertaining to the comment\n       - \"text\", the text of the comment\n       - \"date\", the date when the comment was posted\n      * @param {string} movieId - The _id of the movie in the `movies` collection.\n     * @param {Object} user - An object containing the user's name and email.\n     * @param {string} comment - The text of the comment.\n     * @param {string} date - The date on which the comment was posted.\n     * @returns {DAOResponse} Returns an object with either DB response or \"error\"\n     */\n\n  }, {\n    key: \"addComment\",\n    value: function () {\n      var _addComment = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee2(movieId, user, comment, date) {\n        var commentDoc;\n        return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                // TODO Ticket: Create/Update Comments\n                // Construct the comment document to be inserted into MongoDB.\n                commentDoc = {\n                  someField: \"someValue\"\n                };\n                _context2.next = 4;\n                return comments.insertOne(commentDoc);\n\n              case 4:\n                return _context2.abrupt(\"return\", _context2.sent);\n\n              case 7:\n                _context2.prev = 7;\n                _context2.t0 = _context2[\"catch\"](0);\n                console.error(\"Unable to post comment: \".concat(_context2.t0));\n                return _context2.abrupt(\"return\", {\n                  error: _context2.t0\n                });\n\n              case 11:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, null, [[0, 7]]);\n      }));\n\n      function addComment(_x2, _x3, _x4, _x5) {\n        return _addComment.apply(this, arguments);\n      }\n\n      return addComment;\n    }()\n    /**\n     * Updates the comment in the comment collection. Queries for the comment\n     * based by both comment _id field as well as the email field to doubly ensure\n     * the user has permission to edit this comment.\n     * @param {string} commentId - The _id of the comment to update.\n     * @param {string} userEmail - The email of the user who owns the comment.\n     * @param {string} text - The updated text of the comment.\n     * @param {string} date - The date on which the comment was updated.\n     * @returns {DAOResponse} Returns an object with either DB response or \"error\"\n     */\n\n  }, {\n    key: \"updateComment\",\n    value: function () {\n      var _updateComment = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee3(commentId, userEmail, text, date) {\n        var updateResponse;\n        return _regenerator[\"default\"].wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.prev = 0;\n                _context3.next = 3;\n                return comments.updateOne({\n                  someField: \"someValue\"\n                }, {\n                  $set: {\n                    someOtherField: \"someOtherValue\"\n                  }\n                });\n\n              case 3:\n                updateResponse = _context3.sent;\n                return _context3.abrupt(\"return\", updateResponse);\n\n              case 7:\n                _context3.prev = 7;\n                _context3.t0 = _context3[\"catch\"](0);\n                console.error(\"Unable to update comment: \".concat(_context3.t0));\n                return _context3.abrupt(\"return\", {\n                  error: _context3.t0\n                });\n\n              case 11:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, null, [[0, 7]]);\n      }));\n\n      function updateComment(_x6, _x7, _x8, _x9) {\n        return _updateComment.apply(this, arguments);\n      }\n\n      return updateComment;\n    }()\n  }, {\n    key: \"deleteComment\",\n    value: function () {\n      var _deleteComment = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee4(commentId, userEmail) {\n        var deleteResponse;\n        return _regenerator[\"default\"].wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.prev = 0;\n                _context4.next = 3;\n                return comments.deleteOne({\n                  _id: (0, _bson.ObjectId)(commentId)\n                });\n\n              case 3:\n                deleteResponse = _context4.sent;\n                return _context4.abrupt(\"return\", deleteResponse);\n\n              case 7:\n                _context4.prev = 7;\n                _context4.t0 = _context4[\"catch\"](0);\n                console.error(\"Unable to delete comment: \".concat(_context4.t0));\n                return _context4.abrupt(\"return\", {\n                  error: _context4.t0\n                });\n\n              case 11:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, null, [[0, 7]]);\n      }));\n\n      function deleteComment(_x10, _x11) {\n        return _deleteComment.apply(this, arguments);\n      }\n\n      return deleteComment;\n    }()\n  }, {\n    key: \"mostActiveCommenters\",\n    value: function () {\n      var _mostActiveCommenters = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee5() {\n        var pipeline, readConcern, aggregateResult;\n        return _regenerator[\"default\"].wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.prev = 0;\n                // TODO Ticket: User Report\n                // Return the 20 users who have commented the most on MFlix.\n                pipeline = []; // TODO Ticket: User Report\n                // Use a more durable Read Concern here to make sure this data is not stale.\n\n                readConcern = comments.readConcern;\n                _context5.next = 5;\n                return comments.aggregate(pipeline, {\n                  readConcern: readConcern\n                });\n\n              case 5:\n                aggregateResult = _context5.sent;\n                _context5.next = 8;\n                return aggregateResult.toArray();\n\n              case 8:\n                return _context5.abrupt(\"return\", _context5.sent);\n\n              case 11:\n                _context5.prev = 11;\n                _context5.t0 = _context5[\"catch\"](0);\n                console.error(\"Unable to retrieve most active commenters: \".concat(_context5.t0));\n                return _context5.abrupt(\"return\", {\n                  error: _context5.t0\n                });\n\n              case 15:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, null, [[0, 11]]);\n      }));\n\n      function mostActiveCommenters() {\n        return _mostActiveCommenters.apply(this, arguments);\n      }\n\n      return mostActiveCommenters;\n    }()\n  }]);\n  return CommentsDAO;\n}();\n/**\n * Success/Error return object\n * @typedef DAOResponse\n * @property {boolean} [success] - Success\n * @property {string} [error] - Error\n */\n\n\nexports[\"default\"] = CommentsDAO;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "commentsDAO.js"
      ],
      "names": [
        "comments",
        "CommentsDAO",
        "conn",
        "db",
        "process",
        "env",
        "FOOTBALL_NS",
        "collection",
        "console",
        "error",
        "movieId",
        "user",
        "comment",
        "date",
        "commentDoc",
        "someField",
        "insertOne",
        "commentId",
        "userEmail",
        "text",
        "updateOne",
        "$set",
        "someOtherField",
        "updateResponse",
        "deleteOne",
        "_id",
        "deleteResponse",
        "pipeline",
        "readConcern",
        "aggregate",
        "aggregateResult",
        "toArray"
      ],
      "mappings": ";;;;;;;;;;;;;;;;;AAAA;;AAEA,IAAIA,QAAJ;;IAEqBC,W;;;;;;;;oGACnB,iBAAsBC,IAAtB;AAAA;AAAA;AAAA;AAAA;AAAA,qBACMF,QADN;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA,uBAKqBE,IAAI,CAACC,EAAL,CAAQC,OAAO,CAACC,GAAR,CAAYC,WAApB,EAAiCC,UAAjC,CAA4C,UAA5C,CALrB;;AAAA;AAKIP,gBAAAA,QALJ;AAAA;AAAA;;AAAA;AAAA;AAAA;AAOIQ,gBAAAA,OAAO,CAACC,KAAR;;AAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;AAWA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;AAKE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;sGAGE,kBAAwBC,OAAxB,EAAiCC,IAAjC,EAAuCC,OAAvC,EAAgDC,IAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEI;AACA;AACMC,gBAAAA,UAJV,GAIuB;AAAEC,kBAAAA,SAAS,EAAE;AAAb,iBAJvB;AAAA;AAAA,uBAMiBf,QAAQ,CAACgB,SAAT,CAAmBF,UAAnB,CANjB;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAQIN,gBAAAA,OAAO,CAACC,KAAR;AARJ,kDASW;AAAEA,kBAAAA,KAAK;AAAP,iBATX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;AAaA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;yGACE,kBAA2BQ,SAA3B,EAAsCC,SAAtC,EAAiDC,IAAjD,EAAuDN,IAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAKiCb,QAAQ,CAACoB,SAAT,CAC3B;AAAEL,kBAAAA,SAAS,EAAE;AAAb,iBAD2B,EAE3B;AAAEM,kBAAAA,IAAI,EAAE;AAAEC,oBAAAA,cAAc,EAAE;AAAlB;AAAR,iBAF2B,CALjC;;AAAA;AAKUC,gBAAAA,cALV;AAAA,kDAUWA,cAVX;;AAAA;AAAA;AAAA;AAYIf,gBAAAA,OAAO,CAACC,KAAR;AAZJ,kDAaW;AAAEA,kBAAAA,KAAK;AAAP,iBAbX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;;yGAiBA,kBAA2BQ,SAA3B,EAAsCC,SAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAaiClB,QAAQ,CAACwB,SAAT,CAAmB;AAC9CC,kBAAAA,GAAG,EAAE,oBAASR,SAAT;AADyC,iBAAnB,CAbjC;;AAAA;AAaUS,gBAAAA,cAbV;AAAA,kDAiBWA,cAjBX;;AAAA;AAAA;AAAA;AAmBIlB,gBAAAA,OAAO,CAACC,KAAR;AAnBJ,kDAoBW;AAAEA,kBAAAA,KAAK;AAAP,iBApBX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;;gHAwBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASI;AACA;AACMkB,gBAAAA,QAXV,GAWqB,EAXrB,EAaI;AACA;;AACMC,gBAAAA,WAfV,GAewB5B,QAAQ,CAAC4B,WAfjC;AAAA;AAAA,uBAiBkC5B,QAAQ,CAAC6B,SAAT,CAAmBF,QAAnB,EAA6B;AACzDC,kBAAAA,WAAW,EAAXA;AADyD,iBAA7B,CAjBlC;;AAAA;AAiBUE,gBAAAA,eAjBV;AAAA;AAAA,uBAqBiBA,eAAe,CAACC,OAAhB,EArBjB;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAuBIvB,gBAAAA,OAAO,CAACC,KAAR;AAvBJ,kDAwBW;AAAEA,kBAAAA,KAAK;AAAP,iBAxBX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;;AA6BF;AACA;AACA;AACA;AACA;AACA",
      "sourceRoot": "C:\\personal\\interviews Tranning\\AUI_STUFF\\test_node\\src\\dao\\",
      "sourcesContent": [
        "import { ObjectId } from \"bson\"\n\nlet comments\n\nexport default class CommentsDAO {\n  static async injectDB(conn) {\n    if (comments) {\n      return\n    }\n    try {\n      comments = await conn.db(process.env.FOOTBALL_NS).collection(\"comments\")\n    } catch (e) {\n      console.error(`Unable to establish collection handles in userDAO: ${e}`)\n    }\n  }\n\n  /**\n  Ticket: Create/Update Comments\n\n  For this ticket, you will need to implement the following two methods:\n\n  - addComment\n  - updateComment\n\n  You can find these methods below this docstring. Make sure to read the comments\n  to better understand the task.\n  */\n\n  /**\n   * Inserts a comment into the `comments` collection, with the following fields:\n\n     - \"name\", the name of the user posting the comment\n     - \"email\", the email of the user posting the comment\n     - \"movie_id\", the _id of the movie pertaining to the comment\n     - \"text\", the text of the comment\n     - \"date\", the date when the comment was posted\n\n   * @param {string} movieId - The _id of the movie in the `movies` collection.\n   * @param {Object} user - An object containing the user's name and email.\n   * @param {string} comment - The text of the comment.\n   * @param {string} date - The date on which the comment was posted.\n   * @returns {DAOResponse} Returns an object with either DB response or \"error\"\n   */\n  static async addComment(movieId, user, comment, date) {\n    try {\n      // TODO Ticket: Create/Update Comments\n      // Construct the comment document to be inserted into MongoDB.\n      const commentDoc = { someField: \"someValue\" }\n\n      return await comments.insertOne(commentDoc)\n    } catch (e) {\n      console.error(`Unable to post comment: ${e}`)\n      return { error: e }\n    }\n  }\n\n  /**\n   * Updates the comment in the comment collection. Queries for the comment\n   * based by both comment _id field as well as the email field to doubly ensure\n   * the user has permission to edit this comment.\n   * @param {string} commentId - The _id of the comment to update.\n   * @param {string} userEmail - The email of the user who owns the comment.\n   * @param {string} text - The updated text of the comment.\n   * @param {string} date - The date on which the comment was updated.\n   * @returns {DAOResponse} Returns an object with either DB response or \"error\"\n   */\n  static async updateComment(commentId, userEmail, text, date) {\n    try {\n      // TODO Ticket: Create/Update Comments\n      // Use the commentId and userEmail to select the proper comment, then\n      // update the \"text\" and \"date\" fields of the selected comment.\n      const updateResponse = await comments.updateOne(\n        { someField: \"someValue\" },\n        { $set: { someOtherField: \"someOtherValue\" } },\n      )\n\n      return updateResponse\n    } catch (e) {\n      console.error(`Unable to update comment: ${e}`)\n      return { error: e }\n    }\n  }\n\n  static async deleteComment(commentId, userEmail) {\n    /**\n    Ticket: Delete Comments\n\n    Implement the deleteOne() call in this method.\n\n    Ensure the delete operation is limited so only the user can delete their own\n    comments, but not anyone else's comments.\n    */\n\n    try {\n      // TODO Ticket: Delete Comments\n      // Use the userEmail and commentId to delete the proper comment.\n      const deleteResponse = await comments.deleteOne({\n        _id: ObjectId(commentId),\n      })\n\n      return deleteResponse\n    } catch (e) {\n      console.error(`Unable to delete comment: ${e}`)\n      return { error: e }\n    }\n  }\n\n  static async mostActiveCommenters() {\n    /**\n    Ticket: User Report\n\n    Build a pipeline that returns the 20 most frequent commenters on the MFlix\n    site. You can do this by counting the number of occurrences of a user's\n    email in the `comments` collection.\n    */\n    try {\n      // TODO Ticket: User Report\n      // Return the 20 users who have commented the most on MFlix.\n      const pipeline = []\n\n      // TODO Ticket: User Report\n      // Use a more durable Read Concern here to make sure this data is not stale.\n      const readConcern = comments.readConcern\n\n      const aggregateResult = await comments.aggregate(pipeline, {\n        readConcern,\n      })\n\n      return await aggregateResult.toArray()\n    } catch (e) {\n      console.error(`Unable to retrieve most active commenters: ${e}`)\n      return { error: e }\n    }\n  }\n}\n\n/**\n * Success/Error return object\n * @typedef DAOResponse\n * @property {boolean} [success] - Success\n * @property {string} [error] - Error\n */\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1637500123099
  }
}